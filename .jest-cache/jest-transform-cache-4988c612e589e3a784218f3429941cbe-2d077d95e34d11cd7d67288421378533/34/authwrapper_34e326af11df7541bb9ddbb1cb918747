95220759ecee4f7abb7bace3f3422725
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "AuthWrapper", {
    enumerable: true,
    get: function() {
        return AuthWrapper;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("next-auth/react");
const _navigation = require("next/navigation");
const _react1 = require("react");
function AuthWrapper({ children, fallback }) {
    const { data: session, status } = (0, _react.useSession)();
    const router = (0, _navigation.useRouter)();
    const [isServerOnline, setIsServerOnline] = (0, _react1.useState)(true);
    const [hasStoredSession, setHasStoredSession] = (0, _react1.useState)(false);
    // Check if user has stored session data (indicating they were previously logged in)
    (0, _react1.useEffect)(()=>{
        if (typeof window !== 'undefined') {
            const nextAuthSession = localStorage.getItem('next-auth.session-token') || localStorage.getItem('__Secure-next-auth.session-token') || document.cookie.includes('next-auth.session-token') || document.cookie.includes('__Secure-next-auth.session-token');
            setHasStoredSession(!!nextAuthSession);
        }
    }, []);
    // Check server connectivity when status is unauthenticated
    (0, _react1.useEffect)(()=>{
        // Don't redirect during tests
        if (process.env.NODE_ENV === 'test') {
            return;
        }
        if (status === 'unauthenticated' && hasStoredSession) {
            const checkServerStatus = async ()=>{
                try {
                    const response = await fetch('/api/health', {
                        method: 'HEAD',
                        cache: 'no-cache',
                        signal: AbortSignal.timeout(5000)
                    });
                    if (!response.ok) {
                        setIsServerOnline(false);
                        router.push('/server-offline');
                        return;
                    }
                    setIsServerOnline(true);
                    // If server is online but user is unauthenticated, redirect to login
                    if (!fallback) {
                        router.push('/auth/v1/login');
                    }
                } catch (error) {
                    setIsServerOnline(false);
                    router.push('/server-offline');
                }
            };
            checkServerStatus();
        } else if (status === 'unauthenticated' && !hasStoredSession && !fallback) {
            // No stored session and unauthenticated - direct to login
            router.push('/auth/v1/login');
        }
    }, [
        status,
        fallback,
        router,
        hasStoredSession
    ]);
    if (status === 'loading') {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "bg-background flex h-screen items-center justify-center",
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "mx-auto max-w-sm space-y-4 px-6 text-center",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "relative",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "border-muted border-t-primary mx-auto h-12 w-12 animate-spin rounded-full border-4"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "border-primary/20 absolute inset-0 mx-auto h-12 w-12 animate-pulse rounded-full border-4"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-foreground text-lg font-medium",
                                children: "Authenticating"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-muted-foreground text-sm",
                                children: "Verifying your Google Drive access..."
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "bg-muted mx-auto h-1 w-48 overflow-hidden rounded-full",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "bg-primary h-full animate-pulse rounded-full",
                            style: {
                                width: '60%'
                            }
                        })
                    })
                ]
            })
        });
    }
    if (status === 'unauthenticated') {
        if (fallback) {
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
                children: fallback
            });
        }
        // If we have stored session but are unauthenticated, likely server issue
        if (hasStoredSession && !isServerOnline) {
            return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex h-screen items-center justify-center",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "text-center",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "border-primary mx-auto mb-2 h-8 w-8 animate-spin rounded-full border-2 border-t-transparent"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                            children: "Checking server connection..."
                        })
                    ]
                })
            });
        }
        // Show access denied message for users without stored session
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "flex h-screen items-center justify-center",
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "text-center",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    children: "Access denied. Please sign in."
                })
            })
        });
    }
    if (status === 'authenticated' && session) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
            children: children
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: "flex h-screen items-center justify-center",
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "border-primary h-8 w-8 animate-spin rounded-full border-2 border-t-transparent"
        })
    });
}

//# sourceMappingURL=data:application/json;base64,