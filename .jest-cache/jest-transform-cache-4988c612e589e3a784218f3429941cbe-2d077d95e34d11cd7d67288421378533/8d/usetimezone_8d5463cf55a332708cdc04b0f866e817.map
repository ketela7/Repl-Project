{"version":3,"names":["cov_aeha4cvxq","actualCoverage","s","useTimezone","f","timezone","setTimezone","_react","useState","isLoading","setIsLoading","useEffect","detectedTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone"],"sources":["/home/runner/workspace/src/lib/hooks/use-timezone.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nexport function useTimezone() {\n  const [timezone, setTimezone] = useState<string>('UTC')\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    try {\n      const detectedTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone\n      setTimezone(detectedTimezone)\n    } catch {\n      setTimezone('UTC')\n    } finally {\n      setIsLoading(false)\n    }\n  }, [])\n\n  return {\n    timezone,\n    isLoading,\n    setTimezone,\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOQ;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;+BALQ;;;;;;WAAAC,WAAA;;;;;iCAFoB;AAE7B,SAASA,YAAA;EAAA;EAAAH,aAAA,GAAAI,CAAA;EACd,MAAM,CAACC,QAAA,EAAUC,WAAA,CAAY;EAAA;EAAA,CAAAN,aAAA,GAAAE,CAAA,OAAG,IAAAK,MAAA,CAAAC,QAAQ,EAAS;EACjD,MAAM,CAACC,SAAA,EAAWC,YAAA,CAAa;EAAA;EAAA,CAAAV,aAAA,GAAAE,CAAA,OAAG,IAAAK,MAAA,CAAAC,QAAQ,EAAC;EAAA;EAAAR,aAAA,GAAAE,CAAA;EAE3C,IAAAK,MAAA,CAAAI,SAAS,EAAC;IAAA;IAAAX,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IACR,IAAI;MACF,MAAMU,gBAAA;MAAA;MAAA,CAAAZ,aAAA,GAAAE,CAAA,OAAmBW,IAAA,CAAKC,cAAc,GAAGC,eAAe,GAAGC,QAAQ;MAAA;MAAAhB,aAAA,GAAAE,CAAA;MACzEI,WAAA,CAAYM,gBAAA;IACd,EAAE,MAAM;MAAA;MAAAZ,aAAA,GAAAE,CAAA;MACNI,WAAA,CAAY;IACd,UAAU;MAAA;MAAAN,aAAA,GAAAE,CAAA;MACRQ,YAAA,CAAa;IACf;EACF,GAAG,EAAE;EAAA;EAAAV,aAAA,GAAAE,CAAA;EAEL,OAAO;IACLG,QAAA;IACAI,SAAA;IACAH;EACF;AACF","ignoreList":[]}