{"version":3,"names":["RegisterFormV1","FormSchema","cov_77x9vguuf","s","_zod1","z","object","email","string","message","password","min","confirmPassword","refine","data","f","path","form","_reacthookform","useForm","resolver","_zod","zodResolver","defaultValues","onSubmit","_sonner","toast","description","_jsxruntime","jsx","className","JSON","stringify","_form","Form","jsxs","handleSubmit","FormField","control","name","render","field","FormItem","FormLabel","FormControl","_input","Input","id","type","placeholder","autoComplete","FormMessage","_button","Button"],"sources":["/home/runner/workspace/src/app/(main)/auth/v1/register/_components/register-form.tsx"],"sourcesContent":["'use client'\n\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { useForm } from 'react-hook-form'\nimport { toast } from 'sonner'\nimport { z } from 'zod'\n\nimport { Button } from '@/components/ui/button'\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\n\nconst FormSchema = z\n  .object({\n    email: z.string().email({ message: 'Please enter a valid email address.' }),\n    password: z.string().min(6, { message: 'Password must be at least 6 characters.' }),\n    confirmPassword: z.string().min(6, { message: 'Confirm Password must be at least 6 characters.' }),\n  })\n  .refine(data => data.password === data.confirmPassword, {\n    message: 'Passwords do not match.',\n    path: ['confirmPassword'],\n  })\n\nexport function RegisterFormV1() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n  })\n\n  const onSubmit = async (data: z.infer<typeof FormSchema>) => {\n    toast('You submitted the following values', {\n      description: (\n        <pre className=\"mt-2 w-[320px] rounded-md bg-neutral-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email Address</FormLabel>\n              <FormControl>\n                <Input id=\"email\" type=\"email\" placeholder=\"you@example.com\" autoComplete=\"email\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Password</FormLabel>\n              <FormControl>\n                <Input id=\"password\" type=\"password\" placeholder=\"••••••••\" autoComplete=\"new-password\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"confirmPassword\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Confirm Password</FormLabel>\n              <FormControl>\n                <Input\n                  id=\"confirmPassword\"\n                  type=\"password\"\n                  placeholder=\"••••••••\"\n                  autoComplete=\"new-password\"\n                  {...field}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button className=\"w-full\" type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </Form>\n  )\n}\n"],"mappings":"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","ignoreList":[]}