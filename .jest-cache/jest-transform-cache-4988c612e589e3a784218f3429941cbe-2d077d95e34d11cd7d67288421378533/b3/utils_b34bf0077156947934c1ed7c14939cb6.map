{"version":3,"names":["cn","cov_3awgc3lyh","f","s","errorToast","formatCreationTime","formatFileTime","getInitials","infoToast","loadingToast","successToast","toastUtils","inputs","_tailwindmerge","twMerge","_clsx","clsx","message","description","_sonner","toast","success","duration","error","loading","start","id","b","dismiss","generic","options","shared","count","apiError","details","driveAccessDenied","permissionDenied","info","dateString","timezone","date","Date","isNaN","getTime","Intl","DateTimeFormat","year","month","day","hour","minute","timeZone","format","name","split","map","word","charAt","join","toUpperCase","slice"],"sources":["/home/runner/workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\nimport { toast } from 'sonner'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function successToast(message: string, description?: string) {\n  toast.success(message, {\n    description,\n    duration: 4000,\n  })\n}\n\nexport function errorToast(message: string, description?: string) {\n  toast.error(message, {\n    description,\n    duration: 6000,\n  })\n}\n\nexport function loadingToast(message: string, description?: string) {\n  return toast.loading(message, {\n    description,\n  })\n}\n\n// Extended toast utility functions\nloadingToast.start = (message: string, id?: string) => {\n  return toast.loading(message, id ? { id } : {})\n}\n\nloadingToast.success = (message: string, id?: string) => {\n  toast.success(message, id ? { id } : {})\n}\n\nloadingToast.error = (message: string, id?: string) => {\n  toast.error(message, id ? { id } : {})\n}\n\nloadingToast.dismiss = (id?: string) => {\n  toast.dismiss(id)\n}\n\nsuccessToast.generic = (message: string, options?: any) => {\n  toast.success(message, options)\n}\n\nsuccessToast.shared = (count: number) => {\n  toast.success(`Successfully shared ${count} item${count > 1 ? 's' : ''}`)\n}\n\nerrorToast.generic = (message: string, options?: any) => {\n  toast.error(message, options)\n}\n\nerrorToast.apiError = (message: string, details?: string) => {\n  toast.error(message, { description: details })\n}\n\nerrorToast.driveAccessDenied = () => {\n  toast.error('Google Drive access denied', {\n    description: 'Please reconnect your Google Drive account',\n  })\n}\n\nerrorToast.permissionDenied = () => {\n  toast.error('Permission denied', {\n    description: 'You do not have permission to perform this action',\n  })\n}\n\nexport function infoToast(message: string, description?: string) {\n  toast.info(message, {\n    description,\n    duration: 4000,\n  })\n}\n\nexport function formatFileTime(dateString: string, timezone?: string): string {\n  try {\n    const date = new Date(dateString)\n    if (isNaN(date.getTime())) return 'Invalid date'\n\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      timeZone: timezone ?? 'UTC',\n    }).format(date)\n  } catch {\n    return 'Invalid date'\n  }\n}\n\nexport function formatCreationTime(dateString: string, timezone?: string): string {\n  return formatFileTime(dateString, timezone)\n}\n\nexport function getInitials(name: string): string {\n  return name\n    .split(' ')\n    .map(word => word.charAt(0))\n    .join('')\n    .toUpperCase()\n    .slice(0, 2)\n}\n\nexport const toastUtils = {\n  success: successToast,\n  error: errorToast,\n  loading: loadingToast,\n  info: infoToast,\n}\n"],"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","ignoreList":[]}