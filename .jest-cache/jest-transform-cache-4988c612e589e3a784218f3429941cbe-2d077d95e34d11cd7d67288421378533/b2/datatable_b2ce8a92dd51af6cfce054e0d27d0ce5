6145818f245276aceed31fb5ff041c77
"use strict";

/* istanbul ignore next */
function cov_xnr4lkt7e() {
  var path = "/home/runner/workspace/src/components/data-table/data-table.tsx";
  var hash = "a866cd15b79579211dc8f07b9fb75c53f9f9eaf3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/components/data-table/data-table.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 25
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 48
        }
      },
      "6": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "7": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 52
        }
      },
      "8": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "9": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 48
        }
      },
      "10": {
        start: {
          line: 19,
          column: 39
        },
        end: {
          line: 54,
          column: 6
        }
      },
      "11": {
        start: {
          line: 23,
          column: 83
        },
        end: {
          line: 30,
          column: 38
        }
      },
      "12": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "13": {
        start: {
          line: 37,
          column: 80
        },
        end: {
          line: 39,
          column: 34
        }
      },
      "14": {
        start: {
          line: 40,
          column: 71
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "15": {
        start: {
          line: 42,
          column: 82
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "16": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "17": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "18": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "DataTable",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 18
          }
        },
        loc: {
          start: {
            line: 18,
            column: 109
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 54
          },
          end: {
            line: 23,
            column: 55
          }
        },
        loc: {
          start: {
            line: 23,
            column: 83
          },
          end: {
            line: 30,
            column: 38
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 58
          },
          end: {
            line: 24,
            column: 59
          }
        },
        loc: {
          start: {
            line: 24,
            column: 68
          },
          end: {
            line: 29,
            column: 25
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 37,
            column: 59
          },
          end: {
            line: 37,
            column: 60
          }
        },
        loc: {
          start: {
            line: 37,
            column: 80
          },
          end: {
            line: 39,
            column: 34
          }
        },
        line: 37
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 50
          },
          end: {
            line: 40,
            column: 51
          }
        },
        loc: {
          start: {
            line: 40,
            column: 71
          },
          end: {
            line: 45,
            column: 30
          }
        },
        line: 40
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 42,
            column: 60
          },
          end: {
            line: 42,
            column: 61
          }
        },
        loc: {
          start: {
            line: 42,
            column: 82
          },
          end: {
            line: 44,
            column: 39
          }
        },
        line: 42
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 37
          },
          end: {
            line: 18,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 47
          },
          end: {
            line: 18,
            column: 49
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 64
          },
          end: {
            line: 18,
            column: 69
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 42
          },
          end: {
            line: 27,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 65
          },
          end: {
            line: 27,
            column: 69
          }
        }, {
          start: {
            line: 27,
            column: 72
          },
          end: {
            line: 27,
            column: 152
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 51,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 60
          },
          end: {
            line: 45,
            column: 31
          }
        }, {
          start: {
            line: 45,
            column: 48
          },
          end: {
            line: 51,
            column: 18
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 60
          },
          end: {
            line: 45,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 87
          },
          end: {
            line: 40,
            column: 18
          }
        }, {
          start: {
            line: 40,
            column: 21
          },
          end: {
            line: 45,
            column: 31
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 38
          },
          end: {
            line: 41,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 38
          },
          end: {
            line: 41,
            column: 57
          }
        }, {
          start: {
            line: 41,
            column: 61
          },
          end: {
            line: 41,
            column: 71
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 61,
            column: 15
          },
          end: {
            line: 63,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 15
          },
          end: {
            line: 61,
            column: 28
          }
        }, {
          start: {
            line: 61,
            column: 32
          },
          end: {
            line: 63,
            column: 13
          }
        }],
        line: 61
      },
      "8": {
        loc: {
          start: {
            line: 64,
            column: 15
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 15
          },
          end: {
            line: 64,
            column: 22
          }
        }, {
          start: {
            line: 64,
            column: 26
          },
          end: {
            line: 66,
            column: 13
          }
        }],
        line: 64
      },
      "9": {
        loc: {
          start: {
            line: 67,
            column: 15
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 15
          },
          end: {
            line: 67,
            column: 25
          }
        }, {
          start: {
            line: 67,
            column: 29
          },
          end: {
            line: 69,
            column: 13
          }
        }],
        line: 67
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/components/data-table/data-table.tsx"],
      sourcesContent: ["import { DndContext, closestCenter, type UniqueIdentifier, type SensorDescriptor } from '@dnd-kit/core'\nimport { restrictToVerticalAxis } from '@dnd-kit/modifiers'\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable'\nimport { ColumnDef, flexRender, type Table as TanStackTable } from '@tanstack/react-table'\n\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'\n\nimport { DraggableRow } from './draggable-row'\n\ninterface DataTableProps<TData, TValue> {\n  table: TanStackTable<TData>\n  columns: ColumnDef<TData, TValue>[]\n  dataIds?: UniqueIdentifier[]\n  dndEnabled?: boolean\n  handleDragEnd?: () => void\n  sensors?: SensorDescriptor<any>[]\n  sortableId?: string\n}\n\nexport function DataTable<TData, TValue>({\n  table,\n  columns,\n  dataIds = [],\n  dndEnabled = false,\n  handleDragEnd,\n  sensors,\n  sortableId,\n}: DataTableProps<TData, TValue>) {\n  const tableContent = (\n    <Table>\n      <TableHeader className=\"bg-muted sticky top-0 z-10\">\n        {table.getHeaderGroups().map(headerGroup => (\n          <TableRow key={headerGroup.id}>\n            {headerGroup.headers.map(header => {\n              return (\n                <TableHead key={header.id} colSpan={header.colSpan}>\n                  {header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())}\n                </TableHead>\n              )\n            })}\n          </TableRow>\n        ))}\n      </TableHeader>\n      <TableBody className=\"**:data-[slot=table-cell]:first:w-8\">\n        {table.getRowModel().rows.length ? (\n          dndEnabled ? (\n            <SortableContext items={dataIds} strategy={verticalListSortingStrategy}>\n              {table.getRowModel().rows.map(row => (\n                <DraggableRow key={row.id} row={row} />\n              ))}\n            </SortableContext>\n          ) : (\n            table.getRowModel().rows.map(row => (\n              <TableRow key={row.id} data-state={row.getIsSelected() && 'selected'}>\n                {row.getVisibleCells().map(cell => (\n                  <TableCell key={cell.id}>{flexRender(cell.column.columnDef.cell, cell.getContext())}</TableCell>\n                ))}\n              </TableRow>\n            ))\n          )\n        ) : (\n          <TableRow>\n            <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n              No results.\n            </TableCell>\n          </TableRow>\n        )}\n      </TableBody>\n    </Table>\n  )\n\n  if (dndEnabled) {\n    return (\n      <DndContext\n        collisionDetection={closestCenter}\n        modifiers={[restrictToVerticalAxis]}\n        {...(handleDragEnd && { onDragEnd: handleDragEnd })}\n        {...(sensors && { sensors })}\n        {...(sortableId && { id: sortableId })}\n      >\n        {tableContent}\n      </DndContext>\n    )\n  }\n\n  return tableContent\n}\n"],
      names: ["DataTable", "table", "columns", "dataIds", "dndEnabled", "handleDragEnd", "sensors", "sortableId", "tableContent", "Table", "TableHeader", "className", "getHeaderGroups", "map", "headerGroup", "TableRow", "headers", "header", "TableHead", "colSpan", "isPlaceholder", "flexRender", "column", "columnDef", "getContext", "id", "TableBody", "getRowModel", "rows", "length", "SortableContext", "items", "strategy", "verticalListSortingStrategy", "row", "DraggableRow", "data-state", "getIsSelected", "getVisibleCells", "cell", "TableCell", "DndContext", "collisionDetection", "closestCenter", "modifiers", "restrictToVerticalAxis", "onDragEnd"],
      mappings: ";;;;+BAmBgBA;;;eAAAA;;;;sBAnBwE;2BACjD;0BACsB;4BACM;uBAEW;8BAEjD;AAYtB,SAASA,UAAyB,EACvCC,KAAK,EACLC,OAAO,EACPC,UAAU,EAAE,EACZC,aAAa,KAAK,EAClBC,aAAa,EACbC,OAAO,EACPC,UAAU,EACoB;IAC9B,MAAMC,6BACJ,sBAACC,YAAK;;0BACJ,qBAACC,kBAAW;gBAACC,WAAU;0BACpBV,MAAMW,eAAe,GAAGC,GAAG,CAACC,CAAAA,4BAC3B,qBAACC,eAAQ;kCACND,YAAYE,OAAO,CAACH,GAAG,CAACI,CAAAA;4BACvB,qBACE,qBAACC,gBAAS;gCAAiBC,SAASF,OAAOE,OAAO;0CAC/CF,OAAOG,aAAa,GAAG,OAAOC,IAAAA,sBAAU,EAACJ,OAAOK,MAAM,CAACC,SAAS,CAACN,MAAM,EAAEA,OAAOO,UAAU;+BAD7EP,OAAOQ,EAAE;wBAI7B;uBAPaX,YAAYW,EAAE;;0BAWjC,qBAACC,gBAAS;gBAACf,WAAU;0BAClBV,MAAM0B,WAAW,GAAGC,IAAI,CAACC,MAAM,GAC9BzB,2BACE,qBAAC0B,yBAAe;oBAACC,OAAO5B;oBAAS6B,UAAUC,qCAA2B;8BACnEhC,MAAM0B,WAAW,GAAGC,IAAI,CAACf,GAAG,CAACqB,CAAAA,oBAC5B,qBAACC,0BAAY;4BAAcD,KAAKA;2BAAbA,IAAIT,EAAE;qBAI7BxB,MAAM0B,WAAW,GAAGC,IAAI,CAACf,GAAG,CAACqB,CAAAA,oBAC3B,qBAACnB,eAAQ;wBAAcqB,cAAYF,IAAIG,aAAa,MAAM;kCACvDH,IAAII,eAAe,GAAGzB,GAAG,CAAC0B,CAAAA,qBACzB,qBAACC,gBAAS;0CAAgBnB,IAAAA,sBAAU,EAACkB,KAAKjB,MAAM,CAACC,SAAS,CAACgB,IAAI,EAAEA,KAAKf,UAAU;+BAAhEe,KAAKd,EAAE;uBAFZS,IAAIT,EAAE,mBAQzB,qBAACV,eAAQ;8BACP,cAAA,qBAACyB,gBAAS;wBAACrB,SAASjB,QAAQ2B,MAAM;wBAAElB,WAAU;kCAAmB;;;;;;IAS3E,IAAIP,YAAY;QACd,qBACE,qBAACqC,gBAAU;YACTC,oBAAoBC,mBAAa;YACjCC,WAAW;gBAACC,iCAAsB;aAAC;YAClC,GAAIxC,iBAAiB;gBAAEyC,WAAWzC;YAAc,CAAC;YACjD,GAAIC,WAAW;gBAAEA;YAAQ,CAAC;YAC1B,GAAIC,cAAc;gBAAEkB,IAAIlB;YAAW,CAAC;sBAEpCC;;IAGP;IAEA,OAAOA;AACT"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a866cd15b79579211dc8f07b9fb75c53f9f9eaf3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_xnr4lkt7e = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_xnr4lkt7e();
cov_xnr4lkt7e().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_xnr4lkt7e().s[1]++;
Object.defineProperty(exports, "DataTable", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_xnr4lkt7e().f[0]++;
    cov_xnr4lkt7e().s[2]++;
    return DataTable;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_xnr4lkt7e().s[3]++, require("react/jsx-runtime"));
const _core =
/* istanbul ignore next */
(cov_xnr4lkt7e().s[4]++, require("@dnd-kit/core"));
const _modifiers =
/* istanbul ignore next */
(cov_xnr4lkt7e().s[5]++, require("@dnd-kit/modifiers"));
const _sortable =
/* istanbul ignore next */
(cov_xnr4lkt7e().s[6]++, require("@dnd-kit/sortable"));
const _reacttable =
/* istanbul ignore next */
(cov_xnr4lkt7e().s[7]++, require("@tanstack/react-table"));
const _table =
/* istanbul ignore next */
(cov_xnr4lkt7e().s[8]++, require("../ui/table"));
const _draggablerow =
/* istanbul ignore next */
(cov_xnr4lkt7e().s[9]++, require("./draggable-row"));
function DataTable({
  table,
  columns,
  dataIds =
  /* istanbul ignore next */
  (cov_xnr4lkt7e().b[0][0]++, []),
  dndEnabled =
  /* istanbul ignore next */
  (cov_xnr4lkt7e().b[1][0]++, false),
  handleDragEnd,
  sensors,
  sortableId
}) {
  /* istanbul ignore next */
  cov_xnr4lkt7e().f[1]++;
  const tableContent =
  /* istanbul ignore next */
  (/*#__PURE__*/cov_xnr4lkt7e().s[10]++, (0, _jsxruntime.jsxs)(_table.Table, {
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_table.TableHeader, {
      className: "bg-muted sticky top-0 z-10",
      children: table.getHeaderGroups().map(headerGroup => {
        /* istanbul ignore next */
        cov_xnr4lkt7e().f[2]++;
        cov_xnr4lkt7e().s[11]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_table.TableRow, {
          children: headerGroup.headers.map(header => {
            /* istanbul ignore next */
            cov_xnr4lkt7e().f[3]++;
            cov_xnr4lkt7e().s[12]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)(_table.TableHead, {
              colSpan: header.colSpan,
              children: header.isPlaceholder ?
              /* istanbul ignore next */
              (cov_xnr4lkt7e().b[2][0]++, null) :
              /* istanbul ignore next */
              (cov_xnr4lkt7e().b[2][1]++, (0, _reacttable.flexRender)(header.column.columnDef.header, header.getContext()))
            }, header.id);
          })
        }, headerGroup.id);
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_table.TableBody, {
      className: "**:data-[slot=table-cell]:first:w-8",
      children: table.getRowModel().rows.length ?
      /* istanbul ignore next */
      (cov_xnr4lkt7e().b[3][0]++, dndEnabled ?
      /* istanbul ignore next */
      (/*#__PURE__*/cov_xnr4lkt7e().b[4][0]++, (0, _jsxruntime.jsx)(_sortable.SortableContext, {
        items: dataIds,
        strategy: _sortable.verticalListSortingStrategy,
        children: table.getRowModel().rows.map(row => {
          /* istanbul ignore next */
          cov_xnr4lkt7e().f[4]++;
          cov_xnr4lkt7e().s[13]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)(_draggablerow.DraggableRow, {
            row: row
          }, row.id);
        })
      })) :
      /* istanbul ignore next */
      (cov_xnr4lkt7e().b[4][1]++, table.getRowModel().rows.map(row => {
        /* istanbul ignore next */
        cov_xnr4lkt7e().f[5]++;
        cov_xnr4lkt7e().s[14]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_table.TableRow, {
          "data-state":
          /* istanbul ignore next */
          (cov_xnr4lkt7e().b[5][0]++, row.getIsSelected()) &&
          /* istanbul ignore next */
          (cov_xnr4lkt7e().b[5][1]++, 'selected'),
          children: row.getVisibleCells().map(cell => {
            /* istanbul ignore next */
            cov_xnr4lkt7e().f[6]++;
            cov_xnr4lkt7e().s[15]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)(_table.TableCell, {
              children: (0, _reacttable.flexRender)(cell.column.columnDef.cell, cell.getContext())
            }, cell.id);
          })
        }, row.id);
      }))) :
      /* istanbul ignore next */
      (/*#__PURE__*/cov_xnr4lkt7e().b[3][1]++, (0, _jsxruntime.jsx)(_table.TableRow, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_table.TableCell, {
          colSpan: columns.length,
          className: "h-24 text-center",
          children: "No results."
        })
      }))
    })]
  }));
  /* istanbul ignore next */
  cov_xnr4lkt7e().s[16]++;
  if (dndEnabled) {
    /* istanbul ignore next */
    cov_xnr4lkt7e().b[6][0]++;
    cov_xnr4lkt7e().s[17]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_core.DndContext, {
      collisionDetection: _core.closestCenter,
      modifiers: [_modifiers.restrictToVerticalAxis],
      ...(
      /* istanbul ignore next */
      (cov_xnr4lkt7e().b[7][0]++, handleDragEnd) &&
      /* istanbul ignore next */
      (cov_xnr4lkt7e().b[7][1]++, {
        onDragEnd: handleDragEnd
      })),
      ...(
      /* istanbul ignore next */
      (cov_xnr4lkt7e().b[8][0]++, sensors) &&
      /* istanbul ignore next */
      (cov_xnr4lkt7e().b[8][1]++, {
        sensors
      })),
      ...(
      /* istanbul ignore next */
      (cov_xnr4lkt7e().b[9][0]++, sortableId) &&
      /* istanbul ignore next */
      (cov_xnr4lkt7e().b[9][1]++, {
        id: sortableId
      })),
      children: tableContent
    });
  } else
  /* istanbul ignore next */
  {
    cov_xnr4lkt7e().b[6][1]++;
  }
  cov_xnr4lkt7e().s[18]++;
  return tableContent;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,