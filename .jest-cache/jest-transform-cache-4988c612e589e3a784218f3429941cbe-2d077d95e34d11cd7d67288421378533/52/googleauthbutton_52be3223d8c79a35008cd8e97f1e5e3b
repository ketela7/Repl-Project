08e7a1ace8d6b5a2c70fc1753d8e6f38
'use client';
"use strict";

/* istanbul ignore next */
function cov_1ed20fi25m() {
  var path = "/home/runner/workspace/src/components/auth/google-auth-button.tsx";
  var hash = "1040324b84968595594b7757b507273dd816e30f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/components/auth/google-auth-button.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "7": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "8": {
        start: {
          line: 18,
          column: 34
        },
        end: {
          line: 18,
          column: 61
        }
      },
      "9": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "10": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "11": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "12": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "13": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 76
        }
      },
      "14": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "15": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 26
        }
      },
      "16": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 30,
          column: 15
        }
      },
      "17": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "18": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 82
        }
      },
      "19": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 38,
          column: 15
        }
      },
      "20": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "21": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 73,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "GoogleAuthButton",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 25
          }
        },
        loc: {
          start: {
            line: 17,
            column: 50
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 32
          }
        },
        loc: {
          start: {
            line: 19,
            column: 41
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 22
          },
          end: {
            line: 71,
            column: 37
          }
        }, {
          start: {
            line: 71,
            column: 40
          },
          end: {
            line: 71,
            column: 61
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/components/auth/google-auth-button.tsx"],
      sourcesContent: ["'use client'\n\nimport { useState } from 'react'\nimport { signIn } from 'next-auth/react'\n\nimport { Button } from '@/components/ui/button'\nimport { cn, errorToast, loadingToast } from '@/lib/utils'\n\ninterface GoogleAuthButtonProps {\n  className?: string\n  onClick?: () => void\n}\n\nexport function GoogleAuthButton({ className, onClick }: GoogleAuthButtonProps) {\n  const [loading, setLoading] = useState(false)\n\n  const handleGoogleSignIn = async () => {\n    const loadingId = 'google-signin'\n\n    try {\n      setLoading(true)\n      loadingToast.start('Connecting to Google...', loadingId)\n\n      // Call external onClick handler first (for localStorage storage)\n      if (onClick) {\n        onClick()\n      }\n\n      await signIn('google', {\n        callbackUrl: '/dashboard/drive',\n      })\n\n      // Note: Success toast will be shown after redirect in the dashboard\n      loadingToast.dismiss(loadingId)\n    } catch (error) {\n      loadingToast.error('Failed to sign in with Google', loadingId)\n      errorToast.generic('Sign in failed', {\n        description: 'Please try again or check your connection',\n        duration: 5000,\n      })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Button onClick={handleGoogleSignIn} disabled={loading} variant=\"outline\" className={cn('relative', className)}>\n      <svg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\">\n        <path\n          fill=\"currentColor\"\n          d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n        />\n        <path\n          fill=\"currentColor\"\n          d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n        />\n        <path\n          fill=\"currentColor\"\n          d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n        />\n        <path\n          fill=\"currentColor\"\n          d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n        />\n      </svg>\n      {loading ? 'Signing in...' : 'Sign in with Google'}\n    </Button>\n  )\n}\n"],
      names: ["GoogleAuthButton", "className", "onClick", "loading", "setLoading", "useState", "handleGoogleSignIn", "loadingId", "loadingToast", "start", "signIn", "callbackUrl", "dismiss", "error", "errorToast", "generic", "description", "duration", "Button", "disabled", "variant", "cn", "svg", "viewBox", "path", "fill", "d"],
      mappings: "AAAA;;;;;+BAagBA;;;eAAAA;;;;uBAXS;wBACF;wBAEA;uBACsB;AAOtC,SAASA,iBAAiB,EAAEC,SAAS,EAAEC,OAAO,EAAyB;IAC5E,MAAM,CAACC,SAASC,WAAW,GAAGC,IAAAA,eAAQ,EAAC;IAEvC,MAAMC,qBAAqB;QACzB,MAAMC,YAAY;QAElB,IAAI;YACFH,WAAW;YACXI,mBAAY,CAACC,KAAK,CAAC,2BAA2BF;YAE9C,iEAAiE;YACjE,IAAIL,SAAS;gBACXA;YACF;YAEA,MAAMQ,IAAAA,cAAM,EAAC,UAAU;gBACrBC,aAAa;YACf;YAEA,oEAAoE;YACpEH,mBAAY,CAACI,OAAO,CAACL;QACvB,EAAE,OAAOM,OAAO;YACdL,mBAAY,CAACK,KAAK,CAAC,iCAAiCN;YACpDO,iBAAU,CAACC,OAAO,CAAC,kBAAkB;gBACnCC,aAAa;gBACbC,UAAU;YACZ;QACF,SAAU;YACRb,WAAW;QACb;IACF;IAEA,qBACE,sBAACc,cAAM;QAAChB,SAASI;QAAoBa,UAAUhB;QAASiB,SAAQ;QAAUnB,WAAWoB,IAAAA,SAAE,EAAC,YAAYpB;;0BAClG,sBAACqB;gBAAIrB,WAAU;gBAAesB,SAAQ;;kCACpC,qBAACC;wBACCC,MAAK;wBACLC,GAAE;;kCAEJ,qBAACF;wBACCC,MAAK;wBACLC,GAAE;;kCAEJ,qBAACF;wBACCC,MAAK;wBACLC,GAAE;;kCAEJ,qBAACF;wBACCC,MAAK;wBACLC,GAAE;;;;YAGLvB,UAAU,kBAAkB;;;AAGnC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1040324b84968595594b7757b507273dd816e30f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ed20fi25m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ed20fi25m();
cov_1ed20fi25m().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ed20fi25m().s[1]++;
Object.defineProperty(exports, "GoogleAuthButton", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1ed20fi25m().f[0]++;
    cov_1ed20fi25m().s[2]++;
    return GoogleAuthButton;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1ed20fi25m().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1ed20fi25m().s[4]++, require("react"));
const _react1 =
/* istanbul ignore next */
(cov_1ed20fi25m().s[5]++, require("next-auth/react"));
const _button =
/* istanbul ignore next */
(cov_1ed20fi25m().s[6]++, require("../ui/button"));
const _utils =
/* istanbul ignore next */
(cov_1ed20fi25m().s[7]++, require("../../lib/utils"));
function GoogleAuthButton({
  className,
  onClick
}) {
  /* istanbul ignore next */
  cov_1ed20fi25m().f[1]++;
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_1ed20fi25m().s[8]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_1ed20fi25m().s[9]++;
  const handleGoogleSignIn = async () => {
    /* istanbul ignore next */
    cov_1ed20fi25m().f[2]++;
    const loadingId =
    /* istanbul ignore next */
    (cov_1ed20fi25m().s[10]++, 'google-signin');
    /* istanbul ignore next */
    cov_1ed20fi25m().s[11]++;
    try {
      /* istanbul ignore next */
      cov_1ed20fi25m().s[12]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_1ed20fi25m().s[13]++;
      _utils.loadingToast.start('Connecting to Google...', loadingId);
      // Call external onClick handler first (for localStorage storage)
      /* istanbul ignore next */
      cov_1ed20fi25m().s[14]++;
      if (onClick) {
        /* istanbul ignore next */
        cov_1ed20fi25m().b[0][0]++;
        cov_1ed20fi25m().s[15]++;
        onClick();
      } else
      /* istanbul ignore next */
      {
        cov_1ed20fi25m().b[0][1]++;
      }
      cov_1ed20fi25m().s[16]++;
      await (0, _react1.signIn)('google', {
        callbackUrl: '/dashboard/drive'
      });
      // Note: Success toast will be shown after redirect in the dashboard
      /* istanbul ignore next */
      cov_1ed20fi25m().s[17]++;
      _utils.loadingToast.dismiss(loadingId);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ed20fi25m().s[18]++;
      _utils.loadingToast.error('Failed to sign in with Google', loadingId);
      /* istanbul ignore next */
      cov_1ed20fi25m().s[19]++;
      _utils.errorToast.generic('Sign in failed', {
        description: 'Please try again or check your connection',
        duration: 5000
      });
    } finally {
      /* istanbul ignore next */
      cov_1ed20fi25m().s[20]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_1ed20fi25m().s[21]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
    onClick: handleGoogleSignIn,
    disabled: loading,
    variant: "outline",
    className: (0, _utils.cn)('relative', className),
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("svg", {
      className: "mr-2 h-4 w-4",
      viewBox: "0 0 24 24",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("path", {
        fill: "currentColor",
        d: "M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
        fill: "currentColor",
        d: "M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
        fill: "currentColor",
        d: "M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
        fill: "currentColor",
        d: "M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
      })]
    }), loading ?
    /* istanbul ignore next */
    (cov_1ed20fi25m().b[1][0]++, 'Signing in...') :
    /* istanbul ignore next */
    (cov_1ed20fi25m().b[1][1]++, 'Sign in with Google')]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHb29nbGVBdXRoQnV0dG9uIiwiY2xhc3NOYW1lIiwib25DbGljayIsImNvdl8xZWQyMGZpMjVtIiwiZiIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwicyIsIl9yZWFjdCIsInVzZVN0YXRlIiwiaGFuZGxlR29vZ2xlU2lnbkluIiwibG9hZGluZ0lkIiwiX3V0aWxzIiwibG9hZGluZ1RvYXN0Iiwic3RhcnQiLCJiIiwiX3JlYWN0MSIsInNpZ25JbiIsImNhbGxiYWNrVXJsIiwiZGlzbWlzcyIsImVycm9yIiwiZXJyb3JUb2FzdCIsImdlbmVyaWMiLCJkZXNjcmlwdGlvbiIsImR1cmF0aW9uIiwiX2pzeHJ1bnRpbWUiLCJqc3hzIiwiX2J1dHRvbiIsIkJ1dHRvbiIsImRpc2FibGVkIiwidmFyaWFudCIsImNuIiwidmlld0JveCIsImpzeCIsImZpbGwiLCJkIl0sInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9zcmMvY29tcG9uZW50cy9hdXRoL2dvb2dsZS1hdXRoLWJ1dHRvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXG5cbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBzaWduSW4gfSBmcm9tICduZXh0LWF1dGgvcmVhY3QnXG5cbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9idXR0b24nXG5pbXBvcnQgeyBjbiwgZXJyb3JUb2FzdCwgbG9hZGluZ1RvYXN0IH0gZnJvbSAnQC9saWIvdXRpbHMnXG5cbmludGVyZmFjZSBHb29nbGVBdXRoQnV0dG9uUHJvcHMge1xuICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgb25DbGljaz86ICgpID0+IHZvaWRcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEdvb2dsZUF1dGhCdXR0b24oeyBjbGFzc05hbWUsIG9uQ2xpY2sgfTogR29vZ2xlQXV0aEJ1dHRvblByb3BzKSB7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuXG4gIGNvbnN0IGhhbmRsZUdvb2dsZVNpZ25JbiA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBsb2FkaW5nSWQgPSAnZ29vZ2xlLXNpZ25pbidcblxuICAgIHRyeSB7XG4gICAgICBzZXRMb2FkaW5nKHRydWUpXG4gICAgICBsb2FkaW5nVG9hc3Quc3RhcnQoJ0Nvbm5lY3RpbmcgdG8gR29vZ2xlLi4uJywgbG9hZGluZ0lkKVxuXG4gICAgICAvLyBDYWxsIGV4dGVybmFsIG9uQ2xpY2sgaGFuZGxlciBmaXJzdCAoZm9yIGxvY2FsU3RvcmFnZSBzdG9yYWdlKVxuICAgICAgaWYgKG9uQ2xpY2spIHtcbiAgICAgICAgb25DbGljaygpXG4gICAgICB9XG5cbiAgICAgIGF3YWl0IHNpZ25JbignZ29vZ2xlJywge1xuICAgICAgICBjYWxsYmFja1VybDogJy9kYXNoYm9hcmQvZHJpdmUnLFxuICAgICAgfSlcblxuICAgICAgLy8gTm90ZTogU3VjY2VzcyB0b2FzdCB3aWxsIGJlIHNob3duIGFmdGVyIHJlZGlyZWN0IGluIHRoZSBkYXNoYm9hcmRcbiAgICAgIGxvYWRpbmdUb2FzdC5kaXNtaXNzKGxvYWRpbmdJZClcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgbG9hZGluZ1RvYXN0LmVycm9yKCdGYWlsZWQgdG8gc2lnbiBpbiB3aXRoIEdvb2dsZScsIGxvYWRpbmdJZClcbiAgICAgIGVycm9yVG9hc3QuZ2VuZXJpYygnU2lnbiBpbiBmYWlsZWQnLCB7XG4gICAgICAgIGRlc2NyaXB0aW9uOiAnUGxlYXNlIHRyeSBhZ2FpbiBvciBjaGVjayB5b3VyIGNvbm5lY3Rpb24nLFxuICAgICAgICBkdXJhdGlvbjogNTAwMCxcbiAgICAgIH0pXG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8QnV0dG9uIG9uQ2xpY2s9e2hhbmRsZUdvb2dsZVNpZ25Jbn0gZGlzYWJsZWQ9e2xvYWRpbmd9IHZhcmlhbnQ9XCJvdXRsaW5lXCIgY2xhc3NOYW1lPXtjbigncmVsYXRpdmUnLCBjbGFzc05hbWUpfT5cbiAgICAgIDxzdmcgY2xhc3NOYW1lPVwibXItMiBoLTQgdy00XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICA8cGF0aFxuICAgICAgICAgIGZpbGw9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgICAgIGQ9XCJNMjIuNTYgMTIuMjVjMC0uNzgtLjA3LTEuNTMtLjItMi4yNUgxMnY0LjI2aDUuOTJjLS4yNiAxLjM3LTEuMDQgMi41My0yLjIxIDMuMzF2Mi43N2gzLjU3YzIuMDgtMS45MiAzLjI4LTQuNzQgMy4yOC04LjA5elwiXG4gICAgICAgIC8+XG4gICAgICAgIDxwYXRoXG4gICAgICAgICAgZmlsbD1cImN1cnJlbnRDb2xvclwiXG4gICAgICAgICAgZD1cIk0xMiAyM2MyLjk3IDAgNS40Ni0uOTggNy4yOC0yLjY2bC0zLjU3LTIuNzdjLS45OC42Ni0yLjIzIDEuMDYtMy43MSAxLjA2LTIuODYgMC01LjI5LTEuOTMtNi4xNi00LjUzSDIuMTh2Mi44NEMzLjk5IDIwLjUzIDcuNyAyMyAxMiAyM3pcIlxuICAgICAgICAvPlxuICAgICAgICA8cGF0aFxuICAgICAgICAgIGZpbGw9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgICAgIGQ9XCJNNS44NCAxNC4wOWMtLjIyLS42Ni0uMzUtMS4zNi0uMzUtMi4wOXMuMTMtMS40My4zNS0yLjA5VjcuMDdIMi4xOEMxLjQzIDguNTUgMSAxMC4yMiAxIDEycy40MyAzLjQ1IDEuMTggNC45M2wyLjg1LTIuMjIuODEtLjYyelwiXG4gICAgICAgIC8+XG4gICAgICAgIDxwYXRoXG4gICAgICAgICAgZmlsbD1cImN1cnJlbnRDb2xvclwiXG4gICAgICAgICAgZD1cIk0xMiA1LjM4YzEuNjIgMCAzLjA2LjU2IDQuMjEgMS42NGwzLjE1LTMuMTVDMTcuNDUgMi4wOSAxNC45NyAxIDEyIDEgNy43IDEgMy45OSAzLjQ3IDIuMTggNy4wN2wzLjY2IDIuODRjLjg3LTIuNiAzLjMtNC41MyA2LjE2LTQuNTN6XCJcbiAgICAgICAgLz5cbiAgICAgIDwvc3ZnPlxuICAgICAge2xvYWRpbmcgPyAnU2lnbmluZyBpbi4uLicgOiAnU2lnbiBpbiB3aXRoIEdvb2dsZSd9XG4gICAgPC9CdXR0b24+XG4gIClcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkFhZ0I7Ozs7OztXQUFBQSxnQkFBQTs7Ozs7Ozs7a0NBWFM7OztrQ0FDRjs7O2tDQUVBOzs7a0NBQ3NCO0FBT3RDLFNBQVNBLGlCQUFpQjtFQUFFQyxTQUFTO0VBQUVDO0FBQU8sQ0FBeUI7RUFBQTtFQUFBQyxjQUFBLEdBQUFDLENBQUE7RUFDNUUsTUFBTSxDQUFDQyxPQUFBLEVBQVNDLFVBQUEsQ0FBVztFQUFBO0VBQUEsQ0FBQUgsY0FBQSxHQUFBSSxDQUFBLE9BQUcsSUFBQUMsTUFBQSxDQUFBQyxRQUFRLEVBQUM7RUFBQTtFQUFBTixjQUFBLEdBQUFJLENBQUE7RUFFdkMsTUFBTUcsa0JBQUEsR0FBcUIsTUFBQUEsQ0FBQTtJQUFBO0lBQUFQLGNBQUEsR0FBQUMsQ0FBQTtJQUN6QixNQUFNTyxTQUFBO0lBQUE7SUFBQSxDQUFBUixjQUFBLEdBQUFJLENBQUEsUUFBWTtJQUFBO0lBQUFKLGNBQUEsR0FBQUksQ0FBQTtJQUVsQixJQUFJO01BQUE7TUFBQUosY0FBQSxHQUFBSSxDQUFBO01BQ0ZELFVBQUEsQ0FBVztNQUFBO01BQUFILGNBQUEsR0FBQUksQ0FBQTtNQUNYSyxNQUFBLENBQUFDLFlBQVksQ0FBQ0MsS0FBSyxDQUFDLDJCQUEyQkgsU0FBQTtNQUU5QztNQUFBO01BQUFSLGNBQUEsR0FBQUksQ0FBQTtNQUNBLElBQUlMLE9BQUEsRUFBUztRQUFBO1FBQUFDLGNBQUEsR0FBQVksQ0FBQTtRQUFBWixjQUFBLEdBQUFJLENBQUE7UUFDWEwsT0FBQTtNQUNGO01BQUE7TUFBQTtRQUFBQyxjQUFBLEdBQUFZLENBQUE7TUFBQTtNQUFBWixjQUFBLEdBQUFJLENBQUE7TUFFQSxNQUFNLElBQUFTLE9BQUEsQ0FBQUMsTUFBTSxFQUFDLFVBQVU7UUFDckJDLFdBQUEsRUFBYTtNQUNmO01BRUE7TUFBQTtNQUFBZixjQUFBLEdBQUFJLENBQUE7TUFDQUssTUFBQSxDQUFBQyxZQUFZLENBQUNNLE9BQU8sQ0FBQ1IsU0FBQTtJQUN2QixFQUFFLE9BQU9TLEtBQUEsRUFBTztNQUFBO01BQUFqQixjQUFBLEdBQUFJLENBQUE7TUFDZEssTUFBQSxDQUFBQyxZQUFZLENBQUNPLEtBQUssQ0FBQyxpQ0FBaUNULFNBQUE7TUFBQTtNQUFBUixjQUFBLEdBQUFJLENBQUE7TUFDcERLLE1BQUEsQ0FBQVMsVUFBVSxDQUFDQyxPQUFPLENBQUMsa0JBQWtCO1FBQ25DQyxXQUFBLEVBQWE7UUFDYkMsUUFBQSxFQUFVO01BQ1o7SUFDRixVQUFVO01BQUE7TUFBQXJCLGNBQUEsR0FBQUksQ0FBQTtNQUNSRCxVQUFBLENBQVc7SUFDYjtFQUNGO0VBQUE7RUFBQUgsY0FBQSxHQUFBSSxDQUFBO0VBRUEsb0JBQ0UsSUFBQWtCLFdBQUEsQ0FBQUMsSUFBQSxFQUFDQyxPQUFBLENBQUFDLE1BQU07SUFBQzFCLE9BQUEsRUFBU1Esa0JBQUE7SUFBb0JtQixRQUFBLEVBQVV4QixPQUFBO0lBQVN5QixPQUFBLEVBQVE7SUFBVTdCLFNBQUEsRUFBVyxJQUFBVyxNQUFBLENBQUFtQixFQUFFLEVBQUMsWUFBWTlCLFNBQUE7NEJBQ2xHLElBQUF3QixXQUFBLENBQUFDLElBQUEsRUFBQztNQUFJekIsU0FBQSxFQUFVO01BQWUrQixPQUFBLEVBQVE7OEJBQ3BDLElBQUFQLFdBQUEsQ0FBQVEsR0FBQSxFQUFDO1FBQ0NDLElBQUEsRUFBSztRQUNMQyxDQUFBLEVBQUU7dUJBRUosSUFBQVYsV0FBQSxDQUFBUSxHQUFBLEVBQUM7UUFDQ0MsSUFBQSxFQUFLO1FBQ0xDLENBQUEsRUFBRTt1QkFFSixJQUFBVixXQUFBLENBQUFRLEdBQUEsRUFBQztRQUNDQyxJQUFBLEVBQUs7UUFDTEMsQ0FBQSxFQUFFO3VCQUVKLElBQUFWLFdBQUEsQ0FBQVEsR0FBQSxFQUFDO1FBQ0NDLElBQUEsRUFBSztRQUNMQyxDQUFBLEVBQUU7O1FBR0w5QixPQUFBO0lBQUE7SUFBQSxDQUFBRixjQUFBLEdBQUFZLENBQUEsVUFBVTtJQUFBO0lBQUEsQ0FBQVosY0FBQSxHQUFBWSxDQUFBLFVBQWtCOztBQUduQyIsImlnbm9yZUxpc3QiOltdfQ==