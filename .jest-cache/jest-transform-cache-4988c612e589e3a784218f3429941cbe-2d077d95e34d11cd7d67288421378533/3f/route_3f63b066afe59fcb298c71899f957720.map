{"version":3,"sources":["/home/runner/workspace/src/app/api/drive/files/essential/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\n\nimport { initDriveService, handleApiError } from '@/lib/api-utils'\n\nexport async function POST(request: NextRequest) {\n  try {\n    const authResult = await initDriveService()\n    if (!authResult.success) {\n      return authResult.response!\n    }\n\n    const { driveService } = authResult\n    const body = await request.json()\n\n    // Get fileId from body\n    const { fileId } = body\n\n    if (!fileId) {\n      return NextResponse.json({ error: 'File ID is required' }, { status: 400 })\n    }\n\n    // Get essential file metadata for quick loading\n    const essentialFields = ['id', 'name', 'mimeType', 'size', 'createdTime', 'modifiedTime', 'parents', 'trashed', 'capabilities']\n\n    const fileMetadata = await driveService.getFileMetadata(fileId, essentialFields)\n\n    return NextResponse.json({\n      success: true,\n      fileMetadata,\n      operation: 'essential',\n    })\n  } catch (error: any) {\n    return handleApiError(error)\n  }\n}\n"],"names":["POST","request","authResult","initDriveService","success","response","driveService","body","json","fileId","NextResponse","error","status","essentialFields","fileMetadata","getFileMetadata","operation","handleApiError"],"mappings":";;;;+BAIsBA;;;eAAAA;;;wBAJoB;0BAEO;AAE1C,eAAeA,KAAKC,OAAoB;IAC7C,IAAI;QACF,MAAMC,aAAa,MAAMC,IAAAA,0BAAgB;QACzC,IAAI,CAACD,WAAWE,OAAO,EAAE;YACvB,OAAOF,WAAWG,QAAQ;QAC5B;QAEA,MAAM,EAAEC,YAAY,EAAE,GAAGJ;QACzB,MAAMK,OAAO,MAAMN,QAAQO,IAAI;QAE/B,uBAAuB;QACvB,MAAM,EAAEC,MAAM,EAAE,GAAGF;QAEnB,IAAI,CAACE,QAAQ;YACX,OAAOC,oBAAY,CAACF,IAAI,CAAC;gBAAEG,OAAO;YAAsB,GAAG;gBAAEC,QAAQ;YAAI;QAC3E;QAEA,gDAAgD;QAChD,MAAMC,kBAAkB;YAAC;YAAM;YAAQ;YAAY;YAAQ;YAAe;YAAgB;YAAW;YAAW;SAAe;QAE/H,MAAMC,eAAe,MAAMR,aAAaS,eAAe,CAACN,QAAQI;QAEhE,OAAOH,oBAAY,CAACF,IAAI,CAAC;YACvBJ,SAAS;YACTU;YACAE,WAAW;QACb;IACF,EAAE,OAAOL,OAAY;QACnB,OAAOM,IAAAA,wBAAc,EAACN;IACxB;AACF"}