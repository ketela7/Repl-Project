{"version":3,"sources":["/home/runner/workspace/__tests__/test-utils.tsx"],"sourcesContent":["/**\n * Test utilities for React Testing Library and Jest\n */\n\nimport React, { ReactElement } from 'react'\nimport { render, RenderOptions } from '@testing-library/react'\nimport { SessionProvider } from 'next-auth/react'\n\n// Mock session for testing\nconst mockSession = {\n  user: {\n    id: 'test-user-id',\n    email: 'test@example.com',\n    name: 'Test User',\n  },\n  accessToken: 'mock-access-token',\n  refreshToken: 'mock-refresh-token',\n  expires: '2025-12-31T23:59:59.999Z',\n}\n\nconst AllTheProviders = ({ children }: { children: React.ReactNode }) => {\n  return <SessionProvider session={mockSession}>{children}</SessionProvider>\n}\n\nconst customRender = (ui: ReactElement, options?: Omit<RenderOptions, 'wrapper'>) => render(ui, { wrapper: AllTheProviders, ...options })\n\nexport * from '@testing-library/react'\nexport { customRender as render }\n\n// Add dummy test to prevent \"no tests\" error\ndescribe('Test Utils', () => {\n  it('exports custom render function', () => {\n    expect(customRender).toBeDefined()\n  })\n})\n"],"names":["render","customRender","mockSession","user","id","email","name","accessToken","refreshToken","expires","AllTheProviders","children","SessionProvider","session","ui","options","wrapper","describe","it","expect","toBeDefined"],"mappings":"AAAA;;CAEC;;;;+BAyBwBA;;;eAAhBC;;;;8DAvB2B;qCACE;wBACN;;;;;;;;;;;;;;;;;;;AAEhC,2BAA2B;AAC3B,MAAMC,cAAc;IAClBC,MAAM;QACJC,IAAI;QACJC,OAAO;QACPC,MAAM;IACR;IACAC,aAAa;IACbC,cAAc;IACdC,SAAS;AACX;AAEA,MAAMC,kBAAkB,CAAC,EAAEC,QAAQ,EAAiC;IAClE,qBAAO,qBAACC,uBAAe;QAACC,SAASX;kBAAcS;;AACjD;AAEA,MAAMV,eAAe,CAACa,IAAkBC,UAA6Cf,IAAAA,cAAM,EAACc,IAAI;QAAEE,SAASN;QAAiB,GAAGK,OAAO;IAAC;AAKvI,6CAA6C;AAC7CE,SAAS,cAAc;IACrBC,GAAG,kCAAkC;QACnCC,OAAOlB,cAAcmB,WAAW;IAClC;AACF"}