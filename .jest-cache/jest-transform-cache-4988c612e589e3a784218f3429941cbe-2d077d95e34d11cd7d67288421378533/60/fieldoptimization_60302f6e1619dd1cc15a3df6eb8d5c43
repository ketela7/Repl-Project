b6285595e2e81337829e5dc530985992
/**
 * Google Drive API Field Optimization
 * Optimizes API requests by requesting only necessary fields for each operation
 * This significantly improves request performance and reduces bandwidth usage
 */ // Base fields always needed for file identification and basic operations
"use strict";

/* istanbul ignore next */
function cov_2opze6uzjl() {
  var path = "/home/runner/workspace/src/lib/google-drive/field-optimization.ts";
  var hash = "6bb888d64206aa37467b7e4e356ac4638bd23dfc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/lib/google-drive/field-optimization.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 26
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 32
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 40
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 32
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 34
        }
      },
      "9": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 38
        }
      },
      "10": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 38
        }
      },
      "11": {
        start: {
          line: 37,
          column: 19
        },
        end: {
          line: 60,
          column: 1
        }
      },
      "12": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 33
        }
      },
      "13": {
        start: {
          line: 65,
          column: 19
        },
        end: {
          line: 65,
          column: 55
        }
      },
      "14": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "15": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 37
        }
      },
      "16": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "17": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 30
        }
      },
      "18": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "19": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 35
        }
      },
      "20": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "21": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 72
        }
      },
      "22": {
        start: {
          line: 77,
          column: 45
        },
        end: {
          line: 77,
          column: 72
        }
      },
      "23": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 70
        }
      },
      "24": {
        start: {
          line: 78,
          column: 44
        },
        end: {
          line: 78,
          column: 70
        }
      },
      "25": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "26": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 36
        }
      },
      "27": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 28
        }
      },
      "28": {
        start: {
          line: 85,
          column: 25
        },
        end: {
          line: 96,
          column: 1
        }
      },
      "29": {
        start: {
          line: 99,
          column: 25
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "30": {
        start: {
          line: 105,
          column: 25
        },
        end: {
          line: 105,
          column: 50
        }
      },
      "31": {
        start: {
          line: 106,
          column: 27
        },
        end: {
          line: 106,
          column: 107
        }
      },
      "32": {
        start: {
          line: 108,
          column: 36
        },
        end: {
          line: 108,
          column: 38
        }
      },
      "33": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 109,
          column: 73
        }
      },
      "34": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "35": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 48
        }
      },
      "36": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "37": {
        start: {
          line: 121,
          column: 72
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "38": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 33
        }
      },
      "39": {
        start: {
          line: 135,
          column: 33
        },
        end: {
          line: 135,
          column: 63
        }
      },
      "40": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 147,
          column: 7
        }
      },
      "41": {
        start: {
          line: 138,
          column: 26
        },
        end: {
          line: 138,
          column: 42
        }
      },
      "42": {
        start: {
          line: 139,
          column: 22
        },
        end: {
          line: 139,
          column: 30
        }
      },
      "43": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "44": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "45": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 29
        }
      },
      "46": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 36
        }
      },
      "47": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 17
          }
        },
        loc: {
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 20,
            column: 23
          }
        },
        loc: {
          start: {
            line: 20,
            column: 33
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 30
          },
          end: {
            line: 23,
            column: 31
          }
        },
        loc: {
          start: {
            line: 23,
            column: 41
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 22
          },
          end: {
            line: 26,
            column: 23
          }
        },
        loc: {
          start: {
            line: 26,
            column: 33
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 25
          }
        },
        loc: {
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 32,
            column: 29
          }
        },
        loc: {
          start: {
            line: 32,
            column: 39
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "7": {
        name: "getOptimizedFields",
        decl: {
          start: {
            line: 61,
            column: 9
          },
          end: {
            line: 61,
            column: 27
          }
        },
        loc: {
          start: {
            line: 61,
            column: 39
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 61
      },
      "8": {
        name: "getDynamicFields",
        decl: {
          start: {
            line: 64,
            column: 9
          },
          end: {
            line: 64,
            column: 25
          }
        },
        loc: {
          start: {
            line: 64,
            column: 55
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 64
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 54
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 98
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 17
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 117
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 22
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 120
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 121,
            column: 56
          },
          end: {
            line: 121,
            column: 57
          }
        },
        loc: {
          start: {
            line: 121,
            column: 72
          },
          end: {
            line: 125,
            column: 13
          }
        },
        line: 121
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 17
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 131
      },
      "14": {
        name: "validateRequiredFields",
        decl: {
          start: {
            line: 136,
            column: 9
          },
          end: {
            line: 136,
            column: 31
          }
        },
        loc: {
          start: {
            line: 136,
            column: 58
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 136
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 137,
            column: 32
          },
          end: {
            line: 137,
            column: 33
          }
        },
        loc: {
          start: {
            line: 137,
            column: 41
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 137
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 64,
            column: 41
          },
          end: {
            line: 64,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 64,
            column: 51
          },
          end: {
            line: 64,
            column: 53
          }
        }],
        line: 64
      },
      "1": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "2": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 30
          }
        }, {
          start: {
            line: 67,
            column: 34
          },
          end: {
            line: 67,
            column: 67
          }
        }],
        line: 67
      },
      "3": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "4": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 26
          }
        }, {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 70,
            column: 56
          }
        }],
        line: 70
      },
      "5": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 31
          }
        }, {
          start: {
            line: 73,
            column: 35
          },
          end: {
            line: 73,
            column: 66
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "8": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 77,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 77,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "9": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 78,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 78,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "10": {
        loc: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "11": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 35
          }
        }, {
          start: {
            line: 80,
            column: 39
          },
          end: {
            line: 80,
            column: 71
          }
        }],
        line: 80
      },
      "12": {
        loc: {
          start: {
            line: 99,
            column: 25
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 25
          },
          end: {
            line: 99,
            column: 52
          }
        }, {
          start: {
            line: 99,
            column: 56
          },
          end: {
            line: 104,
            column: 9
          }
        }],
        line: 99
      },
      "13": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "14": {
        loc: {
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 141,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 141,
            column: 31
          }
        }, {
          start: {
            line: 141,
            column: 35
          },
          end: {
            line: 141,
            column: 53
          }
        }],
        line: 141
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/lib/google-drive/field-optimization.ts"],
      sourcesContent: ["/**\n * Google Drive API Field Optimization\n * Optimizes API requests by requesting only necessary fields for each operation\n * This significantly improves request performance and reduces bandwidth usage\n */\n\n// Base fields always needed for file identification and basic operations\nconst BASE_FIELDS = 'id,name,mimeType'\n\n// Optimized field sets for different use cases\nexport const FIELD_SETS = {\n  // Minimal fields for basic listing (fastest)\n  LIST_BASIC: `${BASE_FIELDS},parents,trashed`,\n\n  // Essential fields for file management operations - now includes owners, createdTime, and thumbnailLink for preview functionality\n  LIST_STANDARD: `${BASE_FIELDS},size,createdTime,modifiedTime,parents,owners(displayName,emailAddress),trashed,shared,thumbnailLink,capabilities(canEdit,canShare,canDelete,canDownload,canCopy,canTrash,canUntrash,canRename,canMoveItemWithinDrive)`,\n\n  // Extended fields for detailed views\n  LIST_DETAILED: `${BASE_FIELDS},size,createdTime,modifiedTime,webViewLink,thumbnailLink,parents,owners(displayName,emailAddress,photoLink),shared,trashed,starred,capabilities(canEdit,canShare,canDelete,canDownload,canCopy,canTrash,canUntrash,canRename,canMoveItemWithinDrive)`,\n\n  // Complete fields for file details page - comprehensive technical details\n  FILE_DETAILS: `${BASE_FIELDS},size,quotaBytesUsed,createdTime,modifiedTime,viewedByMeTime,sharedWithMeTime,webViewLink,webContentLink,thumbnailLink,iconLink,parents,owners,lastModifyingUser,sharingUser,shared,trashed,starred,viewed,ownedByMe,viewedByMe,description,properties,appProperties,capabilities,permissions,copyRequiresWriterPermission,writersCanShare,folderColorRgb,originalFilename,fullFileExtension,fileExtension,md5Checksum,sha1Checksum,sha256Checksum,headRevisionId,isAppAuthorized,hasAugmentedPermissions,spaces,version,teamDriveId,driveId,hasVisitedTeamDrive,exportLinks,shortcutDetails,contentRestrictions,resourceKey,linkShareMetadata,labelInfo,imageMediaMetadata,videoMediaMetadata`,\n\n  // Ultra-comprehensive for Details Operations - ALL possible fields\n  DETAILS_COMPLETE: '*', // Request all available fields for comprehensive details\n\n  // Fields for download operations\n  DOWNLOAD: `${BASE_FIELDS},webContentLink,size,mimeType`,\n\n  // Fields for sharing operations\n  SHARE: `${BASE_FIELDS},shared,permissions,capabilities`,\n\n  // Fields for move/copy operations\n  MOVE_COPY: `${BASE_FIELDS},parents,capabilities`,\n\n  // Fields for search operations\n  SEARCH: `${BASE_FIELDS},size,modifiedTime,parents,trashed,thumbnailLink`,\n\n  // Fields for folder structure\n  FOLDER_STRUCTURE: `${BASE_FIELDS},parents,trashed`,\n\n  // Fields for drive info\n  DRIVE_INFO: 'storageQuota,user',\n} as const\n\n/**\n * Get optimized fields for specific operations\n */\nexport function getOptimizedFields(operation: keyof typeof FIELD_SETS): string {\n  return FIELD_SETS[operation]\n}\n\n/**\n * Dynamic field optimization based on UI context\n */\nexport interface FieldContext {\n  showThumbnails?: boolean\n  showOwners?: boolean\n  showPermissions?: boolean\n  showDetails?: boolean\n  includeCapabilities?: boolean\n}\n\nexport function getDynamicFields(baseOperation: keyof typeof FIELD_SETS, context: FieldContext = {}): string {\n  const fields = FIELD_SETS[baseOperation].split(',')\n\n  // Add optional fields based on context\n  if (context.showThumbnails && !fields.includes('thumbnailLink')) {\n    fields.push('thumbnailLink')\n  }\n\n  if (context.showOwners && !fields.includes('owners')) {\n    fields.push('owners')\n  }\n\n  if (context.showPermissions && !fields.includes('permissions')) {\n    fields.push('permissions')\n  }\n\n  if (context.showDetails) {\n    if (!fields.includes('description')) fields.push('description')\n    if (!fields.includes('properties')) fields.push('properties')\n  }\n\n  if (context.includeCapabilities && !fields.includes('capabilities')) {\n    fields.push('capabilities')\n  }\n\n  return fields.join(',')\n}\n\n/**\n * Field optimization for different view modes\n */\nexport const VIEW_MODE_FIELDS = {\n  // Grid view with thumbnails\n  GRID: getDynamicFields('LIST_STANDARD', { showThumbnails: true }),\n\n  // List view without thumbnails\n  LIST: FIELD_SETS.LIST_STANDARD,\n\n  // Compact view - minimal data\n  COMPACT: FIELD_SETS.LIST_BASIC,\n\n  // Detailed view - comprehensive data\n  DETAILED: FIELD_SETS.LIST_DETAILED,\n} as const\n\n/**\n * Monitoring for field optimization performance\n */\ninterface FieldOptimizationMetrics {\n  requestCount: number\n  averageResponseTime: number\n  dataSaved: number\n  fieldsSaved: number\n}\n\nclass FieldOptimizationMonitor {\n  private metrics: Map<string, FieldOptimizationMetrics> = new Map()\n\n  trackRequest(operation: string, responseTime: number, fieldsUsed: number) {\n    const existing = this.metrics.get(operation) || {\n      requestCount: 0,\n      averageResponseTime: 0,\n      dataSaved: 0,\n      fieldsSaved: 0,\n    }\n\n    const newCount = existing.requestCount + 1\n    const newAvgTime = (existing.averageResponseTime * existing.requestCount + responseTime) / newCount\n\n    // Estimate fields saved (assuming full field set would be ~30 fields)\n    const estimatedFullFields = 30\n    const fieldsSaved = Math.max(0, estimatedFullFields - fieldsUsed)\n\n    this.metrics.set(operation, {\n      requestCount: newCount,\n      averageResponseTime: newAvgTime,\n      dataSaved: existing.dataSaved + fieldsSaved * 100, // Rough bytes estimate\n      fieldsSaved: existing.fieldsSaved + fieldsSaved,\n    })\n  }\n\n  getMetrics(): Record<string, FieldOptimizationMetrics> {\n    return Object.fromEntries(this.metrics)\n  }\n\n  getTotalSavings(): {\n    requestsOptimized: number\n    estimatedDataSaved: number\n    fieldsSaved: number\n  } {\n    return Array.from(this.metrics.values()).reduce(\n      (acc, metric) => ({\n        requestsOptimized: acc.requestsOptimized + metric.requestCount,\n        estimatedDataSaved: acc.estimatedDataSaved + metric.dataSaved,\n        fieldsSaved: acc.fieldsSaved + metric.fieldsSaved,\n      }),\n      { requestsOptimized: 0, estimatedDataSaved: 0, fieldsSaved: 0 },\n    )\n  }\n}\n\nexport const fieldOptimizationMonitor = new FieldOptimizationMonitor()\n\n/**\n * Utility to validate if required fields are present in response\n */\nexport function validateRequiredFields(response: any, requiredFields: string[]): boolean {\n  return requiredFields.every(field => {\n    const fieldPath = field.split('.')\n    let current = response\n\n    for (const path of fieldPath) {\n      if (current == null || !(path in current)) {\n        return false\n      }\n      current = current[path]\n    }\n\n    return true\n  })\n}\n"],
      names: ["FIELD_SETS", "VIEW_MODE_FIELDS", "fieldOptimizationMonitor", "getDynamicFields", "getOptimizedFields", "validateRequiredFields", "BASE_FIELDS", "LIST_BASIC", "LIST_STANDARD", "LIST_DETAILED", "FILE_DETAILS", "DETAILS_COMPLETE", "DOWNLOAD", "SHARE", "MOVE_COPY", "SEARCH", "FOLDER_STRUCTURE", "DRIVE_INFO", "operation", "baseOperation", "context", "fields", "split", "showThumbnails", "includes", "push", "showOwners", "showPermissions", "showDetails", "includeCapabilities", "join", "GRID", "LIST", "COMPACT", "DETAILED", "FieldOptimizationMonitor", "trackRequest", "responseTime", "fieldsUsed", "existing", "metrics", "get", "requestCount", "averageResponseTime", "dataSaved", "fieldsSaved", "newCount", "newAvgTime", "estimatedFullFields", "Math", "max", "set", "getMetrics", "Object", "fromEntries", "getTotalSavings", "Array", "from", "values", "reduce", "acc", "metric", "requestsOptimized", "estimatedDataSaved", "Map", "response", "requiredFields", "every", "field", "fieldPath", "current", "path"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6bb888d64206aa37467b7e4e356ac4638bd23dfc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2opze6uzjl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2opze6uzjl();
cov_2opze6uzjl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2opze6uzjl().f[0]++;
  cov_2opze6uzjl().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2opze6uzjl().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2opze6uzjl().s[3]++;
_export(exports, {
  FIELD_SETS: function () {
    /* istanbul ignore next */
    cov_2opze6uzjl().f[1]++;
    cov_2opze6uzjl().s[4]++;
    return FIELD_SETS;
  },
  VIEW_MODE_FIELDS: function () {
    /* istanbul ignore next */
    cov_2opze6uzjl().f[2]++;
    cov_2opze6uzjl().s[5]++;
    return VIEW_MODE_FIELDS;
  },
  fieldOptimizationMonitor: function () {
    /* istanbul ignore next */
    cov_2opze6uzjl().f[3]++;
    cov_2opze6uzjl().s[6]++;
    return fieldOptimizationMonitor;
  },
  getDynamicFields: function () {
    /* istanbul ignore next */
    cov_2opze6uzjl().f[4]++;
    cov_2opze6uzjl().s[7]++;
    return getDynamicFields;
  },
  getOptimizedFields: function () {
    /* istanbul ignore next */
    cov_2opze6uzjl().f[5]++;
    cov_2opze6uzjl().s[8]++;
    return getOptimizedFields;
  },
  validateRequiredFields: function () {
    /* istanbul ignore next */
    cov_2opze6uzjl().f[6]++;
    cov_2opze6uzjl().s[9]++;
    return validateRequiredFields;
  }
});
const BASE_FIELDS =
/* istanbul ignore next */
(cov_2opze6uzjl().s[10]++, 'id,name,mimeType');
const FIELD_SETS =
/* istanbul ignore next */
(cov_2opze6uzjl().s[11]++, {
  // Minimal fields for basic listing (fastest)
  LIST_BASIC: `${BASE_FIELDS},parents,trashed`,
  // Essential fields for file management operations - now includes owners, createdTime, and thumbnailLink for preview functionality
  LIST_STANDARD: `${BASE_FIELDS},size,createdTime,modifiedTime,parents,owners(displayName,emailAddress),trashed,shared,thumbnailLink,capabilities(canEdit,canShare,canDelete,canDownload,canCopy,canTrash,canUntrash,canRename,canMoveItemWithinDrive)`,
  // Extended fields for detailed views
  LIST_DETAILED: `${BASE_FIELDS},size,createdTime,modifiedTime,webViewLink,thumbnailLink,parents,owners(displayName,emailAddress,photoLink),shared,trashed,starred,capabilities(canEdit,canShare,canDelete,canDownload,canCopy,canTrash,canUntrash,canRename,canMoveItemWithinDrive)`,
  // Complete fields for file details page - comprehensive technical details
  FILE_DETAILS: `${BASE_FIELDS},size,quotaBytesUsed,createdTime,modifiedTime,viewedByMeTime,sharedWithMeTime,webViewLink,webContentLink,thumbnailLink,iconLink,parents,owners,lastModifyingUser,sharingUser,shared,trashed,starred,viewed,ownedByMe,viewedByMe,description,properties,appProperties,capabilities,permissions,copyRequiresWriterPermission,writersCanShare,folderColorRgb,originalFilename,fullFileExtension,fileExtension,md5Checksum,sha1Checksum,sha256Checksum,headRevisionId,isAppAuthorized,hasAugmentedPermissions,spaces,version,teamDriveId,driveId,hasVisitedTeamDrive,exportLinks,shortcutDetails,contentRestrictions,resourceKey,linkShareMetadata,labelInfo,imageMediaMetadata,videoMediaMetadata`,
  // Ultra-comprehensive for Details Operations - ALL possible fields
  DETAILS_COMPLETE: '*',
  // Fields for download operations
  DOWNLOAD: `${BASE_FIELDS},webContentLink,size,mimeType`,
  // Fields for sharing operations
  SHARE: `${BASE_FIELDS},shared,permissions,capabilities`,
  // Fields for move/copy operations
  MOVE_COPY: `${BASE_FIELDS},parents,capabilities`,
  // Fields for search operations
  SEARCH: `${BASE_FIELDS},size,modifiedTime,parents,trashed,thumbnailLink`,
  // Fields for folder structure
  FOLDER_STRUCTURE: `${BASE_FIELDS},parents,trashed`,
  // Fields for drive info
  DRIVE_INFO: 'storageQuota,user'
});
function getOptimizedFields(operation) {
  /* istanbul ignore next */
  cov_2opze6uzjl().f[7]++;
  cov_2opze6uzjl().s[12]++;
  return FIELD_SETS[operation];
}
function getDynamicFields(baseOperation, context =
/* istanbul ignore next */
(cov_2opze6uzjl().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_2opze6uzjl().f[8]++;
  const fields =
  /* istanbul ignore next */
  (cov_2opze6uzjl().s[13]++, FIELD_SETS[baseOperation].split(','));
  // Add optional fields based on context
  /* istanbul ignore next */
  cov_2opze6uzjl().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_2opze6uzjl().b[2][0]++, context.showThumbnails) &&
  /* istanbul ignore next */
  (cov_2opze6uzjl().b[2][1]++, !fields.includes('thumbnailLink'))) {
    /* istanbul ignore next */
    cov_2opze6uzjl().b[1][0]++;
    cov_2opze6uzjl().s[15]++;
    fields.push('thumbnailLink');
  } else
  /* istanbul ignore next */
  {
    cov_2opze6uzjl().b[1][1]++;
  }
  cov_2opze6uzjl().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_2opze6uzjl().b[4][0]++, context.showOwners) &&
  /* istanbul ignore next */
  (cov_2opze6uzjl().b[4][1]++, !fields.includes('owners'))) {
    /* istanbul ignore next */
    cov_2opze6uzjl().b[3][0]++;
    cov_2opze6uzjl().s[17]++;
    fields.push('owners');
  } else
  /* istanbul ignore next */
  {
    cov_2opze6uzjl().b[3][1]++;
  }
  cov_2opze6uzjl().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_2opze6uzjl().b[6][0]++, context.showPermissions) &&
  /* istanbul ignore next */
  (cov_2opze6uzjl().b[6][1]++, !fields.includes('permissions'))) {
    /* istanbul ignore next */
    cov_2opze6uzjl().b[5][0]++;
    cov_2opze6uzjl().s[19]++;
    fields.push('permissions');
  } else
  /* istanbul ignore next */
  {
    cov_2opze6uzjl().b[5][1]++;
  }
  cov_2opze6uzjl().s[20]++;
  if (context.showDetails) {
    /* istanbul ignore next */
    cov_2opze6uzjl().b[7][0]++;
    cov_2opze6uzjl().s[21]++;
    if (!fields.includes('description')) {
      /* istanbul ignore next */
      cov_2opze6uzjl().b[8][0]++;
      cov_2opze6uzjl().s[22]++;
      fields.push('description');
    } else
    /* istanbul ignore next */
    {
      cov_2opze6uzjl().b[8][1]++;
    }
    cov_2opze6uzjl().s[23]++;
    if (!fields.includes('properties')) {
      /* istanbul ignore next */
      cov_2opze6uzjl().b[9][0]++;
      cov_2opze6uzjl().s[24]++;
      fields.push('properties');
    } else
    /* istanbul ignore next */
    {
      cov_2opze6uzjl().b[9][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2opze6uzjl().b[7][1]++;
  }
  cov_2opze6uzjl().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_2opze6uzjl().b[11][0]++, context.includeCapabilities) &&
  /* istanbul ignore next */
  (cov_2opze6uzjl().b[11][1]++, !fields.includes('capabilities'))) {
    /* istanbul ignore next */
    cov_2opze6uzjl().b[10][0]++;
    cov_2opze6uzjl().s[26]++;
    fields.push('capabilities');
  } else
  /* istanbul ignore next */
  {
    cov_2opze6uzjl().b[10][1]++;
  }
  cov_2opze6uzjl().s[27]++;
  return fields.join(',');
}
const VIEW_MODE_FIELDS =
/* istanbul ignore next */
(cov_2opze6uzjl().s[28]++, {
  // Grid view with thumbnails
  GRID: getDynamicFields('LIST_STANDARD', {
    showThumbnails: true
  }),
  // List view without thumbnails
  LIST: FIELD_SETS.LIST_STANDARD,
  // Compact view - minimal data
  COMPACT: FIELD_SETS.LIST_BASIC,
  // Detailed view - comprehensive data
  DETAILED: FIELD_SETS.LIST_DETAILED
});
class FieldOptimizationMonitor {
  trackRequest(operation, responseTime, fieldsUsed) {
    /* istanbul ignore next */
    cov_2opze6uzjl().f[9]++;
    const existing =
    /* istanbul ignore next */
    (cov_2opze6uzjl().s[29]++,
    /* istanbul ignore next */
    (cov_2opze6uzjl().b[12][0]++, this.metrics.get(operation)) ||
    /* istanbul ignore next */
    (cov_2opze6uzjl().b[12][1]++, {
      requestCount: 0,
      averageResponseTime: 0,
      dataSaved: 0,
      fieldsSaved: 0
    }));
    const newCount =
    /* istanbul ignore next */
    (cov_2opze6uzjl().s[30]++, existing.requestCount + 1);
    const newAvgTime =
    /* istanbul ignore next */
    (cov_2opze6uzjl().s[31]++, (existing.averageResponseTime * existing.requestCount + responseTime) / newCount);
    // Estimate fields saved (assuming full field set would be ~30 fields)
    const estimatedFullFields =
    /* istanbul ignore next */
    (cov_2opze6uzjl().s[32]++, 30);
    const fieldsSaved =
    /* istanbul ignore next */
    (cov_2opze6uzjl().s[33]++, Math.max(0, estimatedFullFields - fieldsUsed));
    /* istanbul ignore next */
    cov_2opze6uzjl().s[34]++;
    this.metrics.set(operation, {
      requestCount: newCount,
      averageResponseTime: newAvgTime,
      dataSaved: existing.dataSaved + fieldsSaved * 100,
      fieldsSaved: existing.fieldsSaved + fieldsSaved
    });
  }
  getMetrics() {
    /* istanbul ignore next */
    cov_2opze6uzjl().f[10]++;
    cov_2opze6uzjl().s[35]++;
    return Object.fromEntries(this.metrics);
  }
  getTotalSavings() {
    /* istanbul ignore next */
    cov_2opze6uzjl().f[11]++;
    cov_2opze6uzjl().s[36]++;
    return Array.from(this.metrics.values()).reduce((acc, metric) => {
      /* istanbul ignore next */
      cov_2opze6uzjl().f[12]++;
      cov_2opze6uzjl().s[37]++;
      return {
        requestsOptimized: acc.requestsOptimized + metric.requestCount,
        estimatedDataSaved: acc.estimatedDataSaved + metric.dataSaved,
        fieldsSaved: acc.fieldsSaved + metric.fieldsSaved
      };
    }, {
      requestsOptimized: 0,
      estimatedDataSaved: 0,
      fieldsSaved: 0
    });
  }
  constructor() {
    /* istanbul ignore next */
    cov_2opze6uzjl().f[13]++;
    cov_2opze6uzjl().s[38]++;
    this.metrics = new Map();
  }
}
const fieldOptimizationMonitor =
/* istanbul ignore next */
(cov_2opze6uzjl().s[39]++, new FieldOptimizationMonitor());
function validateRequiredFields(response, requiredFields) {
  /* istanbul ignore next */
  cov_2opze6uzjl().f[14]++;
  cov_2opze6uzjl().s[40]++;
  return requiredFields.every(field => {
    /* istanbul ignore next */
    cov_2opze6uzjl().f[15]++;
    const fieldPath =
    /* istanbul ignore next */
    (cov_2opze6uzjl().s[41]++, field.split('.'));
    let current =
    /* istanbul ignore next */
    (cov_2opze6uzjl().s[42]++, response);
    /* istanbul ignore next */
    cov_2opze6uzjl().s[43]++;
    for (const path of fieldPath) {
      /* istanbul ignore next */
      cov_2opze6uzjl().s[44]++;
      if (
      /* istanbul ignore next */
      (cov_2opze6uzjl().b[14][0]++, current == null) ||
      /* istanbul ignore next */
      (cov_2opze6uzjl().b[14][1]++, !(path in current))) {
        /* istanbul ignore next */
        cov_2opze6uzjl().b[13][0]++;
        cov_2opze6uzjl().s[45]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2opze6uzjl().b[13][1]++;
      }
      cov_2opze6uzjl().s[46]++;
      current = current[path];
    }
    /* istanbul ignore next */
    cov_2opze6uzjl().s[47]++;
    return true;
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,