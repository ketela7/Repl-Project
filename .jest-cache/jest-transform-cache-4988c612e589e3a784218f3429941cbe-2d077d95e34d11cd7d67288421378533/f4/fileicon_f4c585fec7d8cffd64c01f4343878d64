31882c6997d02655624fea85d5c0bb1b
'use client';
"use strict";

/* istanbul ignore next */
function cov_l11fclwcv() {
  var path = "/home/runner/workspace/src/components/file-icon.tsx";
  var hash = "f2bad1a74dc5c58e1867eae9e92814d4ae3432eb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/components/file-icon.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 24
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 27
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 44
        }
      },
      "8": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "9": {
        start: {
          line: 24,
          column: 37
        },
        end: {
          line: 24,
          column: 85
        }
      },
      "10": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "11": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 32,
          column: 35
        }
      },
      "12": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 71
        }
      },
      "13": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 128
        }
      },
      "14": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "15": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "16": {
        start: {
          line: 71,
          column: 26
        },
        end: {
          line: 71,
          column: 71
        }
      },
      "17": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 74,
          column: 7
        }
      },
      "18": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 85,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 14
          },
          end: {
            line: 13,
            column: 15
          }
        },
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 16,
            column: 18
          }
        },
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "FileIcon",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 17
          }
        },
        loc: {
          start: {
            line: 23,
            column: 83
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "getFileIcon",
        decl: {
          start: {
            line: 76,
            column: 9
          },
          end: {
            line: 76,
            column: 20
          }
        },
        loc: {
          start: {
            line: 76,
            column: 52
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 76
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 51
          },
          end: {
            line: 23,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 65
          },
          end: {
            line: 23,
            column: 66
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 68
          },
          end: {
            line: 23,
            column: 79
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 75
          },
          end: {
            line: 23,
            column: 79
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 34,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 34,
            column: 82
          }
        }, {
          start: {
            line: 34,
            column: 85
          },
          end: {
            line: 34,
            column: 128
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 50
          }
        }, {
          start: {
            line: 71,
            column: 54
          },
          end: {
            line: 71,
            column: 71
          }
        }],
        line: 71
      },
      "4": {
        loc: {
          start: {
            line: 79,
            column: 11
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 11
          },
          end: {
            line: 79,
            column: 19
          }
        }, {
          start: {
            line: 79,
            column: 23
          },
          end: {
            line: 81,
            column: 9
          }
        }],
        line: 79
      },
      "5": {
        loc: {
          start: {
            line: 82,
            column: 11
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 11
          },
          end: {
            line: 82,
            column: 20
          }
        }, {
          start: {
            line: 82,
            column: 24
          },
          end: {
            line: 84,
            column: 9
          }
        }],
        line: 82
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/components/file-icon.tsx"],
      sourcesContent: ["'use client'\n\nimport {\n  FileText,\n  Folder,\n  FileCheck,\n  Palette,\n  BookOpen,\n  Music,\n  Archive,\n  File,\n  FileSpreadsheet,\n  Presentation,\n  FileImage,\n  FileVideo,\n  FileCode,\n  Database,\n  MapPin,\n  Globe,\n  Link,\n  FileType,\n  FileAudio,\n  Package,\n  Zap,\n  Terminal,\n  Settings,\n  Box,\n  Monitor,\n  Smartphone,\n  Camera,\n  Printer,\n  HardDrive,\n} from 'lucide-react'\n\nimport { getFileIconProps } from '@/lib/google-drive/utils'\n\ninterface FileIconProps {\n  mimeType: string\n  fileName?: string\n  className?: string\n  strokeWidth?: number\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n}\n\nexport function FileIcon({ mimeType, fileName, className, strokeWidth = 2, size = 'md' }: FileIconProps) {\n  const { iconName, colorClass } = getFileIconProps(mimeType, fileName)\n\n  // Size mapping for consistency\n  const sizeMap = {\n    sm: 'h-3 w-3',\n    md: 'h-4 w-4',\n    lg: 'h-8 w-8',\n    xl: 'h-6 w-6',\n  }\n\n  const sizeClass = sizeMap[size]\n  const baseClasses = 'drop-shadow-sm transition-colors duration-200'\n  const finalClassName = className\n    ? `${className} ${colorClass} ${baseClasses}`\n    : `${sizeClass} ${colorClass} ${baseClasses}`\n\n  const iconProps = {\n    className: finalClassName,\n    strokeWidth,\n    'data-testid': 'file-icon',\n  }\n\n  const iconComponents: Record<string, React.ComponentType<any>> = {\n    Folder,\n    FileText,\n    FileSpreadsheet,\n    Presentation,\n    FileCheck,\n    Palette,\n    BookOpen,\n    FileImage,\n    FileVideo,\n    Archive,\n    FileCode,\n    Database,\n    File,\n    Music,\n    MapPin,\n    Globe,\n    Link,\n    FileType,\n    FileAudio,\n    Package,\n    Zap,\n    Terminal,\n    Settings,\n    Box,\n    Monitor,\n    Smartphone,\n    Camera,\n    Printer,\n    HardDrive,\n  }\n\n  const IconComponent = iconComponents[iconName] || File\n\n  return <IconComponent {...iconProps} />\n}\n\n// Helper function that can be used in both client and server components\nexport function getFileIcon(mimeType: string, fileName?: string, className?: string) {\n  return <FileIcon mimeType={mimeType} {...(fileName && { fileName })} {...(className && { className })} />\n}\n"],
      names: ["FileIcon", "getFileIcon", "mimeType", "fileName", "className", "strokeWidth", "size", "iconName", "colorClass", "getFileIconProps", "sizeMap", "sm", "md", "lg", "xl", "sizeClass", "baseClasses", "finalClassName", "iconProps", "iconComponents", "Folder", "FileText", "FileSpreadsheet", "Presentation", "FileCheck", "Palette", "BookOpen", "FileImage", "FileVideo", "Archive", "FileCode", "Database", "File", "Music", "MapPin", "Globe", "Link", "FileType", "FileAudio", "Package", "Zap", "Terminal", "Settings", "Box", "Monitor", "Smartphone", "Camera", "Printer", "HardDrive", "IconComponent"],
      mappings: "AAAA;;;;;;;;;;;;IA4CgBA,QAAQ;eAARA;;IA6DAC,WAAW;eAAXA;;;;6BAzET;uBAE0B;AAU1B,SAASD,SAAS,EAAEE,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,cAAc,CAAC,EAAEC,OAAO,IAAI,EAAiB;IACrG,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE,GAAGC,IAAAA,uBAAgB,EAACP,UAAUC;IAE5D,+BAA+B;IAC/B,MAAMO,UAAU;QACdC,IAAI;QACJC,IAAI;QACJC,IAAI;QACJC,IAAI;IACN;IAEA,MAAMC,YAAYL,OAAO,CAACJ,KAAK;IAC/B,MAAMU,cAAc;IACpB,MAAMC,iBAAiBb,YACnB,GAAGA,UAAU,CAAC,EAAEI,WAAW,CAAC,EAAEQ,aAAa,GAC3C,GAAGD,UAAU,CAAC,EAAEP,WAAW,CAAC,EAAEQ,aAAa;IAE/C,MAAME,YAAY;QAChBd,WAAWa;QACXZ;QACA,eAAe;IACjB;IAEA,MAAMc,iBAA2D;QAC/DC,QAAAA,mBAAM;QACNC,UAAAA,qBAAQ;QACRC,iBAAAA,4BAAe;QACfC,cAAAA,yBAAY;QACZC,WAAAA,sBAAS;QACTC,SAAAA,oBAAO;QACPC,UAAAA,qBAAQ;QACRC,WAAAA,sBAAS;QACTC,WAAAA,sBAAS;QACTC,SAAAA,oBAAO;QACPC,UAAAA,qBAAQ;QACRC,UAAAA,qBAAQ;QACRC,MAAAA,iBAAI;QACJC,OAAAA,kBAAK;QACLC,QAAAA,mBAAM;QACNC,OAAAA,kBAAK;QACLC,MAAAA,iBAAI;QACJC,UAAAA,qBAAQ;QACRC,WAAAA,sBAAS;QACTC,SAAAA,oBAAO;QACPC,KAAAA,gBAAG;QACHC,UAAAA,qBAAQ;QACRC,UAAAA,qBAAQ;QACRC,KAAAA,gBAAG;QACHC,SAAAA,oBAAO;QACPC,YAAAA,uBAAU;QACVC,QAAAA,mBAAM;QACNC,SAAAA,oBAAO;QACPC,WAAAA,sBAAS;IACX;IAEA,MAAMC,gBAAgB9B,cAAc,CAACZ,SAAS,IAAIyB,iBAAI;IAEtD,qBAAO,qBAACiB;QAAe,GAAG/B,SAAS;;AACrC;AAGO,SAASjB,YAAYC,QAAgB,EAAEC,QAAiB,EAAEC,SAAkB;IACjF,qBAAO,qBAACJ;QAASE,UAAUA;QAAW,GAAIC,YAAY;YAAEA;QAAS,CAAC;QAAI,GAAIC,aAAa;YAAEA;QAAU,CAAC;;AACtG"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f2bad1a74dc5c58e1867eae9e92814d4ae3432eb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_l11fclwcv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_l11fclwcv();
cov_l11fclwcv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_l11fclwcv().f[0]++;
  cov_l11fclwcv().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_l11fclwcv().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_l11fclwcv().s[3]++;
_export(exports, {
  FileIcon: function () {
    /* istanbul ignore next */
    cov_l11fclwcv().f[1]++;
    cov_l11fclwcv().s[4]++;
    return FileIcon;
  },
  getFileIcon: function () {
    /* istanbul ignore next */
    cov_l11fclwcv().f[2]++;
    cov_l11fclwcv().s[5]++;
    return getFileIcon;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_l11fclwcv().s[6]++, require("react/jsx-runtime"));
const _lucidereact =
/* istanbul ignore next */
(cov_l11fclwcv().s[7]++, require("lucide-react"));
const _utils =
/* istanbul ignore next */
(cov_l11fclwcv().s[8]++, require("../lib/google-drive/utils"));
function FileIcon({
  mimeType,
  fileName,
  className,
  strokeWidth =
  /* istanbul ignore next */
  (cov_l11fclwcv().b[0][0]++, 2),
  size =
  /* istanbul ignore next */
  (cov_l11fclwcv().b[1][0]++, 'md')
}) {
  /* istanbul ignore next */
  cov_l11fclwcv().f[3]++;
  const {
    iconName,
    colorClass
  } =
  /* istanbul ignore next */
  (cov_l11fclwcv().s[9]++, (0, _utils.getFileIconProps)(mimeType, fileName));
  // Size mapping for consistency
  const sizeMap =
  /* istanbul ignore next */
  (cov_l11fclwcv().s[10]++, {
    sm: 'h-3 w-3',
    md: 'h-4 w-4',
    lg: 'h-8 w-8',
    xl: 'h-6 w-6'
  });
  const sizeClass =
  /* istanbul ignore next */
  (cov_l11fclwcv().s[11]++, sizeMap[size]);
  const baseClasses =
  /* istanbul ignore next */
  (cov_l11fclwcv().s[12]++, 'drop-shadow-sm transition-colors duration-200');
  const finalClassName =
  /* istanbul ignore next */
  (cov_l11fclwcv().s[13]++, className ?
  /* istanbul ignore next */
  (cov_l11fclwcv().b[2][0]++, `${className} ${colorClass} ${baseClasses}`) :
  /* istanbul ignore next */
  (cov_l11fclwcv().b[2][1]++, `${sizeClass} ${colorClass} ${baseClasses}`));
  const iconProps =
  /* istanbul ignore next */
  (cov_l11fclwcv().s[14]++, {
    className: finalClassName,
    strokeWidth,
    'data-testid': 'file-icon'
  });
  const iconComponents =
  /* istanbul ignore next */
  (cov_l11fclwcv().s[15]++, {
    Folder: _lucidereact.Folder,
    FileText: _lucidereact.FileText,
    FileSpreadsheet: _lucidereact.FileSpreadsheet,
    Presentation: _lucidereact.Presentation,
    FileCheck: _lucidereact.FileCheck,
    Palette: _lucidereact.Palette,
    BookOpen: _lucidereact.BookOpen,
    FileImage: _lucidereact.FileImage,
    FileVideo: _lucidereact.FileVideo,
    Archive: _lucidereact.Archive,
    FileCode: _lucidereact.FileCode,
    Database: _lucidereact.Database,
    File: _lucidereact.File,
    Music: _lucidereact.Music,
    MapPin: _lucidereact.MapPin,
    Globe: _lucidereact.Globe,
    Link: _lucidereact.Link,
    FileType: _lucidereact.FileType,
    FileAudio: _lucidereact.FileAudio,
    Package: _lucidereact.Package,
    Zap: _lucidereact.Zap,
    Terminal: _lucidereact.Terminal,
    Settings: _lucidereact.Settings,
    Box: _lucidereact.Box,
    Monitor: _lucidereact.Monitor,
    Smartphone: _lucidereact.Smartphone,
    Camera: _lucidereact.Camera,
    Printer: _lucidereact.Printer,
    HardDrive: _lucidereact.HardDrive
  });
  const IconComponent =
  /* istanbul ignore next */
  (cov_l11fclwcv().s[16]++,
  /* istanbul ignore next */
  (cov_l11fclwcv().b[3][0]++, iconComponents[iconName]) ||
  /* istanbul ignore next */
  (cov_l11fclwcv().b[3][1]++, _lucidereact.File));
  /* istanbul ignore next */
  cov_l11fclwcv().s[17]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(IconComponent, {
    ...iconProps
  });
}
function getFileIcon(mimeType, fileName, className) {
  /* istanbul ignore next */
  cov_l11fclwcv().f[4]++;
  cov_l11fclwcv().s[18]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(FileIcon, {
    mimeType: mimeType,
    ...(
    /* istanbul ignore next */
    (cov_l11fclwcv().b[4][0]++, fileName) &&
    /* istanbul ignore next */
    (cov_l11fclwcv().b[4][1]++, {
      fileName
    })),
    ...(
    /* istanbul ignore next */
    (cov_l11fclwcv().b[5][0]++, className) &&
    /* istanbul ignore next */
    (cov_l11fclwcv().b[5][1]++, {
      className
    }))
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,