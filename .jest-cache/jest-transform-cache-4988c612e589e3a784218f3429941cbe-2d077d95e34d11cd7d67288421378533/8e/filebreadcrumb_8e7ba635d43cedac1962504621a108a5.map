{"version":3,"names":["cov_d46q84749","actualCoverage","s","FileBreadcrumb","f","default","_default","currentFolderId","onNavigate","loading","externalLoading","breadcrumbItems","setBreadcrumbItems","_react","useState","setLoading","error","setError","fetchFolderPath","folderId","response","fetch","method","headers","ok","b","errorText","text","Error","status","folder","json","actualId","id","pathItems","currentFolder","visitedFolders","Set","push","name","add","parents","length","parentId","has","parentResponse","parentFolder","actualParentId","err","reverse","useEffect","isLoading","_jsxruntime","jsxs","className","jsx","_breadcrumb","Breadcrumb","BreadcrumbList","BreadcrumbItem","BreadcrumbLink","href","onClick","e","preventDefault","_lucidereact","Home","map","index","Fragment","BreadcrumbSeparator","ChevronRight","BreadcrumbPage","Folder","Loader2","_button","Button","variant","size"],"sources":["/home/runner/workspace/src/app/(main)/dashboard/drive/_components/file-breadcrumb.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, Fragment } from 'react'\nimport { Home, Folder, ChevronRight, Loader2 } from 'lucide-react'\n\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from '@/components/ui/breadcrumb'\nimport { Button } from '@/components/ui/button'\n\ninterface BreadcrumbItemData {\n  id: string\n  name: string\n}\n\ninterface FileBreadcrumbProps {\n  currentFolderId: string | null\n  onNavigate: (folderId: string | null) => void\n  onBackToRoot?: () => void\n  loading?: boolean\n}\n\nexport function FileBreadcrumb({ currentFolderId, onNavigate, loading: externalLoading }: FileBreadcrumbProps) {\n  const [breadcrumbItems, setBreadcrumbItems] = useState<BreadcrumbItemData[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  const fetchFolderPath = async (folderId: string) => {\n    try {\n      // // // // // console.log('[Breadcrumb] Starting fetchFolderPath for:', folderId)\n      setLoading(true)\n      setError(null)\n\n      const response = await fetch(`/api/drive/files?fileId=${folderId}`, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n      })\n\n      // // // // // console.log('[Breadcrumb] API Response status:', response.status)\n      // // // // // console.log('[Breadcrumb] API Response headers:', response.headers)\n\n      if (!response.ok) {\n        const errorText = await response.text()\n        // // // // // console.error('[Breadcrumb] API Error response:', errorText)\n        throw new Error(`Failed to fetch folder: ${response.status} - ${errorText}`)\n      }\n\n      const folder = await response.json()\n      // // // // // console.log('[Breadcrumb] Initial folder data:', folder)\n      // // // // // console.log('[Breadcrumb] Folder properties:', Object.keys(folder))\n      // // // // // console.log('[Breadcrumb] Folder ID raw:', folder.id)\n      // // // // // console.log('[Breadcrumb] Folder name:', folder.name)\n      // // // // // console.log('[Breadcrumb] Folder parents:', folder.parents)\n\n      // Use fileId if id is not available (common in Google Drive API responses)\n      const actualId = folder.id || folderId\n      // // // // // console.log('[Breadcrumb] Resolved folder ID:', actualId)\n\n      // Validate folder data\n      if (!actualId) {\n        // // // // // console.error('[Breadcrumb] ERROR: Folder missing ID property!', folder)\n        throw new Error('Invalid folder data: missing ID')\n      }\n\n      // Update folder object with correct ID\n      folder.id = actualId\n\n      const pathItems: BreadcrumbItemData[] = []\n      let currentFolder = folder\n      const visitedFolders = new Set<string>()\n\n      // Add current folder first\n      // // // // // console.log('[Breadcrumb] Adding current folder - ID:', currentFolder.id, 'Name:', currentFolder.name)\n      pathItems.push({ id: currentFolder.id, name: currentFolder.name })\n      visitedFolders.add(currentFolder.id)\n\n      // Traverse up to root\n      // // // // // console.log('[Breadcrumb] Starting parent traversal, current folder parents:', currentFolder.parents)\n\n      while (currentFolder.parents && currentFolder.parents.length > 0 && currentFolder.parents[0] !== 'root') {\n        const parentId = currentFolder.parents[0]\n        // // // // // console.log('[Breadcrumb] Processing parent ID:', parentId)\n\n        // Prevent infinite loops\n        if (visitedFolders.has(parentId)) {\n          // // // // // console.log('[Breadcrumb] Detected circular reference, breaking loop')\n          break\n        }\n        try {\n          // // // // // console.log('[Breadcrumb] Fetching parent with fileId:', parentId)\n\n          const parentResponse = await fetch(`/api/drive/files?fileId=${parentId}`, {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n          })\n          if (!parentResponse.ok) {\n            // // // // // console.log('[Breadcrumb] Parent response not ok:', parentResponse.status)\n            break\n          }\n\n          const parentFolder = await parentResponse.json()\n          // // // // // console.log('[Breadcrumb] Parent folder data:', parentFolder)\n          // // // // // console.log('[Breadcrumb] Parent folder properties:', Object.keys(parentFolder))\n          // // // // // console.log('[Breadcrumb] Parent folder ID raw:', parentFolder.id)\n          // // // // // console.log('[Breadcrumb] Parent folder name:', parentFolder.name)\n\n          // Use fileId if id is not available\n          const actualParentId = parentFolder.id || parentId\n          // // // // // console.log('[Breadcrumb] Resolved parent folder ID:', actualParentId)\n\n          // Validate parent folder data\n          if (!actualParentId) {\n            // // // // // console.error('[Breadcrumb] ERROR: Parent folder missing ID!', parentFolder)\n            break\n          }\n\n          // Update parent folder object with correct ID\n          parentFolder.id = actualParentId\n\n          // // // // // console.log('[Breadcrumb] Adding parent folder - ID:', parentFolder.id, 'Name:', parentFolder.name)\n          pathItems.push({ id: parentFolder.id, name: parentFolder.name })\n          visitedFolders.add(actualParentId)\n          currentFolder = parentFolder\n          // // // // // console.log('[Breadcrumb] Next parent will be:', currentFolder.parents ? currentFolder.parents[0] : 'none')\n        } catch (err) {\n          // // // // // console.error(`[Breadcrumb] Error fetching parent folder:${parentId}`, err)\n          break\n        }\n      }\n\n      // // // // // console.log('[Breadcrumb] Finished parent traversal, pathItems before reverse:', pathItems)\n\n      // Reverse path items to show from root to current folder\n      pathItems.reverse()\n      // // // // // console.log('[Breadcrumb] Final items:', pathItems)\n      setBreadcrumbItems(pathItems)\n    } catch (error) {\n      // Log error for debugging in development only\n      // // // // // console.error(`Error fetching folder path: ${folderId}`, error)\n\n      setError('Failed to load folder path')\n      setBreadcrumbItems([])\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (currentFolderId) {\n      fetchFolderPath(currentFolderId)\n    } else {\n      setBreadcrumbItems([])\n      setError(null)\n    }\n  }, [currentFolderId])\n\n  const isLoading = loading || externalLoading\n\n  return (\n    <div className=\"bg-muted/30 flex items-center gap-2 overflow-x-auto rounded-lg border px-2 py-3\">\n      <Breadcrumb>\n        <BreadcrumbList className=\"min-w-0 flex-nowrap\">\n          {/* Root Drive Link */}\n          <BreadcrumbItem>\n            <BreadcrumbLink\n              href=\"#\"\n              onClick={e => {\n                e.preventDefault()\n                onNavigate(null)\n              }}\n              className={`hover:text-primary flex items-center gap-2 whitespace-nowrap transition-colors ${!currentFolderId ? 'text-primary font-medium' : ''}`}\n            >\n              <Home className=\"h-4 w-4 flex-shrink-0\" />\n              <span className=\"hidden sm:inline\">My Drive</span>\n              <span className=\"sm:hidden\">Drive</span>\n            </BreadcrumbLink>\n          </BreadcrumbItem>\n\n          {/* Folder Breadcrumb Items */}\n          {breadcrumbItems.map((folder, index) => (\n            <Fragment key={`breadcrumb-${folder.id}-${index}`}>\n              <BreadcrumbSeparator>\n                <ChevronRight className=\"h-4 w-4\" />\n              </BreadcrumbSeparator>\n              <BreadcrumbItem>\n                {index === breadcrumbItems.length - 1 ? (\n                  <BreadcrumbPage className=\"flex max-w-[120px] items-center gap-2 whitespace-nowrap sm:max-w-[200px] md:max-w-none\">\n                    <Folder className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                    <span className=\"text-primary truncate font-medium\">{folder.name}</span>\n                  </BreadcrumbPage>\n                ) : (\n                  <BreadcrumbLink\n                    href=\"#\"\n                    onClick={e => {\n                      e.preventDefault()\n                      // // // // // console.log('[Breadcrumb] Navigating to folder:', folder.name, 'ID:', folder.id)\n                      // // // // // console.log('[Breadcrumb] Full folder object:', folder)\n                      if (!folder.id) {\n                        // // // // // console.error('[Breadcrumb] ERROR: Folder ID is null/undefined!', folder)\n                        // // // // // console.error('[Breadcrumb] Cannot navigate without valid folder ID')\n                        return\n                      }\n                      onNavigate(folder.id)\n                    }}\n                    className=\"hover:text-primary flex max-w-[120px] items-center gap-2 whitespace-nowrap transition-colors sm:max-w-[200px] md:max-w-none\"\n                  >\n                    <Folder className=\"h-4 w-4 flex-shrink-0\" />\n                    <span className=\"truncate\">{folder.name}</span>\n                  </BreadcrumbLink>\n                )}\n              </BreadcrumbItem>\n            </Fragment>\n          ))}\n        </BreadcrumbList>\n      </Breadcrumb>\n\n      {/* Loading Indicator */}\n      {isLoading && (\n        <div className=\"text-muted-foreground ml-2 flex items-center gap-1\">\n          <Loader2 className=\"h-3 w-3 animate-spin\" />\n          <span className=\"hidden text-xs sm:inline\">Loading...</span>\n        </div>\n      )}\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"text-destructive ml-2 flex items-center gap-1\">\n          <span className=\"text-xs\">{error}</span>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => currentFolderId && fetchFolderPath(currentFolderId)}\n            className=\"h-6 px-2 text-xs\"\n          >\n            Retry\n          </Button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FileBreadcrumb\n"],"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","ignoreList":[]}