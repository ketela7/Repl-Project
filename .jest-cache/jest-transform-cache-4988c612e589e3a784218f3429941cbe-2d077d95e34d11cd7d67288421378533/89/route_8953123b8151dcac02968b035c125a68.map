{"version":3,"names":["cov_13nmfi9n1j","actualCoverage","s","POST","request","f","authResult","_apiutils","initDriveService","success","b","response","driveService","body","json","folderId","_server","NextResponse","error","status","_apithrottle","throttledDriveRequest","_apiretry","retryDriveApiCall","drive","files","get","fileId","fields","file","data","mimeType","details","trashed","canAddChildren","capabilities","folder","id","name","code","message","handleApiError"],"sources":["/home/runner/workspace/src/app/api/drive/folders/validate/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\n\nimport { initDriveService, handleApiError } from '@/lib/api-utils'\nimport { retryDriveApiCall } from '@/lib/api-retry'\nimport { throttledDriveRequest } from '@/lib/api-throttle'\n\nexport async function POST(request: NextRequest) {\n  try {\n    const authResult = await initDriveService()\n    if (!authResult.success) {\n      return authResult.response!\n    }\n\n    const { driveService } = authResult\n    const body = await request.json()\n    const { folderId } = body\n\n    if (!folderId) {\n      return NextResponse.json({ error: 'Folder ID is required' }, { status: 400 })\n    }\n\n    try {\n      // Use minimal fields to reduce API load and improve error handling\n      const response = await throttledDriveRequest(async () => {\n        return await retryDriveApiCall(async () => {\n          return await driveService!.drive.files.get({\n            fileId: folderId,\n            fields: 'id,name,mimeType,trashed,capabilities(canAddChildren)',\n          })\n        })\n      })\n\n      const file = response.data\n\n      // Check if it's actually a folder\n      if (file.mimeType !== 'application/vnd.google-apps.folder') {\n        return NextResponse.json({\n          success: false,\n          error: 'The provided ID is not a folder',\n          details: 'The ID points to a file, not a folder',\n        })\n      }\n\n      // Check if folder is trashed\n      if (file.trashed) {\n        return NextResponse.json({\n          success: false,\n          error: 'Folder is in trash',\n          details: 'Cannot move items to a trashed folder',\n        })\n      }\n\n      // Check if user can add children (write permission)\n      const canAddChildren = file.capabilities?.canAddChildren ?? false\n      if (!canAddChildren) {\n        return NextResponse.json({\n          success: false,\n          error: 'Access denied',\n          details: 'You do not have permission to add files to this folder',\n        })\n      }\n\n      return NextResponse.json({\n        success: true,\n        folder: {\n          id: file.id,\n          name: file.name,\n          mimeType: file.mimeType,\n          canAddChildren,\n        },\n      })\n    } catch (error: any) {\n      // Handle specific Google Drive API errors\n      if (error.code === 404) {\n        return NextResponse.json({\n          success: false,\n          error: 'Folder not found',\n          details: 'The folder ID does not exist or you do not have access to it',\n        })\n      }\n\n      if (error.code === 403) {\n        return NextResponse.json({\n          success: false,\n          error: 'Access denied',\n          details: 'You do not have permission to access this folder',\n        })\n      }\n\n      if (error.code === 401) {\n        return NextResponse.json({\n          success: false,\n          error: 'Authentication required',\n          details: 'Please reconnect your Google Drive account',\n        })\n      }\n\n      // Generic error for other cases\n      return NextResponse.json({\n        success: false,\n        error: 'Folder validation failed',\n        details: error.message || 'Unable to validate folder access',\n      })\n    }\n  } catch (error) {\n    return handleApiError(error)\n  }\n}\n"],"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","ignoreList":[]}