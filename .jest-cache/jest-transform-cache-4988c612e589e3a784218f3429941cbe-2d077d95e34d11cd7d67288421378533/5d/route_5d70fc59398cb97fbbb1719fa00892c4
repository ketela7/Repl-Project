2f6b53b2531f331b2bbb37f34bbd5280
"use strict";

/* istanbul ignore next */
function cov_uqvpre5un() {
  var path = "/home/runner/workspace/src/app/api/drive/files/download/route.ts";
  var hash = "869bb7f21cc39bd981c33db90b667f5bc85d3b8a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/app/api/drive/files/download/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 57
        }
      },
      "5": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 57
        }
      },
      "6": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 63
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "8": {
        start: {
          line: 17,
          column: 33
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "9": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 49
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "11": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 24,
          column: 15
        }
      },
      "12": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 39
        }
      },
      "15": {
        start: {
          line: 31,
          column: 29
        },
        end: {
          line: 31,
          column: 52
        }
      },
      "16": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "17": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "18": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 38,
          column: 19
        }
      },
      "19": {
        start: {
          line: 41,
          column: 51
        },
        end: {
          line: 41,
          column: 64
        }
      },
      "20": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "21": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "22": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "23": {
        start: {
          line: 51,
          column: 33
        },
        end: {
          line: 51,
          column: 58
        }
      },
      "24": {
        start: {
          line: 52,
          column: 29
        },
        end: {
          line: 61,
          column: 14
        }
      },
      "25": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 60,
          column: 19
        }
      },
      "26": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 59,
          column: 23
        }
      },
      "27": {
        start: {
          line: 62,
          column: 35
        },
        end: {
          line: 62,
          column: 107
        }
      },
      "28": {
        start: {
          line: 64,
          column: 27
        },
        end: {
          line: 85,
          column: 14
        }
      },
      "29": {
        start: {
          line: 66,
          column: 33
        },
        end: {
          line: 66,
          column: 38
        }
      },
      "30": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 71,
          column: 23
        }
      },
      "31": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "32": {
        start: {
          line: 69,
          column: 28
        },
        end: {
          line: 69,
          column: 70
        }
      },
      "33": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 77,
          column: 23
        }
      },
      "34": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 76,
          column: 25
        }
      },
      "35": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 74,
          column: 42
        }
      },
      "36": {
        start: {
          line: 75,
          column: 28
        },
        end: {
          line: 75,
          column: 47
        }
      },
      "37": {
        start: {
          line: 78,
          column: 20
        },
        end: {
          line: 83,
          column: 23
        }
      },
      "38": {
        start: {
          line: 79,
          column: 24
        },
        end: {
          line: 82,
          column: 25
        }
      },
      "39": {
        start: {
          line: 80,
          column: 28
        },
        end: {
          line: 80,
          column: 42
        }
      },
      "40": {
        start: {
          line: 81,
          column: 28
        },
        end: {
          line: 81,
          column: 50
        }
      },
      "41": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 92,
          column: 15
        }
      },
      "42": {
        start: {
          line: 95,
          column: 25
        },
        end: {
          line: 104,
          column: 10
        }
      },
      "43": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 103,
          column: 15
        }
      },
      "44": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 102,
          column: 19
        }
      },
      "45": {
        start: {
          line: 106,
          column: 23
        },
        end: {
          line: 127,
          column: 10
        }
      },
      "46": {
        start: {
          line: 108,
          column: 29
        },
        end: {
          line: 108,
          column: 34
        }
      },
      "47": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 113,
          column: 19
        }
      },
      "48": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 112,
          column: 21
        }
      },
      "49": {
        start: {
          line: 111,
          column: 24
        },
        end: {
          line: 111,
          column: 66
        }
      },
      "50": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 119,
          column: 19
        }
      },
      "51": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 118,
          column: 21
        }
      },
      "52": {
        start: {
          line: 116,
          column: 24
        },
        end: {
          line: 116,
          column: 38
        }
      },
      "53": {
        start: {
          line: 117,
          column: 24
        },
        end: {
          line: 117,
          column: 43
        }
      },
      "54": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 125,
          column: 19
        }
      },
      "55": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 124,
          column: 21
        }
      },
      "56": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 38
        }
      },
      "57": {
        start: {
          line: 123,
          column: 24
        },
        end: {
          line: 123,
          column: 46
        }
      },
      "58": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "59": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 52
        }
      },
      "60": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 73
        }
      },
      "61": {
        start: {
          line: 150,
          column: 22
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "62": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 52
        }
      },
      "63": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "64": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 43
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 15,
            column: 18
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 71
          },
          end: {
            line: 33,
            column: 72
          }
        },
        loc: {
          start: {
            line: 33,
            column: 81
          },
          end: {
            line: 40,
            column: 9
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 58
          },
          end: {
            line: 34,
            column: 59
          }
        },
        loc: {
          start: {
            line: 34,
            column: 68
          },
          end: {
            line: 39,
            column: 13
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 75
          },
          end: {
            line: 52,
            column: 76
          }
        },
        loc: {
          start: {
            line: 52,
            column: 85
          },
          end: {
            line: 61,
            column: 13
          }
        },
        line: 52
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 53,
            column: 62
          },
          end: {
            line: 53,
            column: 63
          }
        },
        loc: {
          start: {
            line: 53,
            column: 72
          },
          end: {
            line: 60,
            column: 17
          }
        },
        line: 53
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 17
          }
        },
        loc: {
          start: {
            line: 65,
            column: 35
          },
          end: {
            line: 84,
            column: 17
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 45
          },
          end: {
            line: 67,
            column: 46
          }
        },
        loc: {
          start: {
            line: 67,
            column: 54
          },
          end: {
            line: 71,
            column: 21
          }
        },
        line: 67
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 72,
            column: 44
          },
          end: {
            line: 72,
            column: 45
          }
        },
        loc: {
          start: {
            line: 72,
            column: 48
          },
          end: {
            line: 77,
            column: 21
          }
        },
        line: 72
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 78,
            column: 46
          },
          end: {
            line: 78,
            column: 47
          }
        },
        loc: {
          start: {
            line: 78,
            column: 53
          },
          end: {
            line: 83,
            column: 21
          }
        },
        line: 78
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 95,
            column: 71
          },
          end: {
            line: 95,
            column: 72
          }
        },
        loc: {
          start: {
            line: 95,
            column: 81
          },
          end: {
            line: 104,
            column: 9
          }
        },
        line: 95
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 96,
            column: 58
          },
          end: {
            line: 96,
            column: 59
          }
        },
        loc: {
          start: {
            line: 96,
            column: 68
          },
          end: {
            line: 103,
            column: 13
          }
        },
        line: 96
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        },
        loc: {
          start: {
            line: 107,
            column: 31
          },
          end: {
            line: 126,
            column: 13
          }
        },
        line: 107
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 109,
            column: 41
          },
          end: {
            line: 109,
            column: 42
          }
        },
        loc: {
          start: {
            line: 109,
            column: 50
          },
          end: {
            line: 113,
            column: 17
          }
        },
        line: 109
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 114,
            column: 40
          },
          end: {
            line: 114,
            column: 41
          }
        },
        loc: {
          start: {
            line: 114,
            column: 44
          },
          end: {
            line: 119,
            column: 17
          }
        },
        line: 114
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 120,
            column: 42
          },
          end: {
            line: 120,
            column: 43
          }
        },
        loc: {
          start: {
            line: 120,
            column: 49
          },
          end: {
            line: 125,
            column: 17
          }
        },
        line: 120
      },
      "16": {
        name: "isGoogleWorkspaceFile",
        decl: {
          start: {
            line: 144,
            column: 13
          },
          end: {
            line: 144,
            column: 34
          }
        },
        loc: {
          start: {
            line: 144,
            column: 45
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 144
      },
      "17": {
        name: "getExportFormat",
        decl: {
          start: {
            line: 149,
            column: 13
          },
          end: {
            line: 149,
            column: 28
          }
        },
        loc: {
          start: {
            line: 149,
            column: 39
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 149
      },
      "18": {
        name: "getFileExtension",
        decl: {
          start: {
            line: 160,
            column: 13
          },
          end: {
            line: 160,
            column: 29
          }
        },
        loc: {
          start: {
            line: 160,
            column: 40
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 160
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 21
          }
        }, {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 34
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 24
          },
          end: {
            line: 70,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 24
          },
          end: {
            line: 70,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 76,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 76,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 24
          },
          end: {
            line: 82,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 24
          },
          end: {
            line: 82,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "8": {
        loc: {
          start: {
            line: 110,
            column: 20
          },
          end: {
            line: 112,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 20
          },
          end: {
            line: 112,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "9": {
        loc: {
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 118,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 118,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "10": {
        loc: {
          start: {
            line: 121,
            column: 20
          },
          end: {
            line: 124,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 20
          },
          end: {
            line: 124,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "11": {
        loc: {
          start: {
            line: 130,
            column: 32
          },
          end: {
            line: 130,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 32
          },
          end: {
            line: 130,
            column: 40
          }
        }, {
          start: {
            line: 130,
            column: 44
          },
          end: {
            line: 130,
            column: 70
          }
        }],
        line: 130
      },
      "12": {
        loc: {
          start: {
            line: 132,
            column: 19
          },
          end: {
            line: 134,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 19
          },
          end: {
            line: 132,
            column: 23
          }
        }, {
          start: {
            line: 132,
            column: 27
          },
          end: {
            line: 134,
            column: 17
          }
        }],
        line: 132
      },
      "13": {
        loc: {
          start: {
            line: 145,
            column: 11
          },
          end: {
            line: 145,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 11
          },
          end: {
            line: 145,
            column: 63
          }
        }, {
          start: {
            line: 145,
            column: 67
          },
          end: {
            line: 145,
            column: 72
          }
        }],
        line: 145
      },
      "14": {
        loc: {
          start: {
            line: 156,
            column: 11
          },
          end: {
            line: 156,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 11
          },
          end: {
            line: 156,
            column: 30
          }
        }, {
          start: {
            line: 156,
            column: 34
          },
          end: {
            line: 156,
            column: 51
          }
        }],
        line: 156
      },
      "15": {
        loc: {
          start: {
            line: 171,
            column: 11
          },
          end: {
            line: 171,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 11
          },
          end: {
            line: 171,
            column: 33
          }
        }, {
          start: {
            line: 171,
            column: 37
          },
          end: {
            line: 171,
            column: 42
          }
        }],
        line: 171
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/app/api/drive/files/download/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server'\n\nimport { initDriveService, handleApiError } from '@/lib/api-utils'\nimport { retryDriveApiCall } from '@/lib/api-retry'\nimport { throttledDriveRequest } from '@/lib/api-throttle'\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url)\n    const fileId = searchParams.get('fileId')\n\n    if (!fileId) {\n      return NextResponse.json({ error: 'File ID is required' }, { status: 400 })\n    }\n\n    // Initialize Drive service with authentication\n    const authResult = await initDriveService()\n    if (!authResult.success) {\n      return authResult.response!\n    }\n\n    const driveService = authResult.driveService!\n\n    // Get file metadata first\n    const metadata = await throttledDriveRequest(async () => {\n      return await retryDriveApiCall(async () => {\n        return await driveService.drive.files.get({\n          fileId,\n          fields: 'name,mimeType,size',\n        })\n      })\n    })\n\n    const { name: fileName, mimeType, size } = metadata.data\n\n    if (!fileName || !mimeType) {\n      return NextResponse.json({ error: 'File metadata incomplete' }, { status: 500 })\n    }\n\n    // Handle Google Workspace files (export)\n    if (isGoogleWorkspaceFile(mimeType)) {\n      const exportFormat = getExportFormat(mimeType)\n      const response = await throttledDriveRequest(async () => {\n        return await retryDriveApiCall(async () => {\n          return await driveService.drive.files.export(\n            {\n              fileId,\n              mimeType: exportFormat,\n            },\n            {\n              responseType: 'stream',\n            },\n          )\n        })\n      })\n\n      const exportFileName = `${fileName.replace(/\\.[^/.]+$/, '')}.${getFileExtension(exportFormat)}`\n\n      // Convert Node.js stream to Web Stream\n      const stream = new ReadableStream({\n        start(controller) {\n          let closed = false\n\n          response.data.on('data', (chunk: Buffer) => {\n            if (!closed) {\n              controller.enqueue(new Uint8Array(chunk))\n            }\n          })\n\n          response.data.on('end', () => {\n            if (!closed) {\n              closed = true\n              controller.close()\n            }\n          })\n\n          response.data.on('error', (err: Error) => {\n            if (!closed) {\n              closed = true\n              controller.error(err)\n            }\n          })\n        },\n      })\n\n      return new Response(stream, {\n        headers: {\n          'Content-Type': exportFormat,\n          'Content-Disposition': `attachment; filename=\"${exportFileName}\"`,\n          'Cache-Control': 'no-cache',\n        },\n      })\n    }\n\n    // Regular file download - stream response\n    const response = await throttledDriveRequest(async () => {\n      return await retryDriveApiCall(async () => {\n        return await driveService.drive.files.get(\n          {\n            fileId,\n            alt: 'media',\n          },\n          {\n            responseType: 'stream',\n          },\n        )\n      })\n    })\n\n    // Convert Node.js stream to Web Stream\n    const stream = new ReadableStream({\n      start(controller) {\n        let closed = false\n\n        response.data.on('data', (chunk: Buffer) => {\n          if (!closed) {\n            controller.enqueue(new Uint8Array(chunk))\n          }\n        })\n\n        response.data.on('end', () => {\n          if (!closed) {\n            closed = true\n            controller.close()\n          }\n        })\n\n        response.data.on('error', (err: Error) => {\n          if (!closed) {\n            closed = true\n            controller.error(err)\n          }\n        })\n      },\n    })\n\n    return new Response(stream, {\n      headers: {\n        'Content-Type': mimeType || 'application/octet-stream',\n        'Content-Disposition': `attachment; filename=\"${fileName}\"`,\n        ...(size && { 'Content-Length': size }),\n        'Cache-Control': 'no-cache',\n      },\n    })\n  } catch (error) {\n    return handleApiError(error)\n  }\n}\n\n/**\n * Check if file is Google Workspace file that needs export\n */\nfunction isGoogleWorkspaceFile(mimeType: string): boolean {\n  return mimeType?.startsWith('application/vnd.google-apps.') || false\n}\n\n/**\n * Get appropriate export format for Google Workspace files\n */\nfunction getExportFormat(mimeType: string): string {\n  const exportMap: { [key: string]: string } = {\n    'application/vnd.google-apps.document': 'application/pdf',\n    'application/vnd.google-apps.spreadsheet': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.google-apps.presentation':\n      'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.google-apps.drawing': 'image/png',\n  }\n\n  return exportMap[mimeType] || 'application/pdf'\n}\n\n/**\n * Get file extension from mime type\n */\nfunction getFileExtension(mimeType: string): string {\n  const extensionMap: { [key: string]: string } = {\n    'application/pdf': 'pdf',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'xlsx',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'pptx',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'docx',\n    'image/png': 'png',\n    'image/jpeg': 'jpg',\n    'text/plain': 'txt',\n    'text/csv': 'csv',\n  }\n\n  return extensionMap[mimeType] || 'pdf'\n}\n"],
      names: ["GET", "request", "searchParams", "URL", "url", "fileId", "get", "NextResponse", "json", "error", "status", "authResult", "initDriveService", "success", "response", "driveService", "metadata", "throttledDriveRequest", "retryDriveApiCall", "drive", "files", "fields", "name", "fileName", "mimeType", "size", "data", "isGoogleWorkspaceFile", "exportFormat", "getExportFormat", "export", "responseType", "exportFileName", "replace", "getFileExtension", "stream", "ReadableStream", "start", "controller", "closed", "on", "chunk", "enqueue", "Uint8Array", "close", "err", "Response", "headers", "alt", "handleApiError", "startsWith", "exportMap", "extensionMap"],
      mappings: ";;;;+BAMsBA;;;eAAAA;;;wBANoB;0BAEO;0BACf;6BACI;AAE/B,eAAeA,IAAIC,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAIF,QAAQG,GAAG;QAC5C,MAAMC,SAASH,aAAaI,GAAG,CAAC;QAEhC,IAAI,CAACD,QAAQ;YACX,OAAOE,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAAsB,GAAG;gBAAEC,QAAQ;YAAI;QAC3E;QAEA,+CAA+C;QAC/C,MAAMC,aAAa,MAAMC,IAAAA,0BAAgB;QACzC,IAAI,CAACD,WAAWE,OAAO,EAAE;YACvB,OAAOF,WAAWG,QAAQ;QAC5B;QAEA,MAAMC,eAAeJ,WAAWI,YAAY;QAE5C,0BAA0B;QAC1B,MAAMC,WAAW,MAAMC,IAAAA,kCAAqB,EAAC;YAC3C,OAAO,MAAMC,IAAAA,2BAAiB,EAAC;gBAC7B,OAAO,MAAMH,aAAaI,KAAK,CAACC,KAAK,CAACd,GAAG,CAAC;oBACxCD;oBACAgB,QAAQ;gBACV;YACF;QACF;QAEA,MAAM,EAAEC,MAAMC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,EAAE,GAAGT,SAASU,IAAI;QAExD,IAAI,CAACH,YAAY,CAACC,UAAU;YAC1B,OAAOjB,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAA2B,GAAG;gBAAEC,QAAQ;YAAI;QAChF;QAEA,yCAAyC;QACzC,IAAIiB,sBAAsBH,WAAW;YACnC,MAAMI,eAAeC,gBAAgBL;YACrC,MAAMV,WAAW,MAAMG,IAAAA,kCAAqB,EAAC;gBAC3C,OAAO,MAAMC,IAAAA,2BAAiB,EAAC;oBAC7B,OAAO,MAAMH,aAAaI,KAAK,CAACC,KAAK,CAACU,MAAM,CAC1C;wBACEzB;wBACAmB,UAAUI;oBACZ,GACA;wBACEG,cAAc;oBAChB;gBAEJ;YACF;YAEA,MAAMC,iBAAiB,GAAGT,SAASU,OAAO,CAAC,aAAa,IAAI,CAAC,EAAEC,iBAAiBN,eAAe;YAE/F,uCAAuC;YACvC,MAAMO,SAAS,IAAIC,eAAe;gBAChCC,OAAMC,UAAU;oBACd,IAAIC,SAAS;oBAEbzB,SAASY,IAAI,CAACc,EAAE,CAAC,QAAQ,CAACC;wBACxB,IAAI,CAACF,QAAQ;4BACXD,WAAWI,OAAO,CAAC,IAAIC,WAAWF;wBACpC;oBACF;oBAEA3B,SAASY,IAAI,CAACc,EAAE,CAAC,OAAO;wBACtB,IAAI,CAACD,QAAQ;4BACXA,SAAS;4BACTD,WAAWM,KAAK;wBAClB;oBACF;oBAEA9B,SAASY,IAAI,CAACc,EAAE,CAAC,SAAS,CAACK;wBACzB,IAAI,CAACN,QAAQ;4BACXA,SAAS;4BACTD,WAAW7B,KAAK,CAACoC;wBACnB;oBACF;gBACF;YACF;YAEA,OAAO,IAAIC,SAASX,QAAQ;gBAC1BY,SAAS;oBACP,gBAAgBnB;oBAChB,uBAAuB,CAAC,sBAAsB,EAAEI,eAAe,CAAC,CAAC;oBACjE,iBAAiB;gBACnB;YACF;QACF;QAEA,0CAA0C;QAC1C,MAAMlB,WAAW,MAAMG,IAAAA,kCAAqB,EAAC;YAC3C,OAAO,MAAMC,IAAAA,2BAAiB,EAAC;gBAC7B,OAAO,MAAMH,aAAaI,KAAK,CAACC,KAAK,CAACd,GAAG,CACvC;oBACED;oBACA2C,KAAK;gBACP,GACA;oBACEjB,cAAc;gBAChB;YAEJ;QACF;QAEA,uCAAuC;QACvC,MAAMI,SAAS,IAAIC,eAAe;YAChCC,OAAMC,UAAU;gBACd,IAAIC,SAAS;gBAEbzB,SAASY,IAAI,CAACc,EAAE,CAAC,QAAQ,CAACC;oBACxB,IAAI,CAACF,QAAQ;wBACXD,WAAWI,OAAO,CAAC,IAAIC,WAAWF;oBACpC;gBACF;gBAEA3B,SAASY,IAAI,CAACc,EAAE,CAAC,OAAO;oBACtB,IAAI,CAACD,QAAQ;wBACXA,SAAS;wBACTD,WAAWM,KAAK;oBAClB;gBACF;gBAEA9B,SAASY,IAAI,CAACc,EAAE,CAAC,SAAS,CAACK;oBACzB,IAAI,CAACN,QAAQ;wBACXA,SAAS;wBACTD,WAAW7B,KAAK,CAACoC;oBACnB;gBACF;YACF;QACF;QAEA,OAAO,IAAIC,SAASX,QAAQ;YAC1BY,SAAS;gBACP,gBAAgBvB,YAAY;gBAC5B,uBAAuB,CAAC,sBAAsB,EAAED,SAAS,CAAC,CAAC;gBAC3D,GAAIE,QAAQ;oBAAE,kBAAkBA;gBAAK,CAAC;gBACtC,iBAAiB;YACnB;QACF;IACF,EAAE,OAAOhB,OAAO;QACd,OAAOwC,IAAAA,wBAAc,EAACxC;IACxB;AACF;AAEA;;CAEC,GACD,SAASkB,sBAAsBH,QAAgB;IAC7C,OAAOA,UAAU0B,WAAW,mCAAmC;AACjE;AAEA;;CAEC,GACD,SAASrB,gBAAgBL,QAAgB;IACvC,MAAM2B,YAAuC;QAC3C,wCAAwC;QACxC,2CAA2C;QAC3C,4CACE;QACF,uCAAuC;IACzC;IAEA,OAAOA,SAAS,CAAC3B,SAAS,IAAI;AAChC;AAEA;;CAEC,GACD,SAASU,iBAAiBV,QAAgB;IACxC,MAAM4B,eAA0C;QAC9C,mBAAmB;QACnB,qEAAqE;QACrE,6EAA6E;QAC7E,2EAA2E;QAC3E,aAAa;QACb,cAAc;QACd,cAAc;QACd,YAAY;IACd;IAEA,OAAOA,YAAY,CAAC5B,SAAS,IAAI;AACnC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "869bb7f21cc39bd981c33db90b667f5bc85d3b8a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uqvpre5un = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uqvpre5un();
cov_uqvpre5un().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_uqvpre5un().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_uqvpre5un().f[0]++;
    cov_uqvpre5un().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_uqvpre5un().s[3]++, require("next/server"));
const _apiutils =
/* istanbul ignore next */
(cov_uqvpre5un().s[4]++, require("../../../../../lib/api-utils"));
const _apiretry =
/* istanbul ignore next */
(cov_uqvpre5un().s[5]++, require("../../../../../lib/api-retry"));
const _apithrottle =
/* istanbul ignore next */
(cov_uqvpre5un().s[6]++, require("../../../../../lib/api-throttle"));
async function GET(request) {
  /* istanbul ignore next */
  cov_uqvpre5un().f[1]++;
  cov_uqvpre5un().s[7]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_uqvpre5un().s[8]++, new URL(request.url));
    const fileId =
    /* istanbul ignore next */
    (cov_uqvpre5un().s[9]++, searchParams.get('fileId'));
    /* istanbul ignore next */
    cov_uqvpre5un().s[10]++;
    if (!fileId) {
      /* istanbul ignore next */
      cov_uqvpre5un().b[0][0]++;
      cov_uqvpre5un().s[11]++;
      return _server.NextResponse.json({
        error: 'File ID is required'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_uqvpre5un().b[0][1]++;
    }
    // Initialize Drive service with authentication
    const authResult =
    /* istanbul ignore next */
    (cov_uqvpre5un().s[12]++, await (0, _apiutils.initDriveService)());
    /* istanbul ignore next */
    cov_uqvpre5un().s[13]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_uqvpre5un().b[1][0]++;
      cov_uqvpre5un().s[14]++;
      return authResult.response;
    } else
    /* istanbul ignore next */
    {
      cov_uqvpre5un().b[1][1]++;
    }
    const driveService =
    /* istanbul ignore next */
    (cov_uqvpre5un().s[15]++, authResult.driveService);
    // Get file metadata first
    const metadata =
    /* istanbul ignore next */
    (cov_uqvpre5un().s[16]++, await (0, _apithrottle.throttledDriveRequest)(async () => {
      /* istanbul ignore next */
      cov_uqvpre5un().f[2]++;
      cov_uqvpre5un().s[17]++;
      return await (0, _apiretry.retryDriveApiCall)(async () => {
        /* istanbul ignore next */
        cov_uqvpre5un().f[3]++;
        cov_uqvpre5un().s[18]++;
        return await driveService.drive.files.get({
          fileId,
          fields: 'name,mimeType,size'
        });
      });
    }));
    const {
      name: fileName,
      mimeType,
      size
    } =
    /* istanbul ignore next */
    (cov_uqvpre5un().s[19]++, metadata.data);
    /* istanbul ignore next */
    cov_uqvpre5un().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_uqvpre5un().b[3][0]++, !fileName) ||
    /* istanbul ignore next */
    (cov_uqvpre5un().b[3][1]++, !mimeType)) {
      /* istanbul ignore next */
      cov_uqvpre5un().b[2][0]++;
      cov_uqvpre5un().s[21]++;
      return _server.NextResponse.json({
        error: 'File metadata incomplete'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_uqvpre5un().b[2][1]++;
    }
    // Handle Google Workspace files (export)
    cov_uqvpre5un().s[22]++;
    if (isGoogleWorkspaceFile(mimeType)) {
      /* istanbul ignore next */
      cov_uqvpre5un().b[4][0]++;
      const exportFormat =
      /* istanbul ignore next */
      (cov_uqvpre5un().s[23]++, getExportFormat(mimeType));
      const response =
      /* istanbul ignore next */
      (cov_uqvpre5un().s[24]++, await (0, _apithrottle.throttledDriveRequest)(async () => {
        /* istanbul ignore next */
        cov_uqvpre5un().f[4]++;
        cov_uqvpre5un().s[25]++;
        return await (0, _apiretry.retryDriveApiCall)(async () => {
          /* istanbul ignore next */
          cov_uqvpre5un().f[5]++;
          cov_uqvpre5un().s[26]++;
          return await driveService.drive.files.export({
            fileId,
            mimeType: exportFormat
          }, {
            responseType: 'stream'
          });
        });
      }));
      const exportFileName =
      /* istanbul ignore next */
      (cov_uqvpre5un().s[27]++, `${fileName.replace(/\.[^/.]+$/, '')}.${getFileExtension(exportFormat)}`);
      // Convert Node.js stream to Web Stream
      const stream =
      /* istanbul ignore next */
      (cov_uqvpre5un().s[28]++, new ReadableStream({
        start(controller) {
          /* istanbul ignore next */
          cov_uqvpre5un().f[6]++;
          let closed =
          /* istanbul ignore next */
          (cov_uqvpre5un().s[29]++, false);
          /* istanbul ignore next */
          cov_uqvpre5un().s[30]++;
          response.data.on('data', chunk => {
            /* istanbul ignore next */
            cov_uqvpre5un().f[7]++;
            cov_uqvpre5un().s[31]++;
            if (!closed) {
              /* istanbul ignore next */
              cov_uqvpre5un().b[5][0]++;
              cov_uqvpre5un().s[32]++;
              controller.enqueue(new Uint8Array(chunk));
            } else
            /* istanbul ignore next */
            {
              cov_uqvpre5un().b[5][1]++;
            }
          });
          /* istanbul ignore next */
          cov_uqvpre5un().s[33]++;
          response.data.on('end', () => {
            /* istanbul ignore next */
            cov_uqvpre5un().f[8]++;
            cov_uqvpre5un().s[34]++;
            if (!closed) {
              /* istanbul ignore next */
              cov_uqvpre5un().b[6][0]++;
              cov_uqvpre5un().s[35]++;
              closed = true;
              /* istanbul ignore next */
              cov_uqvpre5un().s[36]++;
              controller.close();
            } else
            /* istanbul ignore next */
            {
              cov_uqvpre5un().b[6][1]++;
            }
          });
          /* istanbul ignore next */
          cov_uqvpre5un().s[37]++;
          response.data.on('error', err => {
            /* istanbul ignore next */
            cov_uqvpre5un().f[9]++;
            cov_uqvpre5un().s[38]++;
            if (!closed) {
              /* istanbul ignore next */
              cov_uqvpre5un().b[7][0]++;
              cov_uqvpre5un().s[39]++;
              closed = true;
              /* istanbul ignore next */
              cov_uqvpre5un().s[40]++;
              controller.error(err);
            } else
            /* istanbul ignore next */
            {
              cov_uqvpre5un().b[7][1]++;
            }
          });
        }
      }));
      /* istanbul ignore next */
      cov_uqvpre5un().s[41]++;
      return new Response(stream, {
        headers: {
          'Content-Type': exportFormat,
          'Content-Disposition': `attachment; filename="${exportFileName}"`,
          'Cache-Control': 'no-cache'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_uqvpre5un().b[4][1]++;
    }
    // Regular file download - stream response
    const response =
    /* istanbul ignore next */
    (cov_uqvpre5un().s[42]++, await (0, _apithrottle.throttledDriveRequest)(async () => {
      /* istanbul ignore next */
      cov_uqvpre5un().f[10]++;
      cov_uqvpre5un().s[43]++;
      return await (0, _apiretry.retryDriveApiCall)(async () => {
        /* istanbul ignore next */
        cov_uqvpre5un().f[11]++;
        cov_uqvpre5un().s[44]++;
        return await driveService.drive.files.get({
          fileId,
          alt: 'media'
        }, {
          responseType: 'stream'
        });
      });
    }));
    // Convert Node.js stream to Web Stream
    const stream =
    /* istanbul ignore next */
    (cov_uqvpre5un().s[45]++, new ReadableStream({
      start(controller) {
        /* istanbul ignore next */
        cov_uqvpre5un().f[12]++;
        let closed =
        /* istanbul ignore next */
        (cov_uqvpre5un().s[46]++, false);
        /* istanbul ignore next */
        cov_uqvpre5un().s[47]++;
        response.data.on('data', chunk => {
          /* istanbul ignore next */
          cov_uqvpre5un().f[13]++;
          cov_uqvpre5un().s[48]++;
          if (!closed) {
            /* istanbul ignore next */
            cov_uqvpre5un().b[8][0]++;
            cov_uqvpre5un().s[49]++;
            controller.enqueue(new Uint8Array(chunk));
          } else
          /* istanbul ignore next */
          {
            cov_uqvpre5un().b[8][1]++;
          }
        });
        /* istanbul ignore next */
        cov_uqvpre5un().s[50]++;
        response.data.on('end', () => {
          /* istanbul ignore next */
          cov_uqvpre5un().f[14]++;
          cov_uqvpre5un().s[51]++;
          if (!closed) {
            /* istanbul ignore next */
            cov_uqvpre5un().b[9][0]++;
            cov_uqvpre5un().s[52]++;
            closed = true;
            /* istanbul ignore next */
            cov_uqvpre5un().s[53]++;
            controller.close();
          } else
          /* istanbul ignore next */
          {
            cov_uqvpre5un().b[9][1]++;
          }
        });
        /* istanbul ignore next */
        cov_uqvpre5un().s[54]++;
        response.data.on('error', err => {
          /* istanbul ignore next */
          cov_uqvpre5un().f[15]++;
          cov_uqvpre5un().s[55]++;
          if (!closed) {
            /* istanbul ignore next */
            cov_uqvpre5un().b[10][0]++;
            cov_uqvpre5un().s[56]++;
            closed = true;
            /* istanbul ignore next */
            cov_uqvpre5un().s[57]++;
            controller.error(err);
          } else
          /* istanbul ignore next */
          {
            cov_uqvpre5un().b[10][1]++;
          }
        });
      }
    }));
    /* istanbul ignore next */
    cov_uqvpre5un().s[58]++;
    return new Response(stream, {
      headers: {
        'Content-Type':
        /* istanbul ignore next */
        (cov_uqvpre5un().b[11][0]++, mimeType) ||
        /* istanbul ignore next */
        (cov_uqvpre5un().b[11][1]++, 'application/octet-stream'),
        'Content-Disposition': `attachment; filename="${fileName}"`,
        ...(
        /* istanbul ignore next */
        (cov_uqvpre5un().b[12][0]++, size) &&
        /* istanbul ignore next */
        (cov_uqvpre5un().b[12][1]++, {
          'Content-Length': size
        })),
        'Cache-Control': 'no-cache'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_uqvpre5un().s[59]++;
    return (0, _apiutils.handleApiError)(error);
  }
}
/**
 * Check if file is Google Workspace file that needs export
 */
function isGoogleWorkspaceFile(mimeType) {
  /* istanbul ignore next */
  cov_uqvpre5un().f[16]++;
  cov_uqvpre5un().s[60]++;
  return /* istanbul ignore next */(cov_uqvpre5un().b[13][0]++, mimeType?.startsWith('application/vnd.google-apps.')) ||
  /* istanbul ignore next */
  (cov_uqvpre5un().b[13][1]++, false);
}
/**
 * Get appropriate export format for Google Workspace files
 */
function getExportFormat(mimeType) {
  /* istanbul ignore next */
  cov_uqvpre5un().f[17]++;
  const exportMap =
  /* istanbul ignore next */
  (cov_uqvpre5un().s[61]++, {
    'application/vnd.google-apps.document': 'application/pdf',
    'application/vnd.google-apps.spreadsheet': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
    'application/vnd.google-apps.presentation': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
    'application/vnd.google-apps.drawing': 'image/png'
  });
  /* istanbul ignore next */
  cov_uqvpre5un().s[62]++;
  return /* istanbul ignore next */(cov_uqvpre5un().b[14][0]++, exportMap[mimeType]) ||
  /* istanbul ignore next */
  (cov_uqvpre5un().b[14][1]++, 'application/pdf');
}
/**
 * Get file extension from mime type
 */
function getFileExtension(mimeType) {
  /* istanbul ignore next */
  cov_uqvpre5un().f[18]++;
  const extensionMap =
  /* istanbul ignore next */
  (cov_uqvpre5un().s[63]++, {
    'application/pdf': 'pdf',
    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'xlsx',
    'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'pptx',
    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'docx',
    'image/png': 'png',
    'image/jpeg': 'jpg',
    'text/plain': 'txt',
    'text/csv': 'csv'
  });
  /* istanbul ignore next */
  cov_uqvpre5un().s[64]++;
  return /* istanbul ignore next */(cov_uqvpre5un().b[15][0]++, extensionMap[mimeType]) ||
  /* istanbul ignore next */
  (cov_uqvpre5un().b[15][1]++, 'pdf');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,