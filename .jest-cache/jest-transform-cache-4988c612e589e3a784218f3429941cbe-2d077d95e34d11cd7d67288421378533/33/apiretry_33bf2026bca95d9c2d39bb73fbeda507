05c300c042b174621023dfe4107557bb
/**
 * API retry mechanism for handling transient failures
 * Implements exponential backoff with jitter
 */"use strict";

/* istanbul ignore next */
function cov_29nhdnp4ed() {
  var path = "/home/runner/workspace/src/lib/api-retry.ts";
  var hash = "6d83228e6d806e2f610b88339b602fef643d37e7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/lib/api-retry.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "6": {
        start: {
          line: 22,
          column: 23
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "7": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "8": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 20
        }
      },
      "9": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "10": {
        start: {
          line: 38,
          column: 23
        },
        end: {
          line: 38,
          column: 44
        }
      },
      "11": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "12": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 156
        }
      },
      "13": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 51,
          column: 118
        }
      },
      "14": {
        start: {
          line: 53,
          column: 19
        },
        end: {
          line: 53,
          column: 73
        }
      },
      "15": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 49
        }
      },
      "16": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 59
        }
      },
      "17": {
        start: {
          line: 59,
          column: 34
        },
        end: {
          line: 59,
          column: 57
        }
      },
      "18": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "19": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "20": {
        start: {
          line: 67,
          column: 22
        },
        end: {
          line: 67,
          column: 23
        }
      },
      "21": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "22": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "23": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 94
        }
      },
      "24": {
        start: {
          line: 72,
          column: 27
        },
        end: {
          line: 72,
          column: 44
        }
      },
      "25": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "26": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 79
        }
      },
      "27": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 26
        }
      },
      "28": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 30
        }
      },
      "29": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "30": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 83,
          column: 19
        }
      },
      "31": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "32": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 22
        }
      },
      "33": {
        start: {
          line: 89,
          column: 26
        },
        end: {
          line: 89,
          column: 62
        }
      },
      "34": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "35": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 93,
          column: 19
        }
      },
      "36": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 31
        }
      },
      "37": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "38": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 59
        }
      },
      "39": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 20
        }
      },
      "40": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 109,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 24
          }
        },
        loc: {
          start: {
            line: 15,
            column: 34
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 21
          }
        },
        loc: {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "isRetryableError",
        decl: {
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 31,
            column: 29
          }
        },
        loc: {
          start: {
            line: 31,
            column: 37
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 31
      },
      "4": {
        name: "calculateDelay",
        decl: {
          start: {
            line: 50,
            column: 13
          },
          end: {
            line: 50,
            column: 27
          }
        },
        loc: {
          start: {
            line: 50,
            column: 45
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 50
      },
      "5": {
        name: "sleep",
        decl: {
          start: {
            line: 58,
            column: 13
          },
          end: {
            line: 58,
            column: 18
          }
        },
        loc: {
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 58
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 24
          }
        },
        loc: {
          start: {
            line: 59,
            column: 34
          },
          end: {
            line: 59,
            column: 57
          }
        },
        line: 59
      },
      "7": {
        name: "retryOperation",
        decl: {
          start: {
            line: 61,
            column: 15
          },
          end: {
            line: 61,
            column: 29
          }
        },
        loc: {
          start: {
            line: 61,
            column: 54
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 61
      },
      "8": {
        name: "retryDriveApiCall",
        decl: {
          start: {
            line: 104,
            column: 15
          },
          end: {
            line: 104,
            column: 32
          }
        },
        loc: {
          start: {
            line: 104,
            column: 44
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 104
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 35
          }
        }, {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 33,
            column: 65
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 42,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 39,
            column: 29
          }
        }, {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 22
          }
        }, {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 22
          }
        }, {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 22
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 11
          },
          end: {
            line: 46,
            column: 155
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 11
          },
          end: {
            line: 46,
            column: 57
          }
        }, {
          start: {
            line: 46,
            column: 61
          },
          end: {
            line: 46,
            column: 101
          }
        }, {
          start: {
            line: 46,
            column: 105
          },
          end: {
            line: 46,
            column: 146
          }
        }, {
          start: {
            line: 46,
            column: 150
          },
          end: {
            line: 46,
            column: 155
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 61,
            column: 41
          },
          end: {
            line: 61,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 61,
            column: 50
          },
          end: {
            line: 61,
            column: 52
          }
        }],
        line: 61
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 54
          }
        }, {
          start: {
            line: 69,
            column: 58
          },
          end: {
            line: 69,
            column: 69
          }
        }],
        line: 69
      },
      "8": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "9": {
        loc: {
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 73,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 73,
            column: 27
          }
        }, {
          start: {
            line: 73,
            column: 31
          },
          end: {
            line: 73,
            column: 69
          }
        }],
        line: 73
      },
      "10": {
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "11": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "12": {
        loc: {
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 86,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 86,
            column: 40
          }
        }, {
          start: {
            line: 86,
            column: 44
          },
          end: {
            line: 86,
            column: 78
          }
        }],
        line: 86
      },
      "13": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "14": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0],
      "4": [0, 0, 0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/lib/api-retry.ts"],
      sourcesContent: ["/**\n * API retry mechanism for handling transient failures\n * Implements exponential backoff with jitter\n */\n\ninterface RetryConfig {\n  maxRetries: number\n  baseDelay: number\n  maxDelay: number\n  backoffMultiplier: number\n  jitterFactor: number\n}\n\nconst DEFAULT_CONFIG: RetryConfig = {\n  maxRetries: 3,\n  baseDelay: 500, // 500ms - faster initial retry\n  maxDelay: 8000, // 8 seconds max - prevent excessive delays\n  backoffMultiplier: 2,\n  jitterFactor: 0.1,\n}\n\n/**\n * Determines if an error is retryable\n */\nfunction isRetryableError(error: any): boolean {\n  // Network errors\n  if (error.code === 'ECONNRESET' || error.code === 'ETIMEDOUT') {\n    return true\n  }\n\n  // HTTP status codes that are retryable\n  if (error.response?.status) {\n    const status = error.response.status\n    return (\n      status === 429 || // Rate limited\n      status === 502 || // Bad Gateway\n      status === 503 || // Service Unavailable\n      status === 504\n    ) // Gateway Timeout\n  }\n\n  // Google API specific errors\n  return (\n    error.message?.includes('Rate Limit Exceeded') ||\n    error.message?.includes('Backend Error') ||\n    error.message?.includes('Internal error') ||\n    false\n  )\n}\n\n/**\n * Calculate delay with exponential backoff and jitter\n */\nfunction calculateDelay(attempt: number, config: RetryConfig): number {\n  const exponentialDelay = Math.min(config.baseDelay * Math.pow(config.backoffMultiplier, attempt), config.maxDelay)\n\n  // Add jitter to prevent thundering herd\n  const jitter = exponentialDelay * config.jitterFactor * Math.random()\n  return Math.floor(exponentialDelay + jitter)\n}\n\n/**\n * Sleep for specified milliseconds\n */\nfunction sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n/**\n * Retry an async operation with exponential backoff\n */\nexport async function retryOperation<T>(operation: () => Promise<T>, config: Partial<RetryConfig> = {}): Promise<T> {\n  const finalConfig = { ...DEFAULT_CONFIG, ...config }\n  let lastError: any\n\n  for (let attempt = 0; attempt <= finalConfig.maxRetries; attempt++) {\n    try {\n      if (process.env.NODE_ENV === 'development' && attempt > 0) {\n        console.debug(`[Retry] Attempt ${attempt + 1}/${finalConfig.maxRetries + 1}`)\n      }\n\n      const result = await operation()\n\n      if (attempt > 0 && process.env.NODE_ENV === 'development') {\n        console.debug(`[Retry] Success after ${attempt + 1} attempts`)\n      }\n\n      return result\n    } catch (error) {\n      lastError = error\n\n      if (process.env.NODE_ENV === 'development') {\n        console.log('Retrying API operation:', { attempt, error })\n      }\n\n      // Don't retry if not retryable or on last attempt\n      if (!isRetryableError(error) || attempt === finalConfig.maxRetries) {\n        break\n      }\n\n      const delay = calculateDelay(attempt, finalConfig)\n      if (process.env.NODE_ENV === 'development') {\n        console.log('Waiting before retry:', { delay })\n      }\n\n      await sleep(delay)\n    }\n  }\n\n  // All retries exhausted\n  if (process.env.NODE_ENV === 'development') {\n    console.error('All retries exhausted:', lastError)\n  }\n\n  throw lastError\n}\n\n/**\n * Specialized retry for Google Drive API calls\n */\nexport async function retryDriveApiCall<T>(operation: () => Promise<T>): Promise<T> {\n  return retryOperation(operation, {\n    maxRetries: 3,\n    baseDelay: 2000, // Start with 2 seconds for API calls\n    maxDelay: 15000, // Max 15 seconds\n  })\n}\n"],
      names: ["retryDriveApiCall", "retryOperation", "DEFAULT_CONFIG", "maxRetries", "baseDelay", "maxDelay", "backoffMultiplier", "jitterFactor", "isRetryableError", "error", "code", "response", "status", "message", "includes", "calculateDelay", "attempt", "config", "exponentialDelay", "Math", "min", "pow", "jitter", "random", "floor", "sleep", "ms", "Promise", "resolve", "setTimeout", "operation", "finalConfig", "lastError", "process", "env", "NODE_ENV", "console", "debug", "result", "log", "delay"],
      mappings: "AAAA;;;CAGC;;;;;;;;;;;IAqHqBA,iBAAiB;eAAjBA;;IAjDAC,cAAc;eAAdA;;;AA1DtB,MAAMC,iBAA8B;IAClCC,YAAY;IACZC,WAAW;IACXC,UAAU;IACVC,mBAAmB;IACnBC,cAAc;AAChB;AAEA;;CAEC,GACD,SAASC,iBAAiBC,KAAU;IAClC,iBAAiB;IACjB,IAAIA,MAAMC,IAAI,KAAK,gBAAgBD,MAAMC,IAAI,KAAK,aAAa;QAC7D,OAAO;IACT;IAEA,uCAAuC;IACvC,IAAID,MAAME,QAAQ,EAAEC,QAAQ;QAC1B,MAAMA,SAASH,MAAME,QAAQ,CAACC,MAAM;QACpC,OACEA,WAAW,OAAO,eAAe;QACjCA,WAAW,OAAO,cAAc;QAChCA,WAAW,OAAO,sBAAsB;QACxCA,WAAW,IACX,kBAAkB;;IACtB;IAEA,6BAA6B;IAC7B,OACEH,MAAMI,OAAO,EAAEC,SAAS,0BACxBL,MAAMI,OAAO,EAAEC,SAAS,oBACxBL,MAAMI,OAAO,EAAEC,SAAS,qBACxB;AAEJ;AAEA;;CAEC,GACD,SAASC,eAAeC,OAAe,EAAEC,MAAmB;IAC1D,MAAMC,mBAAmBC,KAAKC,GAAG,CAACH,OAAOb,SAAS,GAAGe,KAAKE,GAAG,CAACJ,OAAOX,iBAAiB,EAAEU,UAAUC,OAAOZ,QAAQ;IAEjH,wCAAwC;IACxC,MAAMiB,SAASJ,mBAAmBD,OAAOV,YAAY,GAAGY,KAAKI,MAAM;IACnE,OAAOJ,KAAKK,KAAK,CAACN,mBAAmBI;AACvC;AAEA;;CAEC,GACD,SAASG,MAAMC,EAAU;IACvB,OAAO,IAAIC,QAAQC,CAAAA,UAAWC,WAAWD,SAASF;AACpD;AAKO,eAAezB,eAAkB6B,SAA2B,EAAEb,SAA+B,CAAC,CAAC;IACpG,MAAMc,cAAc;QAAE,GAAG7B,cAAc;QAAE,GAAGe,MAAM;IAAC;IACnD,IAAIe;IAEJ,IAAK,IAAIhB,UAAU,GAAGA,WAAWe,YAAY5B,UAAU,EAAEa,UAAW;QAClE,IAAI;YACF,IAAIiB,QAAQC,GAAG,CAACC,QAAQ,KAAK,iBAAiBnB,UAAU,GAAG;gBACzDoB,QAAQC,KAAK,CAAC,CAAC,gBAAgB,EAAErB,UAAU,EAAE,CAAC,EAAEe,YAAY5B,UAAU,GAAG,GAAG;YAC9E;YAEA,MAAMmC,SAAS,MAAMR;YAErB,IAAId,UAAU,KAAKiB,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;gBACzDC,QAAQC,KAAK,CAAC,CAAC,sBAAsB,EAAErB,UAAU,EAAE,SAAS,CAAC;YAC/D;YAEA,OAAOsB;QACT,EAAE,OAAO7B,OAAO;YACduB,YAAYvB;YAEZ,IAAIwB,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;gBAC1CC,QAAQG,GAAG,CAAC,2BAA2B;oBAAEvB;oBAASP;gBAAM;YAC1D;YAEA,kDAAkD;YAClD,IAAI,CAACD,iBAAiBC,UAAUO,YAAYe,YAAY5B,UAAU,EAAE;gBAClE;YACF;YAEA,MAAMqC,QAAQzB,eAAeC,SAASe;YACtC,IAAIE,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;gBAC1CC,QAAQG,GAAG,CAAC,yBAAyB;oBAAEC;gBAAM;YAC/C;YAEA,MAAMf,MAAMe;QACd;IACF;IAEA,wBAAwB;IACxB,IAAIP,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;QAC1CC,QAAQ3B,KAAK,CAAC,0BAA0BuB;IAC1C;IAEA,MAAMA;AACR;AAKO,eAAehC,kBAAqB8B,SAA2B;IACpE,OAAO7B,eAAe6B,WAAW;QAC/B3B,YAAY;QACZC,WAAW;QACXC,UAAU;IACZ;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6d83228e6d806e2f610b88339b602fef643d37e7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29nhdnp4ed = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29nhdnp4ed();
cov_29nhdnp4ed().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_29nhdnp4ed().f[0]++;
  cov_29nhdnp4ed().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_29nhdnp4ed().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_29nhdnp4ed().s[3]++;
_export(exports, {
  retryDriveApiCall: function () {
    /* istanbul ignore next */
    cov_29nhdnp4ed().f[1]++;
    cov_29nhdnp4ed().s[4]++;
    return retryDriveApiCall;
  },
  retryOperation: function () {
    /* istanbul ignore next */
    cov_29nhdnp4ed().f[2]++;
    cov_29nhdnp4ed().s[5]++;
    return retryOperation;
  }
});
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_29nhdnp4ed().s[6]++, {
  maxRetries: 3,
  baseDelay: 500,
  maxDelay: 8000,
  backoffMultiplier: 2,
  jitterFactor: 0.1
});
/**
 * Determines if an error is retryable
 */
function isRetryableError(error) {
  /* istanbul ignore next */
  cov_29nhdnp4ed().f[3]++;
  cov_29nhdnp4ed().s[7]++;
  // Network errors
  if (
  /* istanbul ignore next */
  (cov_29nhdnp4ed().b[1][0]++, error.code === 'ECONNRESET') ||
  /* istanbul ignore next */
  (cov_29nhdnp4ed().b[1][1]++, error.code === 'ETIMEDOUT')) {
    /* istanbul ignore next */
    cov_29nhdnp4ed().b[0][0]++;
    cov_29nhdnp4ed().s[8]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_29nhdnp4ed().b[0][1]++;
  }
  // HTTP status codes that are retryable
  cov_29nhdnp4ed().s[9]++;
  if (error.response?.status) {
    /* istanbul ignore next */
    cov_29nhdnp4ed().b[2][0]++;
    const status =
    /* istanbul ignore next */
    (cov_29nhdnp4ed().s[10]++, error.response.status);
    /* istanbul ignore next */
    cov_29nhdnp4ed().s[11]++;
    return /* istanbul ignore next */(cov_29nhdnp4ed().b[3][0]++, status === 429) ||
    /* istanbul ignore next */
    (cov_29nhdnp4ed().b[3][1]++,
    // Rate limited
    status === 502) ||
    /* istanbul ignore next */
    (cov_29nhdnp4ed().b[3][2]++,
    // Bad Gateway
    status === 503) ||
    /* istanbul ignore next */
    (cov_29nhdnp4ed().b[3][3]++,
    // Service Unavailable
    status === 504) // Gateway Timeout
    ;
  } else
  /* istanbul ignore next */
  {
    cov_29nhdnp4ed().b[2][1]++;
  }
  // Google API specific errors
  cov_29nhdnp4ed().s[12]++;
  return /* istanbul ignore next */(cov_29nhdnp4ed().b[4][0]++, error.message?.includes('Rate Limit Exceeded')) ||
  /* istanbul ignore next */
  (cov_29nhdnp4ed().b[4][1]++, error.message?.includes('Backend Error')) ||
  /* istanbul ignore next */
  (cov_29nhdnp4ed().b[4][2]++, error.message?.includes('Internal error')) ||
  /* istanbul ignore next */
  (cov_29nhdnp4ed().b[4][3]++, false);
}
/**
 * Calculate delay with exponential backoff and jitter
 */
function calculateDelay(attempt, config) {
  /* istanbul ignore next */
  cov_29nhdnp4ed().f[4]++;
  const exponentialDelay =
  /* istanbul ignore next */
  (cov_29nhdnp4ed().s[13]++, Math.min(config.baseDelay * Math.pow(config.backoffMultiplier, attempt), config.maxDelay));
  // Add jitter to prevent thundering herd
  const jitter =
  /* istanbul ignore next */
  (cov_29nhdnp4ed().s[14]++, exponentialDelay * config.jitterFactor * Math.random());
  /* istanbul ignore next */
  cov_29nhdnp4ed().s[15]++;
  return Math.floor(exponentialDelay + jitter);
}
/**
 * Sleep for specified milliseconds
 */
function sleep(ms) {
  /* istanbul ignore next */
  cov_29nhdnp4ed().f[5]++;
  cov_29nhdnp4ed().s[16]++;
  return new Promise(resolve => {
    /* istanbul ignore next */
    cov_29nhdnp4ed().f[6]++;
    cov_29nhdnp4ed().s[17]++;
    return setTimeout(resolve, ms);
  });
}
async function retryOperation(operation, config =
/* istanbul ignore next */
(cov_29nhdnp4ed().b[5][0]++, {})) {
  /* istanbul ignore next */
  cov_29nhdnp4ed().f[7]++;
  const finalConfig =
  /* istanbul ignore next */
  (cov_29nhdnp4ed().s[18]++, {
    ...DEFAULT_CONFIG,
    ...config
  });
  let lastError;
  /* istanbul ignore next */
  cov_29nhdnp4ed().s[19]++;
  for (let attempt =
  /* istanbul ignore next */
  (cov_29nhdnp4ed().s[20]++, 0); attempt <= finalConfig.maxRetries; attempt++) {
    /* istanbul ignore next */
    cov_29nhdnp4ed().s[21]++;
    try {
      /* istanbul ignore next */
      cov_29nhdnp4ed().s[22]++;
      if (
      /* istanbul ignore next */
      (cov_29nhdnp4ed().b[7][0]++, process.env.NODE_ENV === 'development') &&
      /* istanbul ignore next */
      (cov_29nhdnp4ed().b[7][1]++, attempt > 0)) {
        /* istanbul ignore next */
        cov_29nhdnp4ed().b[6][0]++;
        cov_29nhdnp4ed().s[23]++;
        console.debug(`[Retry] Attempt ${attempt + 1}/${finalConfig.maxRetries + 1}`);
      } else
      /* istanbul ignore next */
      {
        cov_29nhdnp4ed().b[6][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_29nhdnp4ed().s[24]++, await operation());
      /* istanbul ignore next */
      cov_29nhdnp4ed().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_29nhdnp4ed().b[9][0]++, attempt > 0) &&
      /* istanbul ignore next */
      (cov_29nhdnp4ed().b[9][1]++, process.env.NODE_ENV === 'development')) {
        /* istanbul ignore next */
        cov_29nhdnp4ed().b[8][0]++;
        cov_29nhdnp4ed().s[26]++;
        console.debug(`[Retry] Success after ${attempt + 1} attempts`);
      } else
      /* istanbul ignore next */
      {
        cov_29nhdnp4ed().b[8][1]++;
      }
      cov_29nhdnp4ed().s[27]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_29nhdnp4ed().s[28]++;
      lastError = error;
      /* istanbul ignore next */
      cov_29nhdnp4ed().s[29]++;
      if (process.env.NODE_ENV === 'development') {
        /* istanbul ignore next */
        cov_29nhdnp4ed().b[10][0]++;
        cov_29nhdnp4ed().s[30]++;
        console.log('Retrying API operation:', {
          attempt,
          error
        });
      } else
      /* istanbul ignore next */
      {
        cov_29nhdnp4ed().b[10][1]++;
      }
      // Don't retry if not retryable or on last attempt
      cov_29nhdnp4ed().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_29nhdnp4ed().b[12][0]++, !isRetryableError(error)) ||
      /* istanbul ignore next */
      (cov_29nhdnp4ed().b[12][1]++, attempt === finalConfig.maxRetries)) {
        /* istanbul ignore next */
        cov_29nhdnp4ed().b[11][0]++;
        cov_29nhdnp4ed().s[32]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_29nhdnp4ed().b[11][1]++;
      }
      const delay =
      /* istanbul ignore next */
      (cov_29nhdnp4ed().s[33]++, calculateDelay(attempt, finalConfig));
      /* istanbul ignore next */
      cov_29nhdnp4ed().s[34]++;
      if (process.env.NODE_ENV === 'development') {
        /* istanbul ignore next */
        cov_29nhdnp4ed().b[13][0]++;
        cov_29nhdnp4ed().s[35]++;
        console.log('Waiting before retry:', {
          delay
        });
      } else
      /* istanbul ignore next */
      {
        cov_29nhdnp4ed().b[13][1]++;
      }
      cov_29nhdnp4ed().s[36]++;
      await sleep(delay);
    }
  }
  // All retries exhausted
  /* istanbul ignore next */
  cov_29nhdnp4ed().s[37]++;
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_29nhdnp4ed().b[14][0]++;
    cov_29nhdnp4ed().s[38]++;
    console.error('All retries exhausted:', lastError);
  } else
  /* istanbul ignore next */
  {
    cov_29nhdnp4ed().b[14][1]++;
  }
  cov_29nhdnp4ed().s[39]++;
  throw lastError;
}
async function retryDriveApiCall(operation) {
  /* istanbul ignore next */
  cov_29nhdnp4ed().f[8]++;
  cov_29nhdnp4ed().s[40]++;
  return retryOperation(operation, {
    maxRetries: 3,
    baseDelay: 2000,
    maxDelay: 15000
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,