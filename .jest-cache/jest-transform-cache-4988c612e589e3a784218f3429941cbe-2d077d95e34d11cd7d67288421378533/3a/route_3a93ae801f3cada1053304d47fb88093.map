{"version":3,"names":["cov_1zhre0yzpm","actualCoverage","s","POST","request","f","authResult","_apiutils","initDriveService","success","b","response","driveService","body","json","validateShareRequest","_server","NextResponse","error","status","fileId","items","permissions","accessLevel","linkAccess","notifyUsers","message","fileIds","length","map","item","id","isBulkOperation","sharePermissions","role","type","results","errors","permission","shareFile","emailAddress","domain","sendNotificationEmail","fileDetails","drive","files","get","fields","shareLink","data","webViewLink","push","processed","failed","total","operation","undefined","handleApiError"],"sources":["/home/runner/workspace/src/app/api/drive/files/share/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\n\nimport { initDriveService, handleApiError, validateShareRequest } from '@/lib/api-utils'\n\nexport async function POST(request: NextRequest) {\n  try {\n    const authResult = await initDriveService()\n    if (!authResult.success) {\n      return authResult.response!\n    }\n\n    const { driveService } = authResult\n    const body = await request.json()\n\n    // Validate share request\n    if (!validateShareRequest(body)) {\n      return NextResponse.json({ error: 'Invalid share request body' }, { status: 400 })\n    }\n\n    // Handle both single and bulk operations\n    const { fileId, items, permissions, accessLevel, linkAccess, notifyUsers = false, message } = body\n\n    // Determine operation type based on items array or single fileId\n    const fileIds = items && items.length > 0 ? items.map((item: any) => item.id) : [fileId]\n    const isBulkOperation = items && items.length > 1\n\n    if (!fileIds || fileIds.length === 0) {\n      return NextResponse.json({ error: 'File IDs are required' }, { status: 400 })\n    }\n\n    // Build permissions from accessLevel and linkAccess if not provided directly\n    let sharePermissions = permissions\n    if (!sharePermissions && accessLevel && linkAccess) {\n      sharePermissions = [\n        {\n          role: accessLevel === 'writer' ? 'writer' : accessLevel === 'commenter' ? 'commenter' : 'reader',\n          type: linkAccess === 'anyone' ? 'anyone' : linkAccess === 'domain' ? 'domain' : 'anyone',\n        },\n      ]\n    }\n\n    if (!sharePermissions || sharePermissions.length === 0) {\n      return NextResponse.json({ error: 'Share permissions are required' }, { status: 400 })\n    }\n\n    const results = []\n    const errors = []\n\n    for (const id of fileIds) {\n      try {\n        // Apply each permission to the file\n        for (const permission of sharePermissions) {\n          await driveService!.shareFile(id, {\n            role: permission.role,\n            type: permission.type,\n            emailAddress: permission.emailAddress,\n            domain: permission.domain,\n            sendNotificationEmail: notifyUsers,\n          })\n        }\n\n        // Get the file details to generate share link\n        const fileDetails = await driveService!.drive.files.get({\n          fileId: id,\n          fields: 'id,name,mimeType,webViewLink',\n        })\n\n        const shareLink = fileDetails.data?.webViewLink || `https://drive.google.com/file/d/${id}/view`\n\n        results.push({\n          fileId: id,\n          success: true,\n          shareLink,\n          notifyUsers,\n          message,\n        })\n      } catch (error: any) {\n        errors.push({\n          fileId: id,\n          success: false,\n          error: error.message || 'Share operation failed',\n        })\n      }\n    }\n\n    const response = {\n      success: errors.length === 0,\n      processed: results.length,\n      failed: errors.length,\n      total: fileIds.length,\n      type: isBulkOperation ? 'bulk' : 'single',\n      operation: 'share',\n      shareLink: results.length > 0 ? results[0]?.shareLink : undefined,\n      results,\n      errors: errors.length > 0 ? errors : undefined,\n    }\n\n    return NextResponse.json(response, {\n      status: errors.length === 0 ? 200 : 207,\n    })\n  } catch (error: any) {\n    return handleApiError(error)\n  }\n}\n"],"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","ignoreList":[]}