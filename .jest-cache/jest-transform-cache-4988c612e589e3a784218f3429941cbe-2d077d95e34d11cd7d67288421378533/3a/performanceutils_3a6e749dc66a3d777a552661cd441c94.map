{"version":3,"names":["getLoaderClassName","cov_28be8cxbt8","f","s","lazyWithRetry","optimizeBundleLoading","preloadCriticalComponents","b","window","requestIdleCallback","Promise","resolve","then","_interop_require_wildcard","require","catch","componentImport","reject","retry","retries","error","setTimeout","size","sizeClasses","small","default","large","prefetchDNS","hostname","link","document","createElement","rel","href","head","appendChild"],"sources":["/home/runner/workspace/src/lib/utils/performance-utils.ts"],"sourcesContent":["/**\n * Performance utilities for lazy loading and compilation optimization\n */\n\n// Preload critical components when idle\nexport const preloadCriticalComponents = () => {\n  if (typeof window !== 'undefined' && 'requestIdleCallback' in window) {\n    window.requestIdleCallback(() => {\n      // Preload most commonly used bulk dialogs\n      import('@/app/(main)/dashboard/drive/_components/operations-dialog')\n        .then(() => {\n          // Preload completed successfully\n        })\n        .catch(() => {})\n    })\n  }\n}\n\n// Lazy load component with retry\nexport const lazyWithRetry = (componentImport: () => Promise<any>) => {\n  return new Promise((resolve, reject) => {\n    const retry = (retries = 3) => {\n      componentImport()\n        .then(resolve)\n        .catch(error => {\n          if (retries > 0) {\n            setTimeout(() => retry(retries - 1), 1000)\n          } else {\n            reject(error)\n          }\n        })\n    }\n    retry()\n  })\n}\n\n// Optimized loading states for different component sizes\nexport const getLoaderClassName = (size: 'small' | 'default' | 'large' = 'default') => {\n  const sizeClasses = {\n    small: 'h-4 w-4',\n    default: 'h-8 w-8',\n    large: 'h-12 w-12',\n  }\n\n  return `animate-pulse bg-gray-200 rounded ${sizeClasses[size]}`\n}\n\n// Optimize bundle loading\nexport const optimizeBundleLoading = () => {\n  if (typeof window !== 'undefined') {\n    // Prefetch DNS for external resources\n    const prefetchDNS = (hostname: string) => {\n      const link = document.createElement('link')\n      link.rel = 'dns-prefetch'\n      link.href = `//${hostname}`\n      document.head.appendChild(link)\n    }\n\n    // Prefetch critical external resources\n    prefetchDNS('accounts.google.com')\n    prefetchDNS('apis.google.com')\n    prefetchDNS('www.googleapis.com')\n  }\n}\n"],"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","ignoreList":[]}