{"version":3,"names":["cov_2lruqgeb24","actualCoverage","s","useSessionDuration","f","data","session","update","_react","useSession","_react1","useEffect","window","b","user","storedRememberMe","localStorage","getItem","rememberMe","JSON","parse","then","fetch","method","headers","body","stringify","console","log","error","removeItem","catch","isRememberMe","sessionDuration"],"sources":["/home/runner/workspace/src/lib/hooks/use-session-duration.ts"],"sourcesContent":["'use client'\n\nimport { useSession } from 'next-auth/react'\nimport { useEffect } from 'react'\n\n/**\n * Hook to manage session duration based on remember me preference\n * Updates session with remember me preference from localStorage\n */\nexport function useSessionDuration() {\n  const { data: session, update } = useSession()\n\n  useEffect(() => {\n    // Only run on client side\n    if (typeof window === 'undefined') return\n\n    // Check if user has a valid session\n    if (!session?.user) return\n\n    // Check if remember me preference is stored in localStorage\n    const storedRememberMe = localStorage.getItem('nextauth-remember-me')\n\n    if (storedRememberMe) {\n      const rememberMe = JSON.parse(storedRememberMe)\n\n      // Only update if the session's remember me preference doesn't match\n      if (session.rememberMe !== rememberMe) {\n        // Update session with remember me preference\n        update({ rememberMe })\n          .then(async () => {\n            // Update cookie duration via API\n            try {\n              await fetch('/api/auth/session-duration', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ rememberMe }),\n              })\n              console.log(`Session duration updated: ${rememberMe ? '30 days' : '1 day'}`)\n            } catch (error) {\n              console.error('Failed to update session duration:', error)\n            }\n\n            // Clear the localStorage flag after successful update\n            localStorage.removeItem('nextauth-remember-me')\n          })\n          .catch(error => {\n            console.error('Session update failed:', error)\n          })\n      }\n    }\n  }, [session, update])\n\n  return {\n    isRememberMe: session?.rememberMe || false,\n    sessionDuration: session?.rememberMe ? '30 days' : '1 day',\n  }\n}\n"],"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","ignoreList":[]}