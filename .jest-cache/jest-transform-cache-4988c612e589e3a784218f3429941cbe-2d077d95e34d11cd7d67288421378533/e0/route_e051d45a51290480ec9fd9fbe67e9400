401f88e5a138d2339a05737543ec5ecc
"use strict";

/* istanbul ignore next */
function cov_dz1lp6wxk() {
  var path = "/home/runner/workspace/src/app/api/cache/clear/route.ts";
  var hash = "a2233643964b9d6845c44c50b75a8b05d7b141de";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/app/api/cache/clear/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 47
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "6": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "7": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 19,
          column: 11
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 25,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 19
          }
        },
        loc: {
          start: {
            line: 13,
            column: 22
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/app/api/cache/clear/route.ts"],
      sourcesContent: ["import { NextResponse } from 'next/server'\n\nimport { driveCache } from '@/lib/cache'\n\nexport async function POST() {\n  try {\n    driveCache.clear()\n    return NextResponse.json({\n      success: true,\n      message: 'Cache cleared successfully',\n    })\n  } catch (error) {\n    return NextResponse.json({ error: 'Failed to clear cache' }, { status: 500 })\n  }\n}\n"],
      names: ["POST", "driveCache", "clear", "NextResponse", "json", "success", "message", "error", "status"],
      mappings: ";;;;+BAIsBA;;;eAAAA;;;wBAJO;uBAEF;AAEpB,eAAeA;IACpB,IAAI;QACFC,iBAAU,CAACC,KAAK;QAChB,OAAOC,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,SAAS;QACX;IACF,EAAE,OAAOC,OAAO;QACd,OAAOJ,oBAAY,CAACC,IAAI,CAAC;YAAEG,OAAO;QAAwB,GAAG;YAAEC,QAAQ;QAAI;IAC7E;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a2233643964b9d6845c44c50b75a8b05d7b141de"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_dz1lp6wxk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_dz1lp6wxk();
cov_dz1lp6wxk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_dz1lp6wxk().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_dz1lp6wxk().f[0]++;
    cov_dz1lp6wxk().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_dz1lp6wxk().s[3]++, require("next/server"));
const _cache =
/* istanbul ignore next */
(cov_dz1lp6wxk().s[4]++, require("../../../../lib/cache"));
async function POST() {
  /* istanbul ignore next */
  cov_dz1lp6wxk().f[1]++;
  cov_dz1lp6wxk().s[5]++;
  try {
    /* istanbul ignore next */
    cov_dz1lp6wxk().s[6]++;
    _cache.driveCache.clear();
    /* istanbul ignore next */
    cov_dz1lp6wxk().s[7]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Cache cleared successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_dz1lp6wxk().s[8]++;
    return _server.NextResponse.json({
      error: 'Failed to clear cache'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZHoxbHA2d3hrIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiUE9TVCIsImYiLCJfY2FjaGUiLCJkcml2ZUNhY2hlIiwiY2xlYXIiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwiZXJyb3IiLCJzdGF0dXMiXSwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL3NyYy9hcHAvYXBpL2NhY2hlL2NsZWFyL3JvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xuXG5pbXBvcnQgeyBkcml2ZUNhY2hlIH0gZnJvbSAnQC9saWIvY2FjaGUnXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKCkge1xuICB0cnkge1xuICAgIGRyaXZlQ2FjaGUuY2xlYXIoKVxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgbWVzc2FnZTogJ0NhY2hlIGNsZWFyZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICB9KVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnRmFpbGVkIHRvIGNsZWFyIGNhY2hlJyB9LCB7IHN0YXR1czogNTAwIH0pXG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFPSTtJQUFBQSxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxhQUFBO0FBQUFBLGFBQUEsR0FBQUUsQ0FBQTs7Ozs7OytCQUhrQjs7Ozs7O1dBQUFDLElBQUE7Ozs7O2lDQUpPOzs7aUNBRUY7QUFFcEIsZUFBZUEsS0FBQTtFQUFBO0VBQUFILGFBQUEsR0FBQUksQ0FBQTtFQUFBSixhQUFBLEdBQUFFLENBQUE7RUFDcEIsSUFBSTtJQUFBO0lBQUFGLGFBQUEsR0FBQUUsQ0FBQTtJQUNGRyxNQUFBLENBQUFDLFVBQVUsQ0FBQ0MsS0FBSztJQUFBO0lBQUFQLGFBQUEsR0FBQUUsQ0FBQTtJQUNoQixPQUFPTSxPQUFBLENBQUFDLFlBQVksQ0FBQ0MsSUFBSSxDQUFDO01BQ3ZCQyxPQUFBLEVBQVM7TUFDVEMsT0FBQSxFQUFTO0lBQ1g7RUFDRixFQUFFLE9BQU9DLEtBQUEsRUFBTztJQUFBO0lBQUFiLGFBQUEsR0FBQUUsQ0FBQTtJQUNkLE9BQU9NLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQUM7TUFBRUcsS0FBQSxFQUFPO0lBQXdCLEdBQUc7TUFBRUMsTUFBQSxFQUFRO0lBQUk7RUFDN0U7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==