8c56934623a1fa09df9b1ceeebbf4e6c
'use client';
"use strict";

/* istanbul ignore next */
function cov_1dgalqgz7v() {
  var path = "/home/runner/workspace/src/app/(main)/dashboard/drive/_components/file-upload-dialog.tsx";
  var hash = "261733aecc9346771b20d240b4db949fb9fe9354";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/app/(main)/dashboard/drive/_components/file-upload-dialog.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "8": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "11": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 60
        }
      },
      "12": {
        start: {
          line: 26,
          column: 15
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "13": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "14": {
        start: {
          line: 28,
          column: 18
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "15": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 62
        }
      },
      "16": {
        start: {
          line: 30,
          column: 15
        },
        end: {
          line: 30,
          column: 63
        }
      },
      "17": {
        start: {
          line: 32,
          column: 44
        },
        end: {
          line: 32,
          column: 70
        }
      },
      "18": {
        start: {
          line: 33,
          column: 36
        },
        end: {
          line: 33,
          column: 60
        }
      },
      "19": {
        start: {
          line: 34,
          column: 42
        },
        end: {
          line: 34,
          column: 66
        }
      },
      "20": {
        start: {
          line: 35,
          column: 38
        },
        end: {
          line: 35,
          column: 65
        }
      },
      "21": {
        start: {
          line: 36,
          column: 48
        },
        end: {
          line: 36,
          column: 71
        }
      },
      "22": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 37,
          column: 49
        }
      },
      "23": {
        start: {
          line: 38,
          column: 29
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "24": {
        start: {
          line: 39,
          column: 21
        },
        end: {
          line: 39,
          column: 44
        }
      },
      "25": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "26": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 34
        }
      },
      "27": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 35
        }
      },
      "28": {
        start: {
          line: 45,
          column: 25
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "29": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "30": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 66
        }
      },
      "31": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 19
        }
      },
      "32": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "33": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 31
        }
      },
      "34": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 33
        }
      },
      "35": {
        start: {
          line: 53,
          column: 29
        },
        end: {
          line: 53,
          column: 43
        }
      },
      "36": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 50
        }
      },
      "37": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 67
        }
      },
      "38": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 73
        }
      },
      "39": {
        start: {
          line: 56,
          column: 29
        },
        end: {
          line: 56,
          column: 73
        }
      },
      "40": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 78
        }
      },
      "41": {
        start: {
          line: 57,
          column: 33
        },
        end: {
          line: 57,
          column: 78
        }
      },
      "42": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 34
        }
      },
      "43": {
        start: {
          line: 60,
          column: 29
        },
        end: {
          line: 63,
          column: 14
        }
      },
      "44": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 35
        }
      },
      "45": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "46": {
        start: {
          line: 67,
          column: 34
        },
        end: {
          line: 67,
          column: 55
        }
      },
      "47": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 73,
          column: 17
        }
      },
      "48": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 122
        }
      },
      "49": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 45
        }
      },
      "50": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 27
        }
      },
      "51": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 68
        }
      },
      "52": {
        start: {
          line: 76,
          column: 27
        },
        end: {
          line: 76,
          column: 48
        }
      },
      "53": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 74
        }
      },
      "54": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 31
        }
      },
      "55": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 26
        }
      },
      "56": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 58
        }
      },
      "57": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 90
        }
      },
      "58": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 33
        }
      },
      "59": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 32
        }
      },
      "60": {
        start: {
          line: 89,
          column: 24
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "61": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "62": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 34
        }
      },
      "63": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 28
        }
      },
      "64": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 31
        }
      },
      "65": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 33
        }
      },
      "66": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "67": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 48
        }
      },
      "68": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 22
        }
      },
      "69": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 264,
          column: 7
        }
      },
      "70": {
        start: {
          line: 159,
          column: 56
        },
        end: {
          line: 159,
          column: 78
        }
      },
      "71": {
        start: {
          line: 160,
          column: 56
        },
        end: {
          line: 160,
          column: 72
        }
      },
      "72": {
        start: {
          line: 161,
          column: 56
        },
        end: {
          line: 163,
          column: 57
        }
      },
      "73": {
        start: {
          line: 162,
          column: 60
        },
        end: {
          line: 162,
          column: 92
        }
      },
      "74": {
        start: {
          line: 185,
          column: 51
        },
        end: {
          line: 185,
          column: 78
        }
      },
      "75": {
        start: {
          line: 201,
          column: 51
        },
        end: {
          line: 201,
          column: 81
        }
      },
      "76": {
        start: {
          line: 266,
          column: 17
        },
        end: {
          line: 266,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 22
          },
          end: {
            line: 13,
            column: 23
          }
        },
        loc: {
          start: {
            line: 13,
            column: 33
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "FileUploadDialog",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 25
          }
        },
        loc: {
          start: {
            line: 31,
            column: 82
          },
          end: {
            line: 265,
            column: 1
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 29
          },
          end: {
            line: 38,
            column: 30
          }
        },
        loc: {
          start: {
            line: 38,
            column: 38
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 45,
            column: 25
          },
          end: {
            line: 45,
            column: 26
          }
        },
        loc: {
          start: {
            line: 45,
            column: 35
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 89,
            column: 24
          },
          end: {
            line: 89,
            column: 25
          }
        },
        loc: {
          start: {
            line: 89,
            column: 28
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 89
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 158,
            column: 61
          },
          end: {
            line: 158,
            column: 62
          }
        },
        loc: {
          start: {
            line: 158,
            column: 65
          },
          end: {
            line: 164,
            column: 53
          }
        },
        line: 158
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 185,
            column: 46
          },
          end: {
            line: 185,
            column: 47
          }
        },
        loc: {
          start: {
            line: 185,
            column: 51
          },
          end: {
            line: 185,
            column: 78
          }
        },
        line: 185
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 201,
            column: 46
          },
          end: {
            line: 201,
            column: 47
          }
        },
        loc: {
          start: {
            line: 201,
            column: 51
          },
          end: {
            line: 201,
            column: 81
          }
        },
        line: 201
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 36
          },
          end: {
            line: 55,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 36
          },
          end: {
            line: 55,
            column: 44
          }
        }, {
          start: {
            line: 55,
            column: 48
          },
          end: {
            line: 55,
            column: 65
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 69,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 69,
            column: 41
          }
        }, {
          start: {
            line: 69,
            column: 45
          },
          end: {
            line: 69,
            column: 68
          }
        }, {
          start: {
            line: 69,
            column: 72
          },
          end: {
            line: 69,
            column: 95
          }
        }],
        line: 69
      },
      "8": {
        loc: {
          start: {
            line: 70,
            column: 40
          },
          end: {
            line: 70,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 40
          },
          end: {
            line: 70,
            column: 55
          }
        }, {
          start: {
            line: 70,
            column: 59
          },
          end: {
            line: 70,
            column: 120
          }
        }],
        line: 70
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 32
          },
          end: {
            line: 74,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 32
          },
          end: {
            line: 74,
            column: 47
          }
        }, {
          start: {
            line: 74,
            column: 51
          },
          end: {
            line: 74,
            column: 66
          }
        }],
        line: 74
      },
      "10": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "11": {
        loc: {
          start: {
            line: 83,
            column: 32
          },
          end: {
            line: 83,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 57
          },
          end: {
            line: 83,
            column: 70
          }
        }, {
          start: {
            line: 83,
            column: 73
          },
          end: {
            line: 83,
            column: 88
          }
        }],
        line: 83
      },
      "12": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "13": {
        loc: {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "14": {
        loc: {
          start: {
            line: 115,
            column: 32
          },
          end: {
            line: 115,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 32
          },
          end: {
            line: 115,
            column: 47
          }
        }, {
          start: {
            line: 115,
            column: 51
          },
          end: {
            line: 115,
            column: 75
          }
        }],
        line: 115
      },
      "15": {
        loc: {
          start: {
            line: 141,
            column: 32
          },
          end: {
            line: 172,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 32
          },
          end: {
            line: 141,
            column: 44
          }
        }, {
          start: {
            line: 141,
            column: 62
          },
          end: {
            line: 172,
            column: 34
          }
        }],
        line: 141
      },
      "16": {
        loc: {
          start: {
            line: 155,
            column: 48
          },
          end: {
            line: 168,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 48
          },
          end: {
            line: 155,
            column: 58
          }
        }, {
          start: {
            line: 155,
            column: 76
          },
          end: {
            line: 168,
            column: 50
          }
        }],
        line: 155
      },
      "17": {
        loc: {
          start: {
            line: 161,
            column: 56
          },
          end: {
            line: 163,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 56
          },
          end: {
            line: 163,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "18": {
        loc: {
          start: {
            line: 208,
            column: 24
          },
          end: {
            line: 230,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 24
          },
          end: {
            line: 208,
            column: 33
          }
        }, {
          start: {
            line: 208,
            column: 51
          },
          end: {
            line: 230,
            column: 26
          }
        }],
        line: 208
      },
      "19": {
        loc: {
          start: {
            line: 243,
            column: 38
          },
          end: {
            line: 243,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 38
          },
          end: {
            line: 243,
            column: 51
          }
        }, {
          start: {
            line: 243,
            column: 55
          },
          end: {
            line: 243,
            column: 64
          }
        }],
        line: 243
      },
      "20": {
        loc: {
          start: {
            line: 244,
            column: 38
          },
          end: {
            line: 258,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 64
          },
          end: {
            line: 251,
            column: 30
          }
        }, {
          start: {
            line: 251,
            column: 47
          },
          end: {
            line: 258,
            column: 30
          }
        }],
        line: 244
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/app/(main)/dashboard/drive/_components/file-upload-dialog.tsx"],
      sourcesContent: ["'use client'\n\nimport { useState, useRef } from 'react'\nimport { Upload, X } from 'lucide-react'\nimport { toast } from 'sonner'\n\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Progress } from '@/components/ui/progress'\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog'\nimport { formatFileSize } from '@/lib/google-drive/utils'\n\ninterface FileUploadDialogProps {\n  isOpen: boolean\n  onClose: () => void\n  onUploadComplete: () => void\n  currentFolderId?: string | null\n}\n\nexport function FileUploadDialog({ isOpen, onClose, onUploadComplete, currentFolderId }: FileUploadDialogProps) {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null)\n  const [fileName, setFileName] = useState('')\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n  const [uploadProgress, setUploadProgress] = useState(0)\n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0]\n    if (file) {\n      setSelectedFile(file)\n      setFileName(file.name)\n    }\n  }\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      toast.error('Please select a file to upload')\n      return\n    }\n\n    try {\n      setUploading(true)\n      setUploadProgress(0)\n\n      const formData = new FormData()\n      formData.append('file', selectedFile)\n      formData.append('name', fileName || selectedFile.name)\n      if (description) formData.append('description', description)\n      if (currentFolderId) formData.append('parentId', currentFolderId)\n\n      // Upload progress will be handled by the actual upload stream\n      setUploadProgress(50)\n\n      const response = await fetch('/api/drive/files', {\n        method: 'POST',\n        body: formData,\n      })\n\n      // Progress interval would be cleared here if implemented\n      setUploadProgress(100)\n\n      if (!response.ok) {\n        const errorData = await response.json()\n\n        // Handle reauthentication needed\n        if (errorData.needsReauth || response.status === 401 || response.status === 403) {\n          toast.error(errorData.error || 'Google Drive access expired. Please reconnect your account.')\n          window.location.reload()\n          return\n        }\n\n        throw new Error(errorData.error || 'Upload failed')\n      }\n\n      const result = await response.json()\n\n      toast.success(`${result.name} uploaded successfully`)\n      onUploadComplete()\n      handleClose()\n    } catch (error) {\n      // Log error for debugging in development only\n      if (process.env.NODE_ENV === 'development') {\n      }\n      toast.error(error instanceof Error ? error.message : 'Upload failed')\n      setUploadProgress(0)\n    } finally {\n      setUploading(false)\n    }\n  }\n\n  const handleClose = () => {\n    if (!uploading) {\n      setSelectedFile(null)\n      setFileName('')\n      setDescription('')\n      setUploadProgress(0)\n      if (fileInputRef.current) {\n        fileInputRef.current.value = ''\n      }\n      onClose()\n    }\n  }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle>Upload File</DialogTitle>\n          <DialogDescription>\n            Upload a file to your Google Drive\n            {currentFolderId && ' in the current folder'}\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-4\">\n          {/* File Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"file-input\">Select File</Label>\n            <div className=\"flex items-center gap-2\">\n              <Input\n                id=\"file-input\"\n                ref={fileInputRef}\n                type=\"file\"\n                onChange={handleFileSelect}\n                disabled={uploading}\n                className=\"file:bg-primary file:text-primary-foreground file:mr-2 file:rounded file:border-0 file:px-2 file:py-1 file:text-sm\"\n              />\n            </div>\n            {selectedFile && (\n              <div className=\"bg-muted flex items-center justify-between rounded p-2 text-sm\">\n                <span className=\"truncate\">{selectedFile.name}</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-muted-foreground\">{formatFileSize(selectedFile.size)}</span>\n                  {!uploading && (\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => {\n                        setSelectedFile(null)\n                        setFileName('')\n                        if (fileInputRef.current) {\n                          fileInputRef.current.value = ''\n                        }\n                      }}\n                    >\n                      <X className=\"h-3 w-3\" />\n                    </Button>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* File Name */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"file-name\">File Name</Label>\n            <Input\n              id=\"file-name\"\n              value={fileName}\n              onChange={e => setFileName(e.target.value)}\n              placeholder=\"Enter file name...\"\n              disabled={uploading}\n            />\n          </div>\n\n          {/* Description */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"description\">Description (Optional)</Label>\n            <Textarea\n              id=\"description\"\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n              placeholder=\"Enter file description...\"\n              disabled={uploading}\n              rows={3}\n            />\n          </div>\n\n          {/* Upload Progress */}\n          {uploading && (\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span>Uploading...</span>\n                <span>{uploadProgress}%</span>\n              </div>\n              <Progress value={uploadProgress} className=\"w-full\" />\n            </div>\n          )}\n        </div>\n\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={handleClose} disabled={uploading}>\n            Cancel\n          </Button>\n          <Button onClick={handleUpload} disabled={!selectedFile || uploading}>\n            {uploading ? (\n              <>\n                <Upload className=\"mr-2 h-4 w-4 animate-pulse\" />\n                Uploading...\n              </>\n            ) : (\n              <>\n                <Upload className=\"mr-2 h-4 w-4\" />\n                Upload\n              </>\n            )}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default FileUploadDialog\n"],
      names: ["FileUploadDialog", "isOpen", "onClose", "onUploadComplete", "currentFolderId", "selectedFile", "setSelectedFile", "useState", "fileName", "setFileName", "description", "setDescription", "uploading", "setUploading", "uploadProgress", "setUploadProgress", "fileInputRef", "useRef", "handleFileSelect", "event", "file", "target", "files", "name", "handleUpload", "toast", "error", "formData", "FormData", "append", "response", "fetch", "method", "body", "ok", "errorData", "json", "needsReauth", "status", "window", "location", "reload", "Error", "result", "success", "handleClose", "process", "env", "NODE_ENV", "message", "current", "value", "Dialog", "open", "onOpenChange", "DialogContent", "className", "DialogHeader", "DialogTitle", "DialogDescription", "div", "Label", "htmlFor", "Input", "id", "ref", "type", "onChange", "disabled", "span", "formatFileSize", "size", "Button", "variant", "onClick", "X", "e", "placeholder", "Textarea", "rows", "Progress", "DialogFooter", "Upload"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "261733aecc9346771b20d240b4db949fb9fe9354"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1dgalqgz7v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1dgalqgz7v();
cov_1dgalqgz7v().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1dgalqgz7v().f[0]++;
  cov_1dgalqgz7v().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1dgalqgz7v().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1dgalqgz7v().s[3]++;
_export(exports, {
  FileUploadDialog: function () {
    /* istanbul ignore next */
    cov_1dgalqgz7v().f[1]++;
    cov_1dgalqgz7v().s[4]++;
    return FileUploadDialog;
  },
  default: function () {
    /* istanbul ignore next */
    cov_1dgalqgz7v().f[2]++;
    cov_1dgalqgz7v().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1dgalqgz7v().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1dgalqgz7v().s[7]++, require("react"));
const _lucidereact =
/* istanbul ignore next */
(cov_1dgalqgz7v().s[8]++, require("lucide-react"));
const _sonner =
/* istanbul ignore next */
(cov_1dgalqgz7v().s[9]++, require("sonner"));
const _button =
/* istanbul ignore next */
(cov_1dgalqgz7v().s[10]++, require("../../../../../components/ui/button"));
const _input =
/* istanbul ignore next */
(cov_1dgalqgz7v().s[11]++, require("../../../../../components/ui/input"));
const _label =
/* istanbul ignore next */
(cov_1dgalqgz7v().s[12]++, require("../../../../../components/ui/label"));
const _textarea =
/* istanbul ignore next */
(cov_1dgalqgz7v().s[13]++, require("../../../../../components/ui/textarea"));
const _progress =
/* istanbul ignore next */
(cov_1dgalqgz7v().s[14]++, require("../../../../../components/ui/progress"));
const _dialog =
/* istanbul ignore next */
(cov_1dgalqgz7v().s[15]++, require("../../../../../components/ui/dialog"));
const _utils =
/* istanbul ignore next */
(cov_1dgalqgz7v().s[16]++, require("../../../../../lib/google-drive/utils"));
function FileUploadDialog({
  isOpen,
  onClose,
  onUploadComplete,
  currentFolderId
}) {
  /* istanbul ignore next */
  cov_1dgalqgz7v().f[3]++;
  const [selectedFile, setSelectedFile] =
  /* istanbul ignore next */
  (cov_1dgalqgz7v().s[17]++, (0, _react.useState)(null));
  const [fileName, setFileName] =
  /* istanbul ignore next */
  (cov_1dgalqgz7v().s[18]++, (0, _react.useState)(''));
  const [description, setDescription] =
  /* istanbul ignore next */
  (cov_1dgalqgz7v().s[19]++, (0, _react.useState)(''));
  const [uploading, setUploading] =
  /* istanbul ignore next */
  (cov_1dgalqgz7v().s[20]++, (0, _react.useState)(false));
  const [uploadProgress, setUploadProgress] =
  /* istanbul ignore next */
  (cov_1dgalqgz7v().s[21]++, (0, _react.useState)(0));
  const fileInputRef =
  /* istanbul ignore next */
  (cov_1dgalqgz7v().s[22]++, (0, _react.useRef)(null));
  /* istanbul ignore next */
  cov_1dgalqgz7v().s[23]++;
  const handleFileSelect = event => {
    /* istanbul ignore next */
    cov_1dgalqgz7v().f[4]++;
    const file =
    /* istanbul ignore next */
    (cov_1dgalqgz7v().s[24]++, event.target.files?.[0]);
    /* istanbul ignore next */
    cov_1dgalqgz7v().s[25]++;
    if (file) {
      /* istanbul ignore next */
      cov_1dgalqgz7v().b[0][0]++;
      cov_1dgalqgz7v().s[26]++;
      setSelectedFile(file);
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[27]++;
      setFileName(file.name);
    } else
    /* istanbul ignore next */
    {
      cov_1dgalqgz7v().b[0][1]++;
    }
  };
  /* istanbul ignore next */
  cov_1dgalqgz7v().s[28]++;
  const handleUpload = async () => {
    /* istanbul ignore next */
    cov_1dgalqgz7v().f[5]++;
    cov_1dgalqgz7v().s[29]++;
    if (!selectedFile) {
      /* istanbul ignore next */
      cov_1dgalqgz7v().b[1][0]++;
      cov_1dgalqgz7v().s[30]++;
      _sonner.toast.error('Please select a file to upload');
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[31]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1dgalqgz7v().b[1][1]++;
    }
    cov_1dgalqgz7v().s[32]++;
    try {
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[33]++;
      setUploading(true);
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[34]++;
      setUploadProgress(0);
      const formData =
      /* istanbul ignore next */
      (cov_1dgalqgz7v().s[35]++, new FormData());
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[36]++;
      formData.append('file', selectedFile);
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[37]++;
      formData.append('name',
      /* istanbul ignore next */
      (cov_1dgalqgz7v().b[2][0]++, fileName) ||
      /* istanbul ignore next */
      (cov_1dgalqgz7v().b[2][1]++, selectedFile.name));
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[38]++;
      if (description) {
        /* istanbul ignore next */
        cov_1dgalqgz7v().b[3][0]++;
        cov_1dgalqgz7v().s[39]++;
        formData.append('description', description);
      } else
      /* istanbul ignore next */
      {
        cov_1dgalqgz7v().b[3][1]++;
      }
      cov_1dgalqgz7v().s[40]++;
      if (currentFolderId) {
        /* istanbul ignore next */
        cov_1dgalqgz7v().b[4][0]++;
        cov_1dgalqgz7v().s[41]++;
        formData.append('parentId', currentFolderId);
      } else
      /* istanbul ignore next */
      {
        cov_1dgalqgz7v().b[4][1]++;
      }
      // Upload progress will be handled by the actual upload stream
      cov_1dgalqgz7v().s[42]++;
      setUploadProgress(50);
      const response =
      /* istanbul ignore next */
      (cov_1dgalqgz7v().s[43]++, await fetch('/api/drive/files', {
        method: 'POST',
        body: formData
      }));
      // Progress interval would be cleared here if implemented
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[44]++;
      setUploadProgress(100);
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[45]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1dgalqgz7v().b[5][0]++;
        const errorData =
        /* istanbul ignore next */
        (cov_1dgalqgz7v().s[46]++, await response.json());
        // Handle reauthentication needed
        /* istanbul ignore next */
        cov_1dgalqgz7v().s[47]++;
        if (
        /* istanbul ignore next */
        (cov_1dgalqgz7v().b[7][0]++, errorData.needsReauth) ||
        /* istanbul ignore next */
        (cov_1dgalqgz7v().b[7][1]++, response.status === 401) ||
        /* istanbul ignore next */
        (cov_1dgalqgz7v().b[7][2]++, response.status === 403)) {
          /* istanbul ignore next */
          cov_1dgalqgz7v().b[6][0]++;
          cov_1dgalqgz7v().s[48]++;
          _sonner.toast.error(
          /* istanbul ignore next */
          (cov_1dgalqgz7v().b[8][0]++, errorData.error) ||
          /* istanbul ignore next */
          (cov_1dgalqgz7v().b[8][1]++, 'Google Drive access expired. Please reconnect your account.'));
          /* istanbul ignore next */
          cov_1dgalqgz7v().s[49]++;
          window.location.reload();
          /* istanbul ignore next */
          cov_1dgalqgz7v().s[50]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1dgalqgz7v().b[6][1]++;
        }
        cov_1dgalqgz7v().s[51]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1dgalqgz7v().b[9][0]++, errorData.error) ||
        /* istanbul ignore next */
        (cov_1dgalqgz7v().b[9][1]++, 'Upload failed'));
      } else
      /* istanbul ignore next */
      {
        cov_1dgalqgz7v().b[5][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_1dgalqgz7v().s[52]++, await response.json());
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[53]++;
      _sonner.toast.success(`${result.name} uploaded successfully`);
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[54]++;
      onUploadComplete();
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[55]++;
      handleClose();
    } catch (error) {
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[56]++;
      // Log error for debugging in development only
      if (process.env.NODE_ENV === 'development') {
        /* istanbul ignore next */
        cov_1dgalqgz7v().b[10][0]++;
      } else
      /* istanbul ignore next */
      {
        cov_1dgalqgz7v().b[10][1]++;
      }
      cov_1dgalqgz7v().s[57]++;
      _sonner.toast.error(error instanceof Error ?
      /* istanbul ignore next */
      (cov_1dgalqgz7v().b[11][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1dgalqgz7v().b[11][1]++, 'Upload failed'));
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[58]++;
      setUploadProgress(0);
    } finally {
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[59]++;
      setUploading(false);
    }
  };
  /* istanbul ignore next */
  cov_1dgalqgz7v().s[60]++;
  const handleClose = () => {
    /* istanbul ignore next */
    cov_1dgalqgz7v().f[6]++;
    cov_1dgalqgz7v().s[61]++;
    if (!uploading) {
      /* istanbul ignore next */
      cov_1dgalqgz7v().b[12][0]++;
      cov_1dgalqgz7v().s[62]++;
      setSelectedFile(null);
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[63]++;
      setFileName('');
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[64]++;
      setDescription('');
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[65]++;
      setUploadProgress(0);
      /* istanbul ignore next */
      cov_1dgalqgz7v().s[66]++;
      if (fileInputRef.current) {
        /* istanbul ignore next */
        cov_1dgalqgz7v().b[13][0]++;
        cov_1dgalqgz7v().s[67]++;
        fileInputRef.current.value = '';
      } else
      /* istanbul ignore next */
      {
        cov_1dgalqgz7v().b[13][1]++;
      }
      cov_1dgalqgz7v().s[68]++;
      onClose();
    } else
    /* istanbul ignore next */
    {
      cov_1dgalqgz7v().b[12][1]++;
    }
  };
  /* istanbul ignore next */
  cov_1dgalqgz7v().s[69]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.Dialog, {
    open: isOpen,
    onOpenChange: handleClose,
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogContent, {
      className: "sm:max-w-md",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogHeader, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogTitle, {
          children: "Upload File"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogDescription, {
          children: ["Upload a file to your Google Drive",
          /* istanbul ignore next */
          (cov_1dgalqgz7v().b[14][0]++, currentFolderId) &&
          /* istanbul ignore next */
          (cov_1dgalqgz7v().b[14][1]++, ' in the current folder')]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
            htmlFor: "file-input",
            children: "Select File"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "flex items-center gap-2",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
              id: "file-input",
              ref: fileInputRef,
              type: "file",
              onChange: handleFileSelect,
              disabled: uploading,
              className: "file:bg-primary file:text-primary-foreground file:mr-2 file:rounded file:border-0 file:px-2 file:py-1 file:text-sm"
            })
          }),
          /* istanbul ignore next */
          (cov_1dgalqgz7v().b[15][0]++, selectedFile) &&
          /* istanbul ignore next */
          (cov_1dgalqgz7v().b[15][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "bg-muted flex items-center justify-between rounded p-2 text-sm",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "truncate",
              children: selectedFile.name
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center gap-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-muted-foreground",
                children: (0, _utils.formatFileSize)(selectedFile.size)
              }),
              /* istanbul ignore next */
              (cov_1dgalqgz7v().b[16][0]++, !uploading) &&
              /* istanbul ignore next */
              (cov_1dgalqgz7v().b[16][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                variant: "ghost",
                size: "sm",
                onClick: () => {
                  /* istanbul ignore next */
                  cov_1dgalqgz7v().f[7]++;
                  cov_1dgalqgz7v().s[70]++;
                  setSelectedFile(null);
                  /* istanbul ignore next */
                  cov_1dgalqgz7v().s[71]++;
                  setFileName('');
                  /* istanbul ignore next */
                  cov_1dgalqgz7v().s[72]++;
                  if (fileInputRef.current) {
                    /* istanbul ignore next */
                    cov_1dgalqgz7v().b[17][0]++;
                    cov_1dgalqgz7v().s[73]++;
                    fileInputRef.current.value = '';
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1dgalqgz7v().b[17][1]++;
                  }
                },
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.X, {
                  className: "h-3 w-3"
                })
              }))]
            })]
          }))]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
            htmlFor: "file-name",
            children: "File Name"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
            id: "file-name",
            value: fileName,
            onChange: e => {
              /* istanbul ignore next */
              cov_1dgalqgz7v().f[8]++;
              cov_1dgalqgz7v().s[74]++;
              return setFileName(e.target.value);
            },
            placeholder: "Enter file name...",
            disabled: uploading
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
            htmlFor: "description",
            children: "Description (Optional)"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_textarea.Textarea, {
            id: "description",
            value: description,
            onChange: e => {
              /* istanbul ignore next */
              cov_1dgalqgz7v().f[9]++;
              cov_1dgalqgz7v().s[75]++;
              return setDescription(e.target.value);
            },
            placeholder: "Enter file description...",
            disabled: uploading,
            rows: 3
          })]
        }),
        /* istanbul ignore next */
        (cov_1dgalqgz7v().b[18][0]++, uploading) &&
        /* istanbul ignore next */
        (cov_1dgalqgz7v().b[18][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex justify-between text-sm",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              children: "Uploading..."
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
              children: [uploadProgress, "%"]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
            value: uploadProgress,
            className: "w-full"
          })]
        }))]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogFooter, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
          variant: "outline",
          onClick: handleClose,
          disabled: uploading,
          children: "Cancel"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
          onClick: handleUpload,
          disabled:
          /* istanbul ignore next */
          (cov_1dgalqgz7v().b[19][0]++, !selectedFile) ||
          /* istanbul ignore next */
          (cov_1dgalqgz7v().b[19][1]++, uploading),
          children: uploading ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1dgalqgz7v().b[20][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Upload, {
              className: "mr-2 h-4 w-4 animate-pulse"
            }), "Uploading..."]
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1dgalqgz7v().b[20][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Upload, {
              className: "mr-2 h-4 w-4"
            }), "Upload"]
          }))
        })]
      })]
    })
  });
}
const _default =
/* istanbul ignore next */
(cov_1dgalqgz7v().s[76]++, FileUploadDialog);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,