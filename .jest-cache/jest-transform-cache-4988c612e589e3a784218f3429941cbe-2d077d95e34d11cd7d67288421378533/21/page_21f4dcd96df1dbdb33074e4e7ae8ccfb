8f3d2fb4a519df9805d3d317efd3db6e
'use client';
"use strict";

/* istanbul ignore next */
function cov_1no5549csm() {
  var path = "/home/runner/workspace/src/app/(main)/dashboard/drive/page.tsx";
  var hash = "a1093d32390d62203ab909ea478b45c67d37e3f5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/app/(main)/dashboard/drive/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 25
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 31
        },
        end: {
          line: 14,
          column: 80
        }
      },
      "6": {
        start: {
          line: 15,
          column: 23
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "9": {
        start: {
          line: 22,
          column: 39
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "10": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "11": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 40
        }
      },
      "12": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 20
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 66
        }
      },
      "14": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "18": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "19": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "20": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "21": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "22": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 45,
          column: 88
        }
      },
      "23": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "24": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "25": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 95
        }
      },
      "26": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "27": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 57
        }
      },
      "28": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 39
        }
      },
      "29": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 25
        }
      },
      "30": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "31": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 31
        }
      },
      "32": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 18
        }
      },
      "33": {
        start: {
          line: 63,
          column: 21
        },
        end: {
          line: 73,
          column: 2
        }
      },
      "34": {
        start: {
          line: 63,
          column: 47
        },
        end: {
          line: 65,
          column: 11
        }
      },
      "35": {
        start: {
          line: 63,
          column: 88
        },
        end: {
          line: 63,
          column: 153
        }
      },
      "36": {
        start: {
          line: 63,
          column: 168
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "37": {
        start: {
          line: 67,
          column: 21
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "38": {
        start: {
          line: 71,
          column: 31
        },
        end: {
          line: 71,
          column: 89
        }
      },
      "39": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 81,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 33
          }
        },
        loc: {
          start: {
            line: 21,
            column: 47
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 25,
            column: 40
          }
        },
        loc: {
          start: {
            line: 25,
            column: 61
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 34
          }
        },
        loc: {
          start: {
            line: 29,
            column: 53
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 43
          },
          end: {
            line: 63,
            column: 44
          }
        },
        loc: {
          start: {
            line: 63,
            column: 47
          },
          end: {
            line: 65,
            column: 11
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 70
          },
          end: {
            line: 63,
            column: 71
          }
        },
        loc: {
          start: {
            line: 63,
            column: 88
          },
          end: {
            line: 63,
            column: 153
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 63,
            column: 160
          },
          end: {
            line: 63,
            column: 161
          }
        },
        loc: {
          start: {
            line: 63,
            column: 168
          },
          end: {
            line: 65,
            column: 9
          }
        },
        line: 63
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 67,
            column: 18
          }
        },
        loc: {
          start: {
            line: 67,
            column: 21
          },
          end: {
            line: 69,
            column: 13
          }
        },
        line: 67
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 71,
            column: 13
          },
          end: {
            line: 71,
            column: 14
          }
        },
        loc: {
          start: {
            line: 71,
            column: 31
          },
          end: {
            line: 71,
            column: 89
          }
        },
        line: 71
      },
      "10": {
        name: "DrivePage",
        decl: {
          start: {
            line: 74,
            column: 9
          },
          end: {
            line: 74,
            column: 18
          }
        },
        loc: {
          start: {
            line: 74,
            column: 21
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 74
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 26,
            column: 45
          }
        }, {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 65
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 20
          }
        }, {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 27
          }
        }, {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 30,
            column: 45
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 47
          }
        }, {
          start: {
            line: 33,
            column: 51
          },
          end: {
            line: 33,
            column: 76
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 31
          }
        }],
        line: 39
      },
      "10": {
        loc: {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 53
          }
        }, {
          start: {
            line: 45,
            column: 57
          },
          end: {
            line: 45,
            column: 88
          }
        }],
        line: 45
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 29
          }
        }, {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 79
          }
        }],
        line: 47
      },
      "13": {
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 47
          },
          end: {
            line: 48,
            column: 88
          }
        }, {
          start: {
            line: 48,
            column: 91
          },
          end: {
            line: 48,
            column: 95
          }
        }],
        line: 48
      },
      "14": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 53,
            column: 13
          }
        }],
        line: 49
      },
      "15": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 33
          }
        }, {
          start: {
            line: 49,
            column: 37
          },
          end: {
            line: 49,
            column: 45
          }
        }],
        line: 49
      },
      "16": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/app/(main)/dashboard/drive/page.tsx"],
      sourcesContent: ["'use client'\n\nimport { Suspense } from 'react'\nimport dynamic from 'next/dynamic'\n\nimport { DriveGridSkeleton } from './_components/drive-skeleton'\n\n// Lazy load the heavy DriveManager component with optimized loading\nconst DriveManager = dynamic(\n  () =>\n    import('./_components/drive-manager').then(mod => ({\n      default: mod.DriveManager,\n    })),\n  {\n    loading: () => <DriveGridSkeleton />,\n    ssr: false,\n  },\n)\n\nexport default function DrivePage() {\n  return (\n    <div className=\"min-h-screen w-full\">\n      <Suspense fallback={<DriveGridSkeleton />}>\n        <DriveManager />\n      </Suspense>\n    </div>\n  )\n}\n"],
      names: ["DrivePage", "DriveManager", "dynamic", "then", "mod", "default", "loading", "DriveGridSkeleton", "ssr", "div", "className", "Suspense", "fallback"],
      mappings: "AAAA;;;;;+BAmBA;;;eAAwBA;;;;uBAjBC;gEACL;+BAEc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElC,oEAAoE;AACpE,MAAMC,eAAeC,IAAAA,gBAAO,EAC1B,IACE,mEAAA,QAAO,iCAA+BC,IAAI,CAACC,CAAAA,MAAQ,CAAA;YACjDC,SAASD,IAAIH,YAAY;QAC3B,CAAA;;;;;;IAEAK,SAAS,kBAAM,qBAACC,gCAAiB;IACjCC,KAAK;;AAIM,SAASR;IACtB,qBACE,qBAACS;QAAIC,WAAU;kBACb,cAAA,qBAACC,eAAQ;YAACC,wBAAU,qBAACL,gCAAiB;sBACpC,cAAA,qBAACN;;;AAIT"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a1093d32390d62203ab909ea478b45c67d37e3f5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1no5549csm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1no5549csm();
cov_1no5549csm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1no5549csm().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1no5549csm().f[0]++;
    cov_1no5549csm().s[2]++;
    return DrivePage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1no5549csm().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1no5549csm().s[4]++, require("react"));
const _dynamic =
/* istanbul ignore next */
(/*#__PURE__*/cov_1no5549csm().s[5]++, _interop_require_default(require("next/dynamic")));
const _driveskeleton =
/* istanbul ignore next */
(cov_1no5549csm().s[6]++, require("./_components/drive-skeleton"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1no5549csm().f[1]++;
  cov_1no5549csm().s[7]++;
  return /* istanbul ignore next */(cov_1no5549csm().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1no5549csm().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1no5549csm().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1no5549csm().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1no5549csm().f[2]++;
  cov_1no5549csm().s[8]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1no5549csm().b[2][0]++;
    cov_1no5549csm().s[9]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1no5549csm().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1no5549csm().s[10]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1no5549csm().s[11]++, new WeakMap());
  /* istanbul ignore next */
  cov_1no5549csm().s[12]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1no5549csm().f[3]++;
    cov_1no5549csm().s[13]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1no5549csm().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1no5549csm().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1no5549csm().f[4]++;
  cov_1no5549csm().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_1no5549csm().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1no5549csm().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1no5549csm().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1no5549csm().b[4][0]++;
    cov_1no5549csm().s[15]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1no5549csm().b[4][1]++;
  }
  cov_1no5549csm().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_1no5549csm().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1no5549csm().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1no5549csm().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1no5549csm().b[6][0]++;
    cov_1no5549csm().s[17]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1no5549csm().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1no5549csm().s[18]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1no5549csm().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_1no5549csm().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1no5549csm().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1no5549csm().b[8][0]++;
    cov_1no5549csm().s[20]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1no5549csm().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1no5549csm().s[21]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1no5549csm().s[22]++,
  /* istanbul ignore next */
  (cov_1no5549csm().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1no5549csm().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1no5549csm().s[23]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1no5549csm().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1no5549csm().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1no5549csm().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1no5549csm().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1no5549csm().s[25]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1no5549csm().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1no5549csm().b[13][1]++, null));
      /* istanbul ignore next */
      cov_1no5549csm().s[26]++;
      if (
      /* istanbul ignore next */
      (cov_1no5549csm().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1no5549csm().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1no5549csm().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1no5549csm().b[14][0]++;
        cov_1no5549csm().s[27]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1no5549csm().b[14][1]++;
        cov_1no5549csm().s[28]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1no5549csm().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1no5549csm().s[29]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1no5549csm().s[30]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1no5549csm().b[16][0]++;
    cov_1no5549csm().s[31]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1no5549csm().b[16][1]++;
  }
  cov_1no5549csm().s[32]++;
  return newObj;
}
// Lazy load the heavy DriveManager component with optimized loading
const DriveManager =
/* istanbul ignore next */
(cov_1no5549csm().s[33]++, (0, _dynamic.default)(() => {
  /* istanbul ignore next */
  cov_1no5549csm().f[5]++;
  cov_1no5549csm().s[34]++;
  return Promise.resolve().then(() => {
    /* istanbul ignore next */
    cov_1no5549csm().f[6]++;
    cov_1no5549csm().s[35]++;
    return /*#__PURE__*/_interop_require_wildcard(require("./_components/drive-manager"));
  }).then(mod => {
    /* istanbul ignore next */
    cov_1no5549csm().f[7]++;
    cov_1no5549csm().s[36]++;
    return {
      default: mod.DriveManager
    };
  });
}, {
  loadableGenerated: {
    webpack: () => {
      /* istanbul ignore next */
      cov_1no5549csm().f[8]++;
      cov_1no5549csm().s[37]++;
      return [require.resolveWeak("./_components/drive-manager")];
    }
  },
  loading: () => {
    /* istanbul ignore next */
    cov_1no5549csm().f[9]++;
    cov_1no5549csm().s[38]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_driveskeleton.DriveGridSkeleton, {});
  },
  ssr: false
}));
function DrivePage() {
  /* istanbul ignore next */
  cov_1no5549csm().f[10]++;
  cov_1no5549csm().s[39]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "min-h-screen w-full",
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
      fallback: /*#__PURE__*/(0, _jsxruntime.jsx)(_driveskeleton.DriveGridSkeleton, {}),
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(DriveManager, {})
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEcml2ZVBhZ2UiLCJEcml2ZU1hbmFnZXIiLCJjb3ZfMW5vNTU0OWNzbSIsInMiLCJfZHluYW1pYyIsImRlZmF1bHQiLCJmIiwiUHJvbWlzZSIsInJlc29sdmUiLCJ0aGVuIiwiX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCIsInJlcXVpcmUiLCJtb2QiLCJsb2FkaW5nIiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJfZHJpdmVza2VsZXRvbiIsIkRyaXZlR3JpZFNrZWxldG9uIiwic3NyIiwiY2xhc3NOYW1lIiwiX3JlYWN0IiwiU3VzcGVuc2UiLCJmYWxsYmFjayJdLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvc3JjL2FwcC8obWFpbikvZGFzaGJvYXJkL2RyaXZlL3BhZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG5pbXBvcnQgeyBTdXNwZW5zZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGR5bmFtaWMgZnJvbSAnbmV4dC9keW5hbWljJ1xuXG5pbXBvcnQgeyBEcml2ZUdyaWRTa2VsZXRvbiB9IGZyb20gJy4vX2NvbXBvbmVudHMvZHJpdmUtc2tlbGV0b24nXG5cbi8vIExhenkgbG9hZCB0aGUgaGVhdnkgRHJpdmVNYW5hZ2VyIGNvbXBvbmVudCB3aXRoIG9wdGltaXplZCBsb2FkaW5nXG5jb25zdCBEcml2ZU1hbmFnZXIgPSBkeW5hbWljKFxuICAoKSA9PlxuICAgIGltcG9ydCgnLi9fY29tcG9uZW50cy9kcml2ZS1tYW5hZ2VyJykudGhlbihtb2QgPT4gKHtcbiAgICAgIGRlZmF1bHQ6IG1vZC5Ecml2ZU1hbmFnZXIsXG4gICAgfSkpLFxuICB7XG4gICAgbG9hZGluZzogKCkgPT4gPERyaXZlR3JpZFNrZWxldG9uIC8+LFxuICAgIHNzcjogZmFsc2UsXG4gIH0sXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERyaXZlUGFnZSgpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiB3LWZ1bGxcIj5cbiAgICAgIDxTdXNwZW5zZSBmYWxsYmFjaz17PERyaXZlR3JpZFNrZWxldG9uIC8+fT5cbiAgICAgICAgPERyaXZlTWFuYWdlciAvPlxuICAgICAgPC9TdXNwZW5zZT5cbiAgICA8L2Rpdj5cbiAgKVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBbUJBOzs7Ozs7V0FBd0JBLFNBQUE7Ozs7Ozs7O2tDQWpCQzs7O3dFQUNMOzs7a0NBRWM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVsQztBQUNBLE1BQU1DLFlBQUE7QUFBQTtBQUFBLENBQUFDLGNBQUEsR0FBQUMsQ0FBQSxRQUFlLElBQUFDLFFBQUEsQ0FBQUMsT0FBTyxFQUMxQixNQUNFO0VBQUE7RUFBQUgsY0FBQSxHQUFBSSxDQUFBO0VBQUFKLGNBQUEsR0FBQUMsQ0FBQTtFQUFBLE9BQUFJLE9BQUEsQ0FBQUMsT0FBQSxHQUFBQyxJQUFBO0lBQUE7SUFBQVAsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUMsQ0FBQTtJQUFBLG9CQUFBTyx5QkFBQSxDQUFBQyxPQUFBLENBQU87RUFBQSxHQUErQkYsSUFBSSxDQUFDRyxHQUFBLElBQVE7SUFBQTtJQUFBVixjQUFBLEdBQUFJLENBQUE7SUFBQUosY0FBQSxHQUFBQyxDQUFBO0lBQUE7TUFDakRFLE9BQUEsRUFBU08sR0FBQSxDQUFJWDtJQUNmO0VBQUE7QUFBQTs7Ozs7Ozs7O0VBRUFZLE9BQUEsRUFBU0EsQ0FBQSxLQUFNO0lBQUE7SUFBQVgsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUMsQ0FBQTtJQUFBLE9BQU4sYUFBTSxJQUFBVyxXQUFBLENBQUFDLEdBQUEsRUFBQ0MsY0FBQSxDQUFBQyxpQkFBaUI7RUFBQTtFQUNqQ0MsR0FBQSxFQUFLOztBQUlNLFNBQVNsQixVQUFBO0VBQUE7RUFBQUUsY0FBQSxHQUFBSSxDQUFBO0VBQUFKLGNBQUEsR0FBQUMsQ0FBQTtFQUN0QixvQkFDRSxJQUFBVyxXQUFBLENBQUFDLEdBQUEsRUFBQztJQUFJSSxTQUFBLEVBQVU7Y0FDYixpQkFBQUwsV0FBQSxDQUFBQyxHQUFBLEVBQUNLLE1BQUEsQ0FBQUMsUUFBUTtNQUFDQyxRQUFBLGVBQVUsSUFBQVIsV0FBQSxDQUFBQyxHQUFBLEVBQUNDLGNBQUEsQ0FBQUMsaUJBQWlCO2dCQUNwQyxpQkFBQUgsV0FBQSxDQUFBQyxHQUFBLEVBQUNkLFlBQUE7OztBQUlUIiwiaWdub3JlTGlzdCI6W119