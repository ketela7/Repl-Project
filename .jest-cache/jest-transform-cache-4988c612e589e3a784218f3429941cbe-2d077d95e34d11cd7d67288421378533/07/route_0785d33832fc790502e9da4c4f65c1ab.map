{"version":3,"sources":["/home/runner/workspace/src/app/api/drive/files/share/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\n\nimport { initDriveService, handleApiError, validateShareRequest } from '@/lib/api-utils'\n\nexport async function POST(request: NextRequest) {\n  try {\n    const authResult = await initDriveService()\n    if (!authResult.success) {\n      return authResult.response!\n    }\n\n    const { driveService } = authResult\n    const body = await request.json()\n\n    // Validate share request\n    if (!validateShareRequest(body)) {\n      return NextResponse.json({ error: 'Invalid share request body' }, { status: 400 })\n    }\n\n    // Handle both single and bulk operations\n    const { fileId, items, permissions, notifyUsers = false, message } = body\n\n    // Determine operation type based on items array or single fileId\n    const fileIds = items && items.length > 0 ? items.map((item: any) => item.id) : [fileId]\n    const isBulkOperation = items && items.length > 1\n\n    if (!fileIds || fileIds.length === 0) {\n      return NextResponse.json({ error: 'File IDs are required' }, { status: 400 })\n    }\n\n    if (!permissions || permissions.length === 0) {\n      return NextResponse.json({ error: 'Permissions are required' }, { status: 400 })\n    }\n\n    const results = []\n    const errors = []\n\n    for (const id of fileIds) {\n      try {\n        const shareResults = []\n\n        // Apply each permission to the file\n        for (const permission of permissions) {\n          const shareResult = await driveService.shareFile(id, {\n            role: permission.role,\n            type: permission.type,\n            emailAddress: permission.emailAddress,\n            domain: permission.domain,\n            sendNotificationEmail: notifyUsers,\n          })\n          shareResults.push(shareResult)\n        }\n\n        results.push({\n          fileId: id,\n          success: true,\n          permissions: shareResults,\n          notifyUsers,\n          message,\n        })\n      } catch (error: any) {\n        errors.push({\n          fileId: id,\n          success: false,\n          error: error.message || 'Share operation failed',\n        })\n      }\n    }\n\n    const response = {\n      success: errors.length === 0,\n      processed: results.length,\n      failed: errors.length,\n      type: isBulkOperation ? 'bulk' : 'single',\n      operation: 'share',\n      results,\n      errors: errors.length > 0 ? errors : undefined,\n    }\n\n    return NextResponse.json(response, {\n      status: errors.length === 0 ? 200 : 207,\n    })\n  } catch (error: any) {\n    return handleApiError(error)\n  }\n}\n"],"names":["POST","request","authResult","initDriveService","success","response","driveService","body","json","validateShareRequest","NextResponse","error","status","fileId","items","permissions","notifyUsers","message","fileIds","length","map","item","id","isBulkOperation","results","errors","shareResults","permission","shareResult","shareFile","role","type","emailAddress","domain","sendNotificationEmail","push","processed","failed","operation","undefined","handleApiError"],"mappings":";;;;+BAIsBA;;;eAAAA;;;wBAJoB;0BAE6B;AAEhE,eAAeA,KAAKC,OAAoB;IAC7C,IAAI;QACF,MAAMC,aAAa,MAAMC,IAAAA,0BAAgB;QACzC,IAAI,CAACD,WAAWE,OAAO,EAAE;YACvB,OAAOF,WAAWG,QAAQ;QAC5B;QAEA,MAAM,EAAEC,YAAY,EAAE,GAAGJ;QACzB,MAAMK,OAAO,MAAMN,QAAQO,IAAI;QAE/B,yBAAyB;QACzB,IAAI,CAACC,IAAAA,8BAAoB,EAACF,OAAO;YAC/B,OAAOG,oBAAY,CAACF,IAAI,CAAC;gBAAEG,OAAO;YAA6B,GAAG;gBAAEC,QAAQ;YAAI;QAClF;QAEA,yCAAyC;QACzC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,cAAc,KAAK,EAAEC,OAAO,EAAE,GAAGV;QAErE,iEAAiE;QACjE,MAAMW,UAAUJ,SAASA,MAAMK,MAAM,GAAG,IAAIL,MAAMM,GAAG,CAAC,CAACC,OAAcA,KAAKC,EAAE,IAAI;YAACT;SAAO;QACxF,MAAMU,kBAAkBT,SAASA,MAAMK,MAAM,GAAG;QAEhD,IAAI,CAACD,WAAWA,QAAQC,MAAM,KAAK,GAAG;YACpC,OAAOT,oBAAY,CAACF,IAAI,CAAC;gBAAEG,OAAO;YAAwB,GAAG;gBAAEC,QAAQ;YAAI;QAC7E;QAEA,IAAI,CAACG,eAAeA,YAAYI,MAAM,KAAK,GAAG;YAC5C,OAAOT,oBAAY,CAACF,IAAI,CAAC;gBAAEG,OAAO;YAA2B,GAAG;gBAAEC,QAAQ;YAAI;QAChF;QAEA,MAAMY,UAAU,EAAE;QAClB,MAAMC,SAAS,EAAE;QAEjB,KAAK,MAAMH,MAAMJ,QAAS;YACxB,IAAI;gBACF,MAAMQ,eAAe,EAAE;gBAEvB,oCAAoC;gBACpC,KAAK,MAAMC,cAAcZ,YAAa;oBACpC,MAAMa,cAAc,MAAMtB,aAAauB,SAAS,CAACP,IAAI;wBACnDQ,MAAMH,WAAWG,IAAI;wBACrBC,MAAMJ,WAAWI,IAAI;wBACrBC,cAAcL,WAAWK,YAAY;wBACrCC,QAAQN,WAAWM,MAAM;wBACzBC,uBAAuBlB;oBACzB;oBACAU,aAAaS,IAAI,CAACP;gBACpB;gBAEAJ,QAAQW,IAAI,CAAC;oBACXtB,QAAQS;oBACRlB,SAAS;oBACTW,aAAaW;oBACbV;oBACAC;gBACF;YACF,EAAE,OAAON,OAAY;gBACnBc,OAAOU,IAAI,CAAC;oBACVtB,QAAQS;oBACRlB,SAAS;oBACTO,OAAOA,MAAMM,OAAO,IAAI;gBAC1B;YACF;QACF;QAEA,MAAMZ,WAAW;YACfD,SAASqB,OAAON,MAAM,KAAK;YAC3BiB,WAAWZ,QAAQL,MAAM;YACzBkB,QAAQZ,OAAON,MAAM;YACrBY,MAAMR,kBAAkB,SAAS;YACjCe,WAAW;YACXd;YACAC,QAAQA,OAAON,MAAM,GAAG,IAAIM,SAASc;QACvC;QAEA,OAAO7B,oBAAY,CAACF,IAAI,CAACH,UAAU;YACjCO,QAAQa,OAAON,MAAM,KAAK,IAAI,MAAM;QACtC;IACF,EAAE,OAAOR,OAAY;QACnB,OAAO6B,IAAAA,wBAAc,EAAC7B;IACxB;AACF"}