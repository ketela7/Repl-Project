{"version":3,"names":["cov_1tad0jq2mb","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","DriveApiBatcher","FIELD_SELECTORS","PerformanceMonitor","RequestDeduplicator","calculateBackoffDelay","getOptimizedRequestParams","performanceMonitor","requestDeduplicator","LIST_MINIMAL","LIST_STANDARD","DETAILS_FULL","EXISTS_CHECK","FOLDER_STRUCTURE","SEARCH_RESULTS","operation","baseParams","fields","supportsAllDrives","includeItemsFromAllDrives","acknowledgeAbuse","pageSize","Math","min","constructor","requests","batchTimeout","BATCH_DELAY","MAX_BATCH_SIZE","addToBatch","id","requestFn","Promise","resolve","reject","push","request","length","processBatch","setTimeout","clearTimeout","currentBatch","splice","promises","map","result","error","allSettled","clear","forEach","Error","deduplicate","key","existing","pendingRequests","get","promise","set","cleanup","delete","then","REQUEST_TTL","generateKey","params","keyParts","fileId","q","pageToken","orderBy","join","Map","attempt","baseDelay","exponentialDelay","pow","jitter","random","maxDelay","trackRequest","startTime","Date","now","metric","metrics","count","totalTime","errors","duration","process","env","NODE_ENV","console","warn","getStats","stats","avgTime","round","errorRate","reset"],"sources":["/home/runner/workspace/src/lib/google-drive/performance.ts"],"sourcesContent":["/**\n * Google Drive API Performance Optimizations\n * Based on: https://developers.google.com/workspace/drive/api/guides/performance\n */\n\nexport interface BatchRequest {\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE'\n  url: string\n  body?: any\n  headers?: Record<string, string>\n}\n\nexport interface BatchResponse {\n  id: string\n  status: number\n  headers: Record<string, string>\n  body: any\n}\n\n/**\n * Optimized field selectors for different use cases\n * Reduces bandwidth by only requesting needed fields\n */\nexport const FIELD_SELECTORS = {\n  // Minimal fields for file listing\n  LIST_MINIMAL: 'nextPageToken, files(id, name, mimeType)',\n\n  // Standard fields for main file view - MUST include capabilities for bulk operations\n  LIST_STANDARD:\n    'nextPageToken, incompleteSearch, files(id, name, mimeType, size, createdTime, modifiedTime, owners(displayName, emailAddress), shared, trashed, starred, webViewLink, thumbnailLink, parents, capabilities(canEdit, canShare, canDelete, canDownload, canCopy, canTrash, canUntrash, canRename, canMoveItemWithinDrive))',\n\n  // Detailed fields for file details dialog\n  DETAILS_FULL:\n    'id, name, mimeType, size, createdTime, modifiedTime, owners(displayName, emailAddress), shared, trashed, starred, webViewLink, webContentLink, thumbnailLink, parents, capabilities(canEdit, canShare, canDelete, canDownload), permissions(id, role, type, emailAddress, displayName)',\n\n  // Minimal fields for exists check\n  EXISTS_CHECK: 'files(id)',\n\n  // Fields for folder structure\n  FOLDER_STRUCTURE: 'files(id, name, parents, mimeType)',\n\n  // Fields for search results\n  SEARCH_RESULTS: 'nextPageToken, files(id, name, mimeType, size, modifiedTime, parents, webViewLink)',\n} as const\n\n/**\n * Performance-optimized request parameters\n */\nexport function getOptimizedRequestParams(operation: keyof typeof FIELD_SELECTORS, baseParams: any = {}): any {\n  return {\n    ...baseParams,\n    fields: FIELD_SELECTORS[operation],\n\n    // Enable gzip compression\n    supportsAllDrives: true,\n    includeItemsFromAllDrives: true,\n\n    // Optimize for performance\n    acknowledgeAbuse: false,\n\n    // Respect user's pageSize choice, with Google Drive API limit of 1000\n    pageSize: Math.min(baseParams.pageSize || 50, 1000),\n  }\n}\n\n/**\n * Batch requests for multiple operations\n * Reduces API calls by combining multiple requests\n */\nexport class DriveApiBatcher {\n  private requests: Array<{\n    id: string\n    request: any\n    resolve: Function\n    reject: Function\n  }> = []\n  private batchTimeout: NodeJS.Timeout | null = null\n  private readonly BATCH_DELAY = 100 // ms\n  private readonly MAX_BATCH_SIZE = 100\n\n  constructor() {\n    // Constructor implementation\n  }\n\n  /**\n   * Add request to batch queue\n   */\n  async addToBatch<T>(id: string, requestFn: () => Promise<T>): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.requests.push({ id, request: requestFn, resolve, reject })\n\n      // Process batch after delay or when max size reached\n      if (this.requests.length >= this.MAX_BATCH_SIZE) {\n        this.processBatch()\n      } else if (!this.batchTimeout) {\n        this.batchTimeout = setTimeout(() => this.processBatch(), this.BATCH_DELAY)\n      }\n    })\n  }\n\n  /**\n   * Process batched requests\n   */\n  private async processBatch(): Promise<void> {\n    if (this.batchTimeout) {\n      clearTimeout(this.batchTimeout)\n      this.batchTimeout = null\n    }\n\n    if (this.requests.length === 0) return\n\n    const currentBatch = this.requests.splice(0, this.MAX_BATCH_SIZE)\n\n    // Execute requests in parallel with controlled concurrency\n    const promises = currentBatch.map(async ({ request, resolve, reject }) => {\n      try {\n        const result = await request()\n        resolve(result)\n      } catch (error) {\n        reject(error)\n      }\n    })\n\n    await Promise.allSettled(promises)\n  }\n\n  /**\n   * Clear pending requests\n   */\n  clear(): void {\n    if (this.batchTimeout) {\n      clearTimeout(this.batchTimeout)\n      this.batchTimeout = null\n    }\n    this.requests.forEach(({ reject }) => {\n      reject(new Error('Batch cleared'))\n    })\n    this.requests = []\n  }\n}\n\n/**\n * Request deduplication for identical requests\n */\nexport class RequestDeduplicator {\n  private pendingRequests = new Map<string, Promise<any>>()\n  private readonly REQUEST_TTL = 5000 // 5 seconds\n\n  /**\n   * Deduplicate identical requests\n   */\n  async deduplicate<T>(key: string, requestFn: () => Promise<T>): Promise<T> {\n    // Check if identical request is already pending\n    const existing = this.pendingRequests.get(key)\n    if (existing) {\n      return existing\n    }\n\n    // Create new request\n    const promise = requestFn()\n    this.pendingRequests.set(key, promise)\n\n    // Clean up after completion or timeout\n    const cleanup = () => {\n      this.pendingRequests.delete(key)\n    }\n\n    promise.then(cleanup, cleanup)\n    setTimeout(cleanup, this.REQUEST_TTL)\n\n    return promise\n  }\n\n  /**\n   * Generate cache key for file operations\n   */\n  generateKey(operation: string, params: any): string {\n    const keyParts = [operation]\n\n    // Add relevant parameters to key\n    if (params.fileId) keyParts.push(`id:${params.fileId}`)\n    if (params.q) keyParts.push(`q:${params.q}`)\n    if (params.pageToken) keyParts.push(`token:${params.pageToken}`)\n    if (params.pageSize) keyParts.push(`size:${params.pageSize}`)\n    if (params.orderBy) keyParts.push(`order:${params.orderBy}`)\n\n    return keyParts.join('|')\n  }\n}\n\n/**\n * Exponential backoff with jitter for retry logic\n */\nexport function calculateBackoffDelay(attempt: number, baseDelay: number = 1000): number {\n  const exponentialDelay = baseDelay * Math.pow(2, attempt - 1)\n  const jitter = Math.random() * 0.1 * exponentialDelay\n  const maxDelay = 32000 // 32 seconds max\n\n  return Math.min(exponentialDelay + jitter, maxDelay)\n}\n\n/**\n * Performance monitoring utilities\n */\nexport class PerformanceMonitor {\n  private metrics = new Map<string, { count: number; totalTime: number; errors: number }>()\n\n  /**\n   * Track request performance\n   */\n  async trackRequest<T>(operation: string, requestFn: () => Promise<T>): Promise<T> {\n    const startTime = Date.now()\n    const metric = this.metrics.get(operation) || {\n      count: 0,\n      totalTime: 0,\n      errors: 0,\n    }\n\n    try {\n      const result = await requestFn()\n      const duration = Date.now() - startTime\n\n      metric.count++\n      metric.totalTime += duration\n      this.metrics.set(operation, metric)\n\n      // Log slow requests in development\n      if (process.env.NODE_ENV === 'development' && duration > 2000) {\n        console.warn(`[Performance] Slow ${operation}: ${duration}ms`)\n      }\n\n      return result\n    } catch (error) {\n      metric.errors++\n      this.metrics.set(operation, metric)\n      throw error\n    }\n  }\n\n  /**\n   * Get performance statistics\n   */\n  getStats(): Record<string, { avgTime: number; count: number; errorRate: number }> {\n    const stats: Record<string, any> = {}\n\n    for (const [operation, metric] of this.metrics) {\n      stats[operation] = {\n        avgTime: metric.count > 0 ? Math.round(metric.totalTime / metric.count) : 0,\n        count: metric.count,\n        errorRate: metric.count > 0 ? (metric.errors / metric.count) * 100 : 0,\n      }\n    }\n\n    return stats\n  }\n\n  /**\n   * Reset metrics\n   */\n  reset(): void {\n    this.metrics.clear()\n  }\n}\n\n// Global instances\nexport const performanceMonitor = new PerformanceMonitor()\nexport const requestDeduplicator = new RequestDeduplicator()\n"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;M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","ignoreList":[]}