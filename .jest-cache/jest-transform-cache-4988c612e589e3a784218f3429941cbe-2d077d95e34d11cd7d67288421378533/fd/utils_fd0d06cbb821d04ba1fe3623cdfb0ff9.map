{"version":3,"names":["buildSearchQuery","cov_1ig6zpe88c","f","s","convertGoogleDriveFile","convertGoogleDriveFolder","extractFolderIdFromUrl","formatDate","formatDriveFileDate","formatFileSize","getCategoryColor","getCategoryIcon","getFileActions","getFileCategory","getFileIconColor","getFileIconName","getFileIconProps","getMimeTypeFromFileName","getPreviewUrl","getSizeMultiplier","isAudioFile","isDocumentFile","isFileSizeInRange","isGoogleWorkspaceFile","isImageFile","isShortcutFile","isValidFolderId","isVideoFile","normalizeFileSize","renderFileIcon","bytes","size","b","parseInt","isNaN","units","i","Math","floor","log","pow","toFixed","undefined","sizeStr","toString","trim","parsedSize","unit","fileSize","minSize","maxSize","normalizedFileSize","multiplier","minBytes","maxBytes","Number","MAX_SAFE_INTEGER","mimeType","fileName","iconMap","extension","split","pop","toLowerCase","extensionMap","js","ts","jsx","tsx","vue","svelte","py","java","kotlin","kt","scala","cpp","cc","cxx","c","h","hpp","cs","php","rb","go","rs","swift","sh","bash","zsh","fish","bat","cmd","ps1","pl","perl","r","lua","dart","elm","ex","exs","clj","cljs","hs","ml","fs","nim","json","json5","jsonc","xml","yaml","yml","toml","ini","conf","config","env","properties","gradle","cmake","makefile","dockerfile","gitignore","editorconfig","eslintrc","md","markdown","mdown","mkd","readme","txt","doc","docx","rtf","odt","rar","zip","tar","gz","bz2","xz","dmg","iso","deb","rpm","pkg","msi","psd","psb","ai","eps","sketch","fig","figma","xd","indd","idml","xcf","ttf","otf","woff","woff2","eot","epub","mobi","azw","azw3","fb2","stl","obj","dwg","dxf","step","iges","cr2","crw","nef","dng","arw","orf","rw2","raw","heic","heif","avif","jxl","apk","ipa","app","dll","so","dylib","exe","com","scr","vdi","vmdk","vhd","vhdx","qcow2","cab","lha","lzh","ace","arj","torrent","colorMap","extensionColorMap","html","css","scss","sass","startsWith","input","cleanInput","includes","length","urlPatterns","pattern","match","id","test","documentTypes","fileId","file","name","createdTime","modifiedTime","webViewLink","webContentLink","thumbnailLink","parents","owners","map","owner","displayName","emailAddress","photoLink","shared","starred","trashed","ownedByMe","viewedByMeTime","viewedByMe","capabilities","canCopy","canDelete","canDownload","canEdit","canRename","canShare","canTrash","canUntrash","canMoveItemWithinDrive","canMoveItemOutOfDrive","canAddChildren","canListChildren","canRemoveChildren","folder","options","conditions","push","replace","parentId","join","dateString","date","Date","now","diffTime","abs","getTime","diffDays","ceil","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","weeks","months","toLocaleDateString","year","month","day","mimeTypes","pdf","xls","xlsx","ppt","pptx","jpg","jpeg","png","gif","svg","mp4","avi","mov","mp3","wav","fileInfo","itemType","isFolder","Boolean","canMove","canExport","some","type","timezone","showRelative","diffInHours","hour","minute","iconName","colorClass","category","categoryIconMap","document","spreadsheet","presentation","image","video","audio","archive","code","text","design","database","shortcut","other","categoryColorMap","sizeMap","sm","lg","xl","sizeClass","className"],"sources":["/home/runner/workspace/src/lib/google-drive/utils.ts"],"sourcesContent":["import { drive_v3 } from 'googleapis'\n\nimport { DriveFile, DriveFolder } from './types'\n\nexport function formatFileSize(bytes: string | number): string {\n  const size = typeof bytes === 'string' ? parseInt(bytes, 10) : bytes\n\n  if (isNaN(size) || size === 0) return '0 B'\n\n  const units = ['B', 'KB', 'MB', 'GB', 'TB']\n  const i = Math.floor(Math.log(size) / Math.log(1024))\n\n  return `${(size / Math.pow(1024, i)).toFixed(1)} ${units[i]}`\n}\n\n// File size utilities\nexport function normalizeFileSize(size: any): number {\n  if (size === null || size === undefined || size === '' || size === '-') return 0\n  if (!size && size !== 0) return 0\n\n  const sizeStr = size.toString().trim()\n  if (sizeStr === '-' || sizeStr === '' || sizeStr === 'undefined' || sizeStr === 'null') return 0\n\n  const parsedSize = parseInt(sizeStr)\n  return isNaN(parsedSize) || parsedSize < 0 ? 0 : parsedSize\n}\n\nexport function getSizeMultiplier(unit: 'B' | 'KB' | 'MB' | 'GB'): number {\n  switch (unit) {\n    case 'B':\n      return 1\n    case 'KB':\n      return 1024\n    case 'MB':\n      return 1024 * 1024\n    case 'GB':\n      return 1024 * 1024 * 1024\n    default:\n      return 1\n  }\n}\n\nexport function isFileSizeInRange(\n  fileSize: any,\n  minSize?: number,\n  maxSize?: number,\n  unit: 'B' | 'KB' | 'MB' | 'GB' = 'MB',\n): boolean {\n  const normalizedFileSize = normalizeFileSize(fileSize)\n  const multiplier = getSizeMultiplier(unit)\n  const minBytes = minSize ? minSize * multiplier : 0\n  const maxBytes = maxSize ? maxSize * multiplier : Number.MAX_SAFE_INTEGER\n  return normalizedFileSize >= minBytes && normalizedFileSize <= maxBytes\n}\n\nexport function getFileIconName(mimeType: string, fileName?: string): string {\n  const iconMap: Record<string, string> = {\n    // Google Workspace Files\n    'application/vnd.google-apps.folder': 'Folder',\n    'application/vnd.google-apps.document': 'FileText',\n    'application/vnd.google-apps.spreadsheet': 'FileSpreadsheet',\n    'application/vnd.google-apps.presentation': 'Presentation',\n    'application/vnd.google-apps.form': 'FileCheck',\n    'application/vnd.google-apps.drawing': 'Palette',\n    'application/vnd.google-apps.map': 'MapPin',\n    'application/vnd.google-apps.site': 'Globe',\n    'application/vnd.google-apps.script': 'FileCode',\n    'application/vnd.google-apps.shortcut': 'Link',\n\n    // PDF and Documents\n    'application/pdf': 'BookOpen',\n    'text/plain': 'FileText',\n    'text/markdown': 'FileText',\n    'application/msword': 'FileText',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'FileText',\n    'application/rtf': 'FileText',\n\n    // Spreadsheets\n    'application/vnd.ms-excel': 'FileSpreadsheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'FileSpreadsheet',\n    'text/csv': 'FileSpreadsheet',\n\n    // Presentations\n    'application/vnd.ms-powerpoint': 'Presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'Presentation',\n\n    // Images\n    'image/jpeg': 'FileImage',\n    'image/jpg': 'FileImage',\n    'image/png': 'FileImage',\n    'image/gif': 'FileImage',\n    'image/svg+xml': 'FileImage',\n    'image/webp': 'FileImage',\n    'image/bmp': 'FileImage',\n    'image/tiff': 'FileImage',\n    'image/ico': 'FileImage',\n\n    // Videos\n    'video/mp4': 'FileVideo',\n    'video/avi': 'FileVideo',\n    'video/mov': 'FileVideo',\n    'video/wmv': 'FileVideo',\n    'video/webm': 'FileVideo',\n    'video/mkv': 'FileVideo',\n    'video/x-matroska': 'FileVideo',\n    'video/flv': 'FileVideo',\n    'video/x-flv': 'FileVideo',\n    'video/quicktime': 'FileVideo',\n    'video/3gpp': 'FileVideo',\n    'video/3gpp2': 'FileVideo',\n    'video/x-msvideo': 'FileVideo',\n    'video/mp2t': 'FileVideo',\n    'video/mpeg': 'FileVideo',\n    'video/x-ms-wmv': 'FileVideo',\n    'video/x-ms-asf': 'FileVideo',\n    'video/ogg': 'FileVideo',\n    'video/divx': 'FileVideo',\n    'video/x-m4v': 'FileVideo',\n\n    // Audio\n    'audio/mp3': 'Music',\n    'audio/wav': 'Music',\n    'audio/x-wav': 'Music',\n    'audio/m4a': 'Music',\n    'audio/flac': 'Music',\n    'audio/x-flac': 'Music',\n    'audio/aac': 'Music',\n    'audio/ogg': 'Music',\n    'audio/vorbis': 'Music',\n    'audio/wma': 'Music',\n    'audio/x-ms-wma': 'Music',\n    'audio/opus': 'Music',\n    'audio/mpeg': 'Music',\n    'audio/mp4': 'Music',\n    'audio/x-m4a': 'Music',\n    'audio/ac3': 'Music',\n    'audio/x-aiff': 'Music',\n    'audio/aiff': 'Music',\n    'audio/midi': 'Music',\n    'audio/x-midi': 'Music',\n    'audio/amr': 'Music',\n    'audio/3gpp': 'Music',\n\n    // Archives\n    'application/zip': 'Archive',\n    'application/x-zip-compressed': 'Archive',\n    'application/x-rar-compressed': 'Archive',\n    'application/x-rar': 'Archive',\n    'application/rar': 'Archive',\n    'application/vnd.rar': 'Archive',\n    'application/x-7z-compressed': 'Archive',\n    'application/x-7zip': 'Archive',\n    'application/gzip': 'Archive',\n    'application/x-gzip': 'Archive',\n    'application/x-tar': 'Archive',\n    'application/x-compressed': 'Archive',\n    'application/x-bzip2': 'Archive',\n    'application/x-bzip': 'Archive',\n    'application/x-lzh': 'Archive',\n    'application/x-ace': 'Archive',\n    'application/x-cab': 'Archive',\n    'application/x-iso9660-image': 'Archive',\n    'application/x-stuffit': 'Archive',\n    'application/x-apple-diskimage-old': 'Archive',\n\n    // Code files\n    'text/javascript': 'FileCode',\n    'application/javascript': 'FileCode',\n    'application/x-javascript': 'FileCode',\n    'application/json': 'FileCode',\n    'application/ld+json': 'FileCode',\n    'text/html': 'FileCode',\n    'application/xhtml+xml': 'FileCode',\n    'text/css': 'FileCode',\n    'text/xml': 'FileCode',\n    'application/xml': 'FileCode',\n    'text/typescript': 'FileCode',\n    'application/typescript': 'FileCode',\n    'text/x-python': 'FileCode',\n    'application/x-python-code': 'FileCode',\n    'text/x-python-script': 'FileCode',\n    'text/x-java-source': 'FileCode',\n    'application/java-archive': 'Package',\n    'text/x-c': 'FileCode',\n    'text/x-c++': 'FileCode',\n    'text/x-csharp': 'FileCode',\n    'text/x-php': 'FileCode',\n    'application/x-php': 'FileCode',\n    'text/x-ruby': 'FileCode',\n    'application/x-ruby': 'FileCode',\n    'text/x-go': 'FileCode',\n    'text/x-rust': 'FileCode',\n    'text/x-swift': 'FileCode',\n    'text/x-kotlin': 'FileCode',\n    'text/x-scala': 'FileCode',\n    'text/x-perl': 'FileCode',\n    'application/x-perl': 'FileCode',\n    'application/x-sh': 'Terminal',\n    'text/x-shellscript': 'Terminal',\n    'application/x-bash': 'Terminal',\n    'text/x-batch': 'Terminal',\n    'application/x-powershell': 'Terminal',\n    'text/x-dockerfile': 'Box',\n    'text/x-makefile': 'Settings',\n    'text/x-yaml': 'Settings',\n    'application/x-yaml': 'Settings',\n    'text/yaml': 'Settings',\n    'application/yaml': 'Settings',\n    'text/x-toml': 'Settings',\n    'application/toml': 'Settings',\n    'text/x-ini': 'Settings',\n    'text/x-properties': 'Settings',\n    'text/x-config': 'Settings',\n\n    // Database\n    'application/x-sqlite3': 'Database',\n    'application/sql': 'Database',\n    'text/x-sql': 'Database',\n\n    // Design files\n    'application/x-photoshop': 'Palette',\n    'image/vnd.adobe.photoshop': 'Palette',\n    'image/psd': 'Palette',\n    'application/postscript': 'Palette',\n    'application/illustrator': 'Palette',\n    'image/vnd.adobe.illustrator': 'Palette',\n    'application/x-indesign': 'Palette',\n    'image/x-xcf': 'Palette',\n    'application/x-sketch': 'Palette',\n    'application/figma': 'Palette',\n    'image/x-canon-cr2': 'Palette',\n    'image/x-canon-crw': 'Palette',\n    'image/x-nikon-nef': 'Palette',\n    'image/x-adobe-dng': 'Palette',\n    'image/x-sony-arw': 'Palette',\n\n    // Font files\n    'font/ttf': 'FileText',\n    'font/otf': 'FileText',\n    'font/woff': 'FileText',\n    'font/woff2': 'FileText',\n    'application/font-woff': 'FileText',\n    'application/font-woff2': 'FileText',\n    'application/x-font-ttf': 'FileText',\n    'application/x-font-otf': 'FileText',\n    'application/vnd.ms-fontobject': 'FileText',\n\n    // E-book formats\n    'application/epub+zip': 'BookOpen',\n    'application/x-mobipocket-ebook': 'BookOpen',\n    'application/x-kindle': 'BookOpen',\n    'application/vnd.amazon.ebook': 'BookOpen',\n    'text/x-fb2+xml': 'BookOpen',\n\n    // CAD and 3D files\n    'application/sla': 'FileImage',\n    'model/stl': 'FileImage',\n    'model/obj': 'FileImage',\n    'model/3mf': 'FileImage',\n    'application/x-autocad': 'FileImage',\n    'image/vnd.dwg': 'FileImage',\n    'image/vnd.dxf': 'FileImage',\n\n    // Executable files\n    'application/x-msdownload': 'File',\n    'application/x-executable': 'File',\n    'application/x-mach-binary': 'File',\n    'application/x-deb': 'Archive',\n    'application/x-rpm': 'Archive',\n    'application/vnd.microsoft.portable-executable': 'File',\n    'application/x-apple-diskimage-dmg': 'Archive',\n\n    // Office formats (additional)\n    'application/vnd.oasis.opendocument.text': 'FileText',\n    'application/vnd.oasis.opendocument.spreadsheet': 'FileSpreadsheet',\n    'application/vnd.oasis.opendocument.presentation': 'Presentation',\n    'application/vnd.sun.xml.writer': 'FileText',\n    'application/vnd.sun.xml.calc': 'FileSpreadsheet',\n    'application/vnd.sun.xml.impress': 'Presentation',\n\n    // Media formats (additional)\n    'image/heic': 'FileImage',\n    'image/heif': 'FileImage',\n    'image/avif': 'FileImage',\n    'image/jxl': 'FileImage',\n    'image/raw': 'Camera',\n    'audio/x-ms-wax': 'Music',\n    'audio/x-realaudio': 'Music',\n    'video/x-f4v': 'FileVideo',\n    'video/x-ms-vob': 'FileVideo',\n    'application/vnd.rn-realmedia': 'FileVideo',\n\n    // Mobile app formats\n    'application/vnd.android.package-archive': 'Smartphone',\n    'application/x-ios-app': 'Smartphone',\n    'application/vnd.apple.installer+xml': 'Smartphone',\n\n    // System and executable\n    'application/x-sharedlib': 'HardDrive',\n    'application/x-object': 'HardDrive',\n    'application/x-core': 'HardDrive',\n    'application/x-ms-dos-executable': 'Monitor',\n\n    // Virtual machine and disk images\n    'application/x-virtualbox-vdi': 'HardDrive',\n    'application/x-vmware-vmdk': 'HardDrive',\n    'application/x-qemu-disk': 'HardDrive',\n\n    // Others\n    'application/octet-stream': 'File',\n    'text/calendar': 'FileText',\n    'text/vcard': 'FileText',\n    'application/x-bittorrent': 'Package',\n    'message/rfc822': 'FileText',\n    'application/vnd.ms-cab-compressed': 'Archive',\n    'application/x-lha': 'Archive',\n    'application/x-lzma': 'Archive',\n    'application/x-xz': 'Archive',\n  }\n\n  // Check by MIME type first\n  if (iconMap[mimeType]) {\n    return iconMap[mimeType]\n  }\n\n  // Fallback: check by file extension if fileName is provided\n  if (fileName) {\n    const extension = fileName.split('.').pop()?.toLowerCase()\n    const extensionMap: Record<string, string> = {\n      // Code files\n      js: 'FileCode',\n      ts: 'FileCode',\n      jsx: 'FileCode',\n      tsx: 'FileCode',\n      vue: 'FileCode',\n      svelte: 'FileCode',\n      py: 'FileCode',\n      java: 'FileCode',\n      kotlin: 'FileCode',\n      kt: 'FileCode',\n      scala: 'FileCode',\n      cpp: 'FileCode',\n      cc: 'FileCode',\n      cxx: 'FileCode',\n      c: 'FileCode',\n      h: 'FileCode',\n      hpp: 'FileCode',\n      cs: 'FileCode',\n      php: 'FileCode',\n      rb: 'FileCode',\n      go: 'FileCode',\n      rs: 'FileCode',\n      swift: 'FileCode',\n      sh: 'FileCode',\n      bash: 'FileCode',\n      zsh: 'FileCode',\n      fish: 'FileCode',\n      bat: 'FileCode',\n      cmd: 'FileCode',\n      ps1: 'FileCode',\n      pl: 'FileCode',\n      perl: 'FileCode',\n      r: 'FileCode',\n      lua: 'FileCode',\n      dart: 'FileCode',\n      elm: 'FileCode',\n      ex: 'FileCode',\n      exs: 'FileCode',\n      clj: 'FileCode',\n      cljs: 'FileCode',\n      hs: 'FileCode',\n      ml: 'FileCode',\n      fs: 'FileCode',\n      nim: 'FileCode',\n\n      // Config files\n      json: 'FileCode',\n      json5: 'FileCode',\n      jsonc: 'FileCode',\n      xml: 'FileCode',\n      yaml: 'FileCode',\n      yml: 'FileCode',\n      toml: 'FileCode',\n      ini: 'FileCode',\n      conf: 'FileCode',\n      config: 'FileCode',\n      env: 'FileCode',\n      properties: 'FileCode',\n      gradle: 'FileCode',\n      cmake: 'FileCode',\n      makefile: 'FileCode',\n      dockerfile: 'FileCode',\n      gitignore: 'FileCode',\n      editorconfig: 'FileCode',\n      eslintrc: 'FileCode',\n\n      // Documentation\n      md: 'FileText',\n      markdown: 'FileText',\n      mdown: 'FileText',\n      mkd: 'FileText',\n      readme: 'FileText',\n      txt: 'FileText',\n      doc: 'FileText',\n      docx: 'FileText',\n      rtf: 'FileText',\n      odt: 'FileText',\n\n      // Archives by extension\n      rar: 'Archive',\n      zip: 'Archive',\n      '7z': 'Archive',\n      tar: 'Archive',\n      gz: 'Archive',\n      bz2: 'Archive',\n      xz: 'Archive',\n      dmg: 'Archive',\n      iso: 'Archive',\n      deb: 'Archive',\n      rpm: 'Archive',\n      pkg: 'Archive',\n      msi: 'Archive',\n\n      // Design\n      psd: 'Palette',\n      psb: 'Palette',\n      ai: 'Palette',\n      eps: 'Palette',\n      sketch: 'Palette',\n      fig: 'Palette',\n      figma: 'Palette',\n      xd: 'Palette',\n      indd: 'Palette',\n      idml: 'Palette',\n      xcf: 'Palette',\n\n      // Fonts\n      ttf: 'FileText',\n      otf: 'FileText',\n      woff: 'FileText',\n      woff2: 'FileText',\n      eot: 'FileText',\n\n      // E-books\n      epub: 'BookOpen',\n      mobi: 'BookOpen',\n      azw: 'BookOpen',\n      azw3: 'BookOpen',\n      fb2: 'BookOpen',\n\n      // 3D and CAD\n      stl: 'FileImage',\n      obj: 'FileImage',\n      '3mf': 'FileImage',\n      dwg: 'FileImage',\n      dxf: 'FileImage',\n      step: 'FileImage',\n      iges: 'FileImage',\n\n      // Raw image formats\n      cr2: 'Camera',\n      crw: 'Camera',\n      nef: 'Camera',\n      dng: 'Camera',\n      arw: 'Camera',\n      orf: 'Camera',\n      rw2: 'Camera',\n      raw: 'Camera',\n      heic: 'FileImage',\n      heif: 'FileImage',\n      avif: 'FileImage',\n      jxl: 'FileImage',\n\n      // Mobile app formats\n      apk: 'Smartphone',\n      ipa: 'Smartphone',\n      app: 'Smartphone',\n\n      // System files\n      dll: 'HardDrive',\n      so: 'HardDrive',\n      dylib: 'HardDrive',\n      exe: 'Monitor',\n      com: 'Monitor',\n      scr: 'Monitor',\n\n      // Virtual machine formats\n      vdi: 'HardDrive',\n      vmdk: 'HardDrive',\n      vhd: 'HardDrive',\n      vhdx: 'HardDrive',\n      qcow2: 'HardDrive',\n\n      // Additional archives\n      cab: 'Archive',\n      lha: 'Archive',\n      lzh: 'Archive',\n      ace: 'Archive',\n      arj: 'Archive',\n\n      // Torrent and download files\n      torrent: 'Package',\n    }\n\n    if (extension && extensionMap[extension]) {\n      return extensionMap[extension]\n    }\n  }\n\n  return 'File'\n}\n\nexport function getFileIconColor(mimeType: string, fileName?: string): string {\n  const colorMap: Record<string, string> = {\n    // Google Workspace Files\n    'application/vnd.google-apps.folder': 'text-blue-600 dark:text-blue-400',\n    'application/vnd.google-apps.document': 'text-blue-500 dark:text-blue-400',\n    'application/vnd.google-apps.spreadsheet': 'text-green-600 dark:text-green-400',\n    'application/vnd.google-apps.presentation': 'text-orange-600 dark:text-orange-400',\n    'application/vnd.google-apps.form': 'text-purple-600 dark:text-purple-400',\n    'application/vnd.google-apps.drawing': 'text-pink-600 dark:text-pink-400',\n    'application/vnd.google-apps.map': 'text-emerald-600 dark:text-emerald-400',\n    'application/vnd.google-apps.site': 'text-cyan-600 dark:text-cyan-400',\n    'application/vnd.google-apps.script': 'text-amber-600 dark:text-amber-400',\n    'application/vnd.google-apps.shortcut': 'text-slate-600 dark:text-slate-400',\n\n    // PDF and Documents\n    'application/pdf': 'text-red-600 dark:text-red-400',\n    'text/plain': 'text-gray-600 dark:text-gray-400',\n    'text/markdown': 'text-slate-600 dark:text-slate-400',\n    'application/msword': 'text-blue-600 dark:text-blue-400',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'text-blue-600 dark:text-blue-400',\n    'application/rtf': 'text-blue-600 dark:text-blue-400',\n\n    // Spreadsheets\n    'application/vnd.ms-excel': 'text-green-600 dark:text-green-400',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'text-green-600 dark:text-green-400',\n    'text/csv': 'text-green-600 dark:text-green-400',\n\n    // Presentations\n    'application/vnd.ms-powerpoint': 'text-orange-600 dark:text-orange-400',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'text-orange-600 dark:text-orange-400',\n\n    // Images\n    'image/jpeg': 'text-purple-600 dark:text-purple-400',\n    'image/jpg': 'text-purple-600 dark:text-purple-400',\n    'image/png': 'text-purple-600 dark:text-purple-400',\n    'image/gif': 'text-purple-600 dark:text-purple-400',\n    'image/svg+xml': 'text-purple-600 dark:text-purple-400',\n    'image/webp': 'text-purple-600 dark:text-purple-400',\n    'image/bmp': 'text-purple-600 dark:text-purple-400',\n    'image/tiff': 'text-purple-600 dark:text-purple-400',\n    'image/ico': 'text-purple-600 dark:text-purple-400',\n\n    // Videos\n    'video/mp4': 'text-red-600 dark:text-red-400',\n    'video/avi': 'text-red-600 dark:text-red-400',\n    'video/mov': 'text-red-600 dark:text-red-400',\n    'video/wmv': 'text-red-600 dark:text-red-400',\n    'video/webm': 'text-red-600 dark:text-red-400',\n    'video/mkv': 'text-red-600 dark:text-red-400',\n    'video/x-matroska': 'text-red-600 dark:text-red-400',\n    'video/flv': 'text-red-600 dark:text-red-400',\n    'video/x-flv': 'text-red-600 dark:text-red-400',\n    'video/quicktime': 'text-red-600 dark:text-red-400',\n    'video/3gpp': 'text-red-600 dark:text-red-400',\n    'video/3gpp2': 'text-red-600 dark:text-red-400',\n    'video/x-msvideo': 'text-red-600 dark:text-red-400',\n    'video/mp2t': 'text-red-600 dark:text-red-400',\n    'video/mpeg': 'text-red-600 dark:text-red-400',\n    'video/x-ms-wmv': 'text-red-600 dark:text-red-400',\n    'video/x-ms-asf': 'text-red-600 dark:text-red-400',\n    'video/ogg': 'text-red-600 dark:text-red-400',\n    'video/divx': 'text-red-600 dark:text-red-400',\n    'video/x-m4v': 'text-red-600 dark:text-red-400',\n\n    // Audio\n    'audio/mp3': 'text-indigo-600 dark:text-indigo-400',\n    'audio/wav': 'text-indigo-600 dark:text-indigo-400',\n    'audio/x-wav': 'text-indigo-600 dark:text-indigo-400',\n    'audio/m4a': 'text-indigo-600 dark:text-indigo-400',\n    'audio/flac': 'text-indigo-600 dark:text-indigo-400',\n    'audio/x-flac': 'text-indigo-600 dark:text-indigo-400',\n    'audio/aac': 'text-indigo-600 dark:text-indigo-400',\n    'audio/ogg': 'text-indigo-600 dark:text-indigo-400',\n    'audio/vorbis': 'text-indigo-600 dark:text-indigo-400',\n    'audio/wma': 'text-indigo-600 dark:text-indigo-400',\n    'audio/x-ms-wma': 'text-indigo-600 dark:text-indigo-400',\n    'audio/opus': 'text-indigo-600 dark:text-indigo-400',\n    'audio/mpeg': 'text-indigo-600 dark:text-indigo-400',\n    'audio/mp4': 'text-indigo-600 dark:text-indigo-400',\n    'audio/x-m4a': 'text-indigo-600 dark:text-indigo-400',\n    'audio/ac3': 'text-indigo-600 dark:text-indigo-400',\n    'audio/x-aiff': 'text-indigo-600 dark:text-indigo-400',\n    'audio/aiff': 'text-indigo-600 dark:text-indigo-400',\n    'audio/midi': 'text-indigo-600 dark:text-indigo-400',\n    'audio/x-midi': 'text-indigo-600 dark:text-indigo-400',\n    'audio/amr': 'text-indigo-600 dark:text-indigo-400',\n    'audio/3gpp': 'text-indigo-600 dark:text-indigo-400',\n\n    // Archives\n    'application/zip': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-zip-compressed': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-rar-compressed': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-rar': 'text-yellow-600 dark:text-yellow-400',\n    'application/rar': 'text-yellow-600 dark:text-yellow-400',\n    'application/vnd.rar': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-7z-compressed': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-7zip': 'text-yellow-600 dark:text-yellow-400',\n    'application/gzip': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-gzip': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-tar': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-compressed': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-bzip2': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-bzip': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-lzh': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-ace': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-cab': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-iso9660-image': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-stuffit': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-apple-diskimage-old': 'text-yellow-600 dark:text-yellow-400',\n\n    // Code files - More specific colors\n    'text/javascript': 'text-yellow-500 dark:text-yellow-400',\n    'application/json': 'text-amber-500 dark:text-amber-400',\n    'text/html': 'text-orange-500 dark:text-orange-400',\n    'text/css': 'text-sky-500 dark:text-sky-400',\n    'text/xml': 'text-emerald-500 dark:text-emerald-400',\n    'application/javascript': 'text-yellow-500 dark:text-yellow-400',\n    'text/typescript': 'text-blue-500 dark:text-blue-400',\n    'application/typescript': 'text-blue-500 dark:text-blue-400',\n    'text/x-python': 'text-green-500 dark:text-green-400',\n    'application/x-python-code': 'text-green-500 dark:text-green-400',\n    'text/x-java-source': 'text-red-500 dark:text-red-400',\n    'text/x-c': 'text-slate-500 dark:text-slate-400',\n    'text/x-c++': 'text-slate-500 dark:text-slate-400',\n    'application/x-sh': 'text-gray-500 dark:text-gray-400',\n    'text/x-shellscript': 'text-gray-500 dark:text-gray-400',\n\n    // Database\n    'application/x-sqlite3': 'text-slate-600 dark:text-slate-400',\n    'application/sql': 'text-slate-600 dark:text-slate-400',\n    'text/x-sql': 'text-slate-600 dark:text-slate-400',\n\n    // Design files\n    'application/x-photoshop': 'text-blue-600 dark:text-blue-400',\n    'image/vnd.adobe.photoshop': 'text-blue-600 dark:text-blue-400',\n    'image/psd': 'text-blue-600 dark:text-blue-400',\n    'application/postscript': 'text-pink-600 dark:text-pink-600 dark:text-pink-400',\n    'application/illustrator': 'text-orange-600 dark:text-orange-400',\n    'image/vnd.adobe.illustrator': 'text-orange-600 dark:text-orange-400',\n    'application/x-indesign': 'text-purple-600 dark:text-purple-400',\n    'image/x-xcf': 'text-cyan-600 dark:text-cyan-400',\n    'application/x-sketch': 'text-pink-600 dark:text-pink-400',\n    'application/figma': 'text-violet-600 dark:text-violet-400',\n    'image/x-canon-cr2': 'text-emerald-600 dark:text-emerald-400',\n    'image/x-canon-crw': 'text-emerald-600 dark:text-emerald-400',\n    'image/x-nikon-nef': 'text-emerald-600 dark:text-emerald-400',\n    'image/x-adobe-dng': 'text-emerald-600 dark:text-emerald-400',\n    'image/x-sony-arw': 'text-emerald-600 dark:text-emerald-400',\n\n    // Font files\n    'font/ttf': 'text-slate-600 dark:text-slate-400',\n    'font/otf': 'text-slate-600 dark:text-slate-400',\n    'font/woff': 'text-slate-600 dark:text-slate-400',\n    'font/woff2': 'text-slate-600 dark:text-slate-400',\n    'application/font-woff': 'text-slate-600 dark:text-slate-400',\n    'application/font-woff2': 'text-slate-600 dark:text-slate-400',\n    'application/x-font-ttf': 'text-slate-600 dark:text-slate-400',\n    'application/x-font-otf': 'text-slate-600 dark:text-slate-400',\n    'application/vnd.ms-fontobject': 'text-slate-600 dark:text-slate-400',\n\n    // E-book formats\n    'application/epub+zip': 'text-purple-600 dark:text-purple-400',\n    'application/x-mobipocket-ebook': 'text-purple-600 dark:text-purple-400',\n    'application/x-kindle': 'text-purple-600 dark:text-purple-400',\n    'application/vnd.amazon.ebook': 'text-purple-600 dark:text-purple-400',\n    'text/x-fb2+xml': 'text-purple-600 dark:text-purple-400',\n\n    // CAD and 3D files\n    'application/sla': 'text-cyan-600 dark:text-cyan-400',\n    'model/stl': 'text-cyan-600 dark:text-cyan-400',\n    'model/obj': 'text-cyan-600 dark:text-cyan-400',\n    'model/3mf': 'text-cyan-600 dark:text-cyan-400',\n    'application/x-autocad': 'text-cyan-600 dark:text-cyan-400',\n    'image/vnd.dwg': 'text-cyan-600 dark:text-cyan-400',\n    'image/vnd.dxf': 'text-cyan-600 dark:text-cyan-400',\n\n    // Executable files\n    'application/x-msdownload': 'text-gray-600 dark:text-gray-400',\n    'application/x-executable': 'text-gray-600 dark:text-gray-400',\n    'application/x-mach-binary': 'text-gray-600 dark:text-gray-400',\n    'application/x-deb': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-rpm': 'text-yellow-600 dark:text-yellow-400',\n    'application/vnd.microsoft.portable-executable': 'text-gray-600 dark:text-gray-400',\n\n    // Office formats (additional)\n    'application/vnd.oasis.opendocument.text': 'text-blue-600 dark:text-blue-400',\n    'application/vnd.oasis.opendocument.spreadsheet': 'text-green-600 dark:text-green-400',\n    'application/vnd.oasis.opendocument.presentation': 'text-orange-600 dark:text-orange-400',\n    'application/vnd.sun.xml.writer': 'text-blue-600 dark:text-blue-400',\n    'application/vnd.sun.xml.calc': 'text-green-600 dark:text-green-400',\n    'application/vnd.sun.xml.impress': 'text-orange-600 dark:text-orange-400',\n\n    // Media formats (additional)\n    'image/heic': 'text-purple-600 dark:text-purple-400',\n    'image/heif': 'text-purple-600 dark:text-purple-400',\n    'image/avif': 'text-purple-600 dark:text-purple-400',\n    'image/jxl': 'text-purple-600 dark:text-purple-400',\n    'image/raw': 'text-emerald-600 dark:text-emerald-400',\n    'audio/x-ms-wax': 'text-indigo-600 dark:text-indigo-400',\n    'audio/x-realaudio': 'text-indigo-600 dark:text-indigo-400',\n    'video/x-f4v': 'text-red-600 dark:text-red-400',\n    'video/x-ms-vob': 'text-red-600 dark:text-red-400',\n    'application/vnd.rn-realmedia': 'text-red-600 dark:text-red-400',\n\n    // Mobile app formats\n    'application/vnd.android.package-archive': 'text-green-600 dark:text-green-400',\n    'application/x-ios-app': 'text-blue-600 dark:text-blue-400',\n    'application/vnd.apple.installer+xml': 'text-blue-600 dark:text-blue-400',\n\n    // System and executable\n    'application/x-sharedlib': 'text-gray-600 dark:text-gray-400',\n    'application/x-object': 'text-gray-600 dark:text-gray-400',\n    'application/x-core': 'text-gray-600 dark:text-gray-400',\n    'application/x-ms-dos-executable': 'text-gray-600 dark:text-gray-400',\n\n    // Virtual machine and disk images\n    'application/x-virtualbox-vdi': 'text-slate-600 dark:text-slate-400',\n    'application/x-vmware-vmdk': 'text-slate-600 dark:text-slate-400',\n    'application/x-qemu-disk': 'text-slate-600 dark:text-slate-400',\n\n    // Others\n    'text/calendar': 'text-green-600 dark:text-green-400',\n    'text/vcard': 'text-blue-600 dark:text-blue-400',\n    'application/x-bittorrent': 'text-red-600 dark:text-red-400',\n    'message/rfc822': 'text-slate-600 dark:text-slate-400',\n    'application/vnd.ms-cab-compressed': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-lha': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-lzma': 'text-yellow-600 dark:text-yellow-400',\n    'application/x-xz': 'text-yellow-600 dark:text-yellow-400',\n  }\n\n  // Check by MIME type first\n  if (colorMap[mimeType]) {\n    return colorMap[mimeType]\n  }\n\n  // Fallback: check by file extension if fileName is provided\n  if (fileName) {\n    const extension = fileName.split('.').pop()?.toLowerCase()\n    const extensionColorMap: Record<string, string> = {\n      // Programming languages with specific colors\n      js: 'text-yellow-500 dark:text-yellow-400',\n      ts: 'text-blue-500 dark:text-blue-400',\n      jsx: 'text-cyan-500 dark:text-cyan-400',\n      tsx: 'text-cyan-500 dark:text-cyan-400',\n      vue: 'text-green-500 dark:text-green-400',\n      svelte: 'text-orange-500 dark:text-orange-400',\n      py: 'text-green-500 dark:text-green-400',\n      java: 'text-red-500 dark:text-red-400',\n      kotlin: 'text-purple-500 dark:text-purple-400',\n      kt: 'text-purple-500 dark:text-purple-400',\n      scala: 'text-red-500 dark:text-red-400',\n      cpp: 'text-slate-500 dark:text-slate-400',\n      cc: 'text-slate-500 dark:text-slate-400',\n      cxx: 'text-slate-500 dark:text-slate-400',\n      c: 'text-slate-500 dark:text-slate-400',\n      h: 'text-slate-500 dark:text-slate-400',\n      hpp: 'text-slate-500 dark:text-slate-400',\n      cs: 'text-purple-500 dark:text-purple-400',\n      php: 'text-violet-500 dark:text-violet-400',\n      rb: 'text-red-500 dark:text-red-400',\n      go: 'text-cyan-500 dark:text-cyan-400',\n      rs: 'text-orange-500 dark:text-orange-400',\n      swift: 'text-orange-500 dark:text-orange-400',\n      sh: 'text-gray-500 dark:text-gray-400',\n      bash: 'text-gray-500 dark:text-gray-400',\n      zsh: 'text-gray-500 dark:text-gray-400',\n      fish: 'text-blue-500 dark:text-blue-400',\n      bat: 'text-gray-500 dark:text-gray-400',\n      cmd: 'text-gray-500 dark:text-gray-400',\n      ps1: 'text-blue-500 dark:text-blue-400',\n      pl: 'text-blue-500 dark:text-blue-400',\n      perl: 'text-blue-500 dark:text-blue-400',\n      r: 'text-blue-500 dark:text-blue-400',\n      lua: 'text-blue-500 dark:text-blue-400',\n      dart: 'text-blue-500 dark:text-blue-400',\n      elm: 'text-green-500 dark:text-green-400',\n      ex: 'text-purple-500 dark:text-purple-400',\n      exs: 'text-purple-500 dark:text-purple-400',\n      clj: 'text-green-500 dark:text-green-400',\n      cljs: 'text-green-500 dark:text-green-400',\n      hs: 'text-purple-500 dark:text-purple-400',\n      ml: 'text-orange-500 dark:text-orange-400',\n      fs: 'text-blue-500 dark:text-blue-400',\n      nim: 'text-yellow-500 dark:text-yellow-400',\n\n      // Archives\n      rar: 'text-yellow-600 dark:text-yellow-400',\n      zip: 'text-yellow-600 dark:text-yellow-400',\n      '7z': 'text-yellow-600 dark:text-yellow-400',\n      tar: 'text-yellow-600 dark:text-yellow-400',\n      gz: 'text-yellow-600 dark:text-yellow-400',\n      bz2: 'text-yellow-600 dark:text-yellow-400',\n      xz: 'text-yellow-600 dark:text-yellow-400',\n      dmg: 'text-yellow-600 dark:text-yellow-400',\n      iso: 'text-yellow-600 dark:text-yellow-400',\n      deb: 'text-yellow-600 dark:text-yellow-400',\n      rpm: 'text-yellow-600 dark:text-yellow-400',\n      pkg: 'text-yellow-600 dark:text-yellow-400',\n      msi: 'text-yellow-600 dark:text-yellow-400',\n\n      // Design files\n      psd: 'text-blue-600 dark:text-blue-400',\n      psb: 'text-blue-600 dark:text-blue-400',\n      ai: 'text-orange-600 dark:text-orange-400',\n      eps: 'text-orange-600 dark:text-orange-400',\n      sketch: 'text-pink-600 dark:text-pink-400',\n      fig: 'text-violet-600 dark:text-violet-400',\n      figma: 'text-violet-600 dark:text-violet-400',\n      xd: 'text-purple-600 dark:text-purple-400',\n      indd: 'text-purple-600 dark:text-purple-400',\n      idml: 'text-purple-600 dark:text-purple-400',\n      xcf: 'text-cyan-600 dark:text-cyan-400',\n\n      // Fonts\n      ttf: 'text-slate-600 dark:text-slate-400',\n      otf: 'text-slate-600 dark:text-slate-400',\n      woff: 'text-slate-600 dark:text-slate-400',\n      woff2: 'text-slate-600 dark:text-slate-400',\n      eot: 'text-slate-600 dark:text-slate-400',\n\n      // E-books\n      epub: 'text-purple-600 dark:text-purple-400',\n      mobi: 'text-purple-600 dark:text-purple-400',\n      azw: 'text-purple-600 dark:text-purple-400',\n      azw3: 'text-purple-600 dark:text-purple-400',\n      fb2: 'text-purple-600 dark:text-purple-400',\n\n      // 3D and CAD\n      stl: 'text-cyan-600 dark:text-cyan-400',\n      obj: 'text-cyan-600 dark:text-cyan-400',\n      '3mf': 'text-cyan-600 dark:text-cyan-400',\n      dwg: 'text-cyan-600 dark:text-cyan-400',\n      dxf: 'text-cyan-600 dark:text-cyan-400',\n      step: 'text-cyan-600 dark:text-cyan-400',\n      iges: 'text-cyan-600 dark:text-cyan-400',\n\n      // Raw image formats\n      cr2: 'text-emerald-600 dark:text-emerald-400',\n      crw: 'text-emerald-600 dark:text-emerald-400',\n      nef: 'text-emerald-600 dark:text-emerald-400',\n      dng: 'text-emerald-600 dark:text-emerald-400',\n      arw: 'text-emerald-600 dark:text-emerald-400',\n      orf: 'text-emerald-600 dark:text-emerald-400',\n      rw2: 'text-emerald-600 dark:text-emerald-400',\n      raw: 'text-emerald-600 dark:text-emerald-400',\n      heic: 'text-purple-600 dark:text-purple-400',\n      heif: 'text-purple-600 dark:text-purple-400',\n      avif: 'text-purple-600 dark:text-purple-400',\n      jxl: 'text-purple-600 dark:text-purple-400',\n\n      // Mobile app formats\n      apk: 'text-green-600 dark:text-green-400',\n      ipa: 'text-blue-600 dark:text-blue-400',\n      app: 'text-blue-600 dark:text-blue-400',\n\n      // System files\n      dll: 'text-gray-600 dark:text-gray-400',\n      so: 'text-gray-600 dark:text-gray-400',\n      dylib: 'text-gray-600 dark:text-gray-400',\n      exe: 'text-gray-600 dark:text-gray-400',\n      com: 'text-gray-600 dark:text-gray-400',\n      scr: 'text-gray-600 dark:text-gray-400',\n\n      // Virtual machine formats\n      vdi: 'text-slate-600 dark:text-slate-400',\n      vmdk: 'text-slate-600 dark:text-slate-400',\n      vhd: 'text-slate-600 dark:text-slate-400',\n      vhdx: 'text-slate-600 dark:text-slate-400',\n      qcow2: 'text-slate-600 dark:text-slate-400',\n\n      // Additional archives\n      cab: 'text-yellow-600 dark:text-yellow-400',\n      lha: 'text-yellow-600 dark:text-yellow-400',\n      lzh: 'text-yellow-600 dark:text-yellow-400',\n      ace: 'text-yellow-600 dark:text-yellow-400',\n      arj: 'text-yellow-600 dark:text-yellow-400',\n\n      // Torrent and download files\n      torrent: 'text-red-600 dark:text-red-400',\n\n      // Config and markup\n      json: 'text-amber-500 dark:text-amber-400',\n      xml: 'text-emerald-500 dark:text-emerald-400',\n      yaml: 'text-red-500 dark:text-red-400',\n      yml: 'text-red-500 dark:text-red-400',\n      toml: 'text-orange-500 dark:text-orange-400',\n      html: 'text-orange-500 dark:text-orange-400',\n      css: 'text-sky-500 dark:text-sky-400',\n      scss: 'text-pink-500 dark:text-pink-400',\n      sass: 'text-pink-500 dark:text-pink-400',\n      md: 'text-gray-600 dark:text-gray-400',\n    }\n\n    if (extension && extensionColorMap[extension]) {\n      return extensionColorMap[extension]\n    }\n  }\n\n  return 'text-gray-500 dark:text-gray-400'\n}\n\nexport function isGoogleWorkspaceFile(mimeType: string): boolean {\n  return mimeType.startsWith('application/vnd.google-apps.')\n}\n\n/**\n * Extract folder ID from Google Drive URL or return the input if it's already an ID\n * Supports formats:\n * - https://drive.google.com/drive/folders/1h7S-ebE1A5sEREQhawwWLVrqTZe47fez\n * - https://drive.google.com/drive/u/0/folders/1h7S-ebE1A5sEREQhawwWLVrqTZe47fez\n * - Direct folder ID: 1h7S-ebE1A5sEREQhawwWLVrqTZe47fez\n */\nexport function extractFolderIdFromUrl(input: string): string | null {\n  if (!input) return null\n\n  // Remove whitespace\n  const cleanInput = input.trim()\n\n  // If it's already a folder ID (no URL format), return it\n  if (!cleanInput.includes('drive.google.com') && cleanInput.length > 10) {\n    return cleanInput\n  }\n\n  // Extract from various Google Drive URL formats\n  const urlPatterns = [\n    /\\/drive\\/folders\\/([a-zA-Z0-9_-]+)/, // Standard folder URL\n    /\\/drive\\/u\\/\\d+\\/folders\\/([a-zA-Z0-9_-]+)/, // User-specific folder URL\n    /id=([a-zA-Z0-9_-]+)/, // Query parameter format\n  ]\n\n  for (const pattern of urlPatterns) {\n    const match = cleanInput.match(pattern)\n    if (match && match[1]) {\n      return match[1]\n    }\n  }\n\n  return null\n}\n\n/**\n * Validate if a string is a valid Google Drive folder ID\n */\nexport function isValidFolderId(id: string): boolean {\n  if (!id) return false\n  // Google Drive IDs are typically 28-44 characters long and contain letters, numbers, hyphens, and underscores\n  return /^[a-zA-Z0-9_-]{10,50}$/.test(id)\n}\n\nexport function isImageFile(mimeType: string): boolean {\n  return mimeType.startsWith('image/')\n}\n\nexport function isVideoFile(mimeType: string): boolean {\n  return mimeType.startsWith('video/')\n}\n\nexport function isAudioFile(mimeType: string): boolean {\n  return mimeType.startsWith('audio/')\n}\n\nexport function isDocumentFile(mimeType: string): boolean {\n  const documentTypes = [\n    'application/pdf',\n    'text/plain',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.google-apps.document',\n  ]\n  return documentTypes.includes(mimeType)\n}\n\nexport function isShortcutFile(mimeType: string): boolean {\n  return mimeType === 'application/vnd.google-apps.shortcut'\n}\n\n// Removed isPreviewable function - simplified to use getPreviewUrl directly\n\n/**\n * Generate preview URL for different media types\n */\nexport function getPreviewUrl(fileId: string): string {\n  // Universal Google Drive preview - supports all file types\n  // If Google Drive can't preview the file, it will show appropriate message\n  return `https://drive.google.com/file/d/${fileId}/preview`\n}\n\nexport function convertGoogleDriveFile(file: drive_v3.Schema$File): DriveFile {\n  return {\n    id: file.id!,\n    name: file.name!,\n    mimeType: file.mimeType!,\n    ...(file.size && { size: file.size }),\n    createdTime: file.createdTime!,\n    modifiedTime: file.modifiedTime!,\n    ...(file.webViewLink && { webViewLink: file.webViewLink }),\n    ...(file.webContentLink && { webContentLink: file.webContentLink }),\n    ...(file.thumbnailLink && { thumbnailLink: file.thumbnailLink }),\n    ...(file.parents && { parents: file.parents }),\n    owners:\n      file.owners?.map(owner => ({\n        displayName: owner.displayName!,\n        emailAddress: owner.emailAddress!,\n        ...(owner.photoLink && { photoLink: owner.photoLink }),\n      })) || [],\n    shared: file.shared ?? false,\n    starred: file.starred ?? false,\n    trashed: file.trashed ?? false,\n    ownedByMe: file.ownedByMe ?? true,\n    ...(file.viewedByMeTime && { viewedByMeTime: file.viewedByMeTime }),\n    viewedByMe: file.viewedByMe ?? false,\n    capabilities: {\n      canCopy: file.capabilities?.canCopy ?? false,\n      canDelete: file.capabilities?.canDelete ?? false,\n      canDownload: file.capabilities?.canDownload ?? false,\n      canEdit: file.capabilities?.canEdit ?? false,\n      canRename: file.capabilities?.canRename ?? false,\n      canShare: file.capabilities?.canShare ?? false,\n      canTrash: file.capabilities?.canTrash ?? false,\n      canUntrash: file.capabilities?.canUntrash ?? false,\n      canMoveItemWithinDrive: file.capabilities?.canMoveItemWithinDrive ?? false,\n      canMoveItemOutOfDrive: file.capabilities?.canMoveItemOutOfDrive ?? false,\n      canAddChildren: file.capabilities?.canAddChildren ?? false,\n      canListChildren: file.capabilities?.canListChildren ?? false,\n      canRemoveChildren: file.capabilities?.canRemoveChildren ?? false,\n    },\n  }\n}\n\nexport function convertGoogleDriveFolder(folder: drive_v3.Schema$File): DriveFolder {\n  return {\n    id: folder.id!,\n    name: folder.name!,\n    mimeType: 'application/vnd.google-apps.folder',\n    createdTime: folder.createdTime!,\n    modifiedTime: folder.modifiedTime!,\n    ...(folder.parents && { parents: folder.parents }),\n    shared: folder.shared ?? false,\n    starred: folder.starred ?? false,\n    trashed: folder.trashed ?? false,\n    ownedByMe: folder.ownedByMe ?? true,\n    owners:\n      folder.owners?.map(owner => ({\n        displayName: owner.displayName || '',\n        emailAddress: owner.emailAddress || '',\n        ...(owner.photoLink && { photoLink: owner.photoLink }),\n      })) || [],\n    capabilities: {\n      canCopy: folder.capabilities?.canCopy ?? false,\n      canDelete: folder.capabilities?.canDelete ?? false,\n      canDownload: folder.capabilities?.canDownload ?? false,\n      canEdit: folder.capabilities?.canEdit ?? false,\n      canRename: folder.capabilities?.canRename ?? false,\n      canShare: folder.capabilities?.canShare ?? false,\n      canTrash: folder.capabilities?.canTrash ?? false,\n      canUntrash: folder.capabilities?.canUntrash ?? false,\n      canMoveItemWithinDrive: folder.capabilities?.canMoveItemWithinDrive ?? false,\n      canMoveItemOutOfDrive: folder.capabilities?.canMoveItemOutOfDrive ?? false,\n      canAddChildren: folder.capabilities?.canAddChildren ?? false,\n      canListChildren: folder.capabilities?.canListChildren ?? false,\n      canRemoveChildren: folder.capabilities?.canRemoveChildren ?? false,\n    },\n  }\n}\n\nexport function buildSearchQuery(options: {\n  name?: string\n  mimeType?: string\n  parentId?: string\n  trashed?: boolean\n  shared?: boolean\n}): string {\n  const conditions: string[] = []\n\n  if (options.name) {\n    conditions.push(`name contains '${options.name.replace(/'/g, \"\\\\'\")}'`)\n  }\n\n  if (options.mimeType) {\n    conditions.push(`mimeType='${options.mimeType}'`)\n  }\n\n  if (options.parentId) {\n    conditions.push(`'${options.parentId}' in parents`)\n  }\n\n  if (options.trashed !== undefined) {\n    conditions.push(`trashed=${options.trashed}`)\n  }\n\n  if (options.shared !== undefined) {\n    conditions.push(`sharedWithMe=${options.shared}`)\n  }\n\n  return conditions.join(' and ')\n}\n\nexport function formatDate(dateString: string): string {\n  try {\n    const date = new Date(dateString)\n    const now = new Date()\n    const diffTime = Math.abs(now.getTime() - date.getTime())\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n    const userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone\n\n    if (diffDays === 1) {\n      return 'Yesterday'\n    } else if (diffDays < 7) {\n      return `${diffDays} days ago`\n    } else if (diffDays < 30) {\n      const weeks = Math.floor(diffDays / 7)\n      return `${weeks} week${weeks > 1 ? 's' : ''} ago`\n    } else if (diffDays < 365) {\n      const months = Math.floor(diffDays / 30)\n      return `${months} month${months > 1 ? 's' : ''} ago`\n    } else {\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        timeZone: userTimezone,\n      })\n    }\n  } catch {\n    return 'Invalid date'\n  }\n}\n\nexport function getMimeTypeFromFileName(fileName: string): string {\n  const extension = fileName.split('.').pop()?.toLowerCase()\n\n  const mimeTypes: Record<string, string> = {\n    pdf: 'application/pdf',\n    doc: 'application/msword',\n    docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    xls: 'application/vnd.ms-excel',\n    xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    ppt: 'application/vnd.ms-powerpoint',\n    pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    txt: 'text/plain',\n    jpg: 'image/jpeg',\n    jpeg: 'image/jpeg',\n    png: 'image/png',\n    gif: 'image/gif',\n    svg: 'image/svg+xml',\n    mp4: 'video/mp4',\n    avi: 'video/avi',\n    mov: 'video/quicktime',\n    mp3: 'audio/mpeg',\n    wav: 'audio/wav',\n    zip: 'application/zip',\n    rar: 'application/x-rar-compressed',\n  }\n\n  return mimeTypes[extension || ''] || 'application/octet-stream'\n}\n\n/**\n * Get available actions for a file based on its capabilities and current view\n */\nexport function getFileActions(fileInfo: {\n  capabilities?: any\n  trashed?: boolean\n  mimeType?: string\n  itemType?: 'file' | 'folder'\n}): {\n  canCopy: boolean\n  canDelete: boolean\n  canDownload: boolean\n  canTrash: boolean\n  canUntrash: boolean\n  canRename: boolean\n  canShare: boolean\n  canMove: boolean\n  canExport: boolean\n} {\n  const { capabilities, trashed, mimeType, itemType } = fileInfo\n  const isFolder = mimeType === 'application/vnd.google-apps.folder' || itemType === 'folder'\n\n  // Match the logic from selectedItemsWithDetails that's working correctly\n  return {\n    canCopy: !trashed, // Allow copy for non-trashed items\n    canDelete: capabilities?.canDelete === true, // Only if explicitly allowed\n    canDownload: !trashed && !isFolder && capabilities?.canDownload !== false,\n    canTrash: !trashed && capabilities?.canTrash !== false,\n    canUntrash: Boolean(trashed && capabilities?.canUntrash !== false),\n    canRename: !trashed && capabilities?.canRename !== false,\n    canShare: !trashed, // Allow share for non-trashed items\n    canMove: !trashed && capabilities?.canMoveItemWithinDrive !== false,\n    canExport:\n      !trashed &&\n      ['document', 'spreadsheet', 'presentation', 'drawing'].some(type =>\n        mimeType?.includes(`application/vnd.google-apps.${type}`),\n      ), // Allow export for non-trashed files\n  }\n}\n\n/**\n * Format Google Drive file dates with user timezone\n */\nexport const formatDriveFileDate = (dateString: string, timezone?: string, showRelative: boolean = true): string => {\n  if (!dateString) return 'Unknown'\n\n  try {\n    const date = new Date(dateString)\n    const userTimezone = timezone || Intl.DateTimeFormat().resolvedOptions().timeZone\n\n    if (showRelative) {\n      const now = new Date()\n      const diffInHours = Math.abs(now.getTime() - date.getTime()) / (1000 * 60 * 60)\n\n      // Show relative time for recent files (within 7 days)\n      if (diffInHours < 168) {\n        return formatDate(dateString)\n      }\n    }\n\n    // For older files, show formatted date with timezone\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      timeZone: userTimezone,\n    })\n  } catch {\n    return 'Invalid date format'\n  }\n}\n\n/**\n * Get file icon properties (name and color) in a single call\n */\nexport function getFileIconProps(\n  mimeType: string,\n  fileName?: string,\n): {\n  iconName: string\n  colorClass: string\n} {\n  return {\n    iconName: getFileIconName(mimeType, fileName),\n    colorClass: getFileIconColor(mimeType, fileName),\n  }\n}\n\n/**\n * Get category-based icon for file type filters and badges\n */\nexport function getCategoryIcon(category: string): string {\n  const categoryIconMap: Record<string, string> = {\n    folder: 'Folder',\n    document: 'FileText',\n    spreadsheet: 'FileSpreadsheet',\n    presentation: 'Presentation',\n    image: 'FileImage',\n    video: 'FileVideo',\n    audio: 'Music',\n    archive: 'Archive',\n    code: 'FileCode',\n    pdf: 'BookOpen',\n    text: 'FileText',\n    design: 'Palette',\n    database: 'Database',\n    shortcut: 'Link',\n    other: 'File',\n  }\n\n  return categoryIconMap[category] || 'File'\n}\n\n/**\n * Get category-based color for file type filters and badges\n */\nexport function getCategoryColor(category: string): string {\n  const categoryColorMap: Record<string, string> = {\n    folder: 'text-blue-600 dark:text-blue-400',\n    document: 'text-blue-500 dark:text-blue-400',\n    spreadsheet: 'text-green-600 dark:text-green-400',\n    presentation: 'text-orange-600 dark:text-orange-400',\n    image: 'text-purple-600 dark:text-purple-400',\n    video: 'text-red-600 dark:text-red-400',\n    audio: 'text-indigo-600 dark:text-indigo-400',\n    archive: 'text-yellow-600 dark:text-yellow-400',\n    code: 'text-emerald-600 dark:text-emerald-400',\n    pdf: 'text-red-600 dark:text-red-400',\n    text: 'text-gray-600 dark:text-gray-400',\n    design: 'text-pink-600 dark:text-pink-400',\n    database: 'text-slate-600 dark:text-slate-400',\n    other: 'text-gray-500 dark:text-gray-400',\n  }\n\n  return categoryColorMap[category] || 'text-gray-500 dark:text-gray-400'\n}\n\n/**\n * Determine file category from MIME type for consistent categorization\n */\nexport function getFileCategory(mimeType: string): string {\n  if (!mimeType) return 'other'\n  if (mimeType === 'application/vnd.google-apps.folder') return 'folder'\n  if (mimeType.startsWith('image/')) return 'image'\n  if (mimeType.startsWith('video/')) return 'video'\n  if (mimeType.startsWith('audio/')) return 'audio'\n  if (mimeType === 'application/pdf') return 'pdf'\n  if (mimeType.includes('spreadsheet') || mimeType === 'text/csv') return 'spreadsheet'\n  if (mimeType.includes('presentation')) return 'presentation'\n  if (mimeType.includes('document') || mimeType.startsWith('text/')) return 'document'\n  if (mimeType.includes('zip') || mimeType.includes('rar') || mimeType.includes('archive')) return 'archive'\n  if (\n    mimeType.includes('javascript') ||\n    mimeType.includes('json') ||\n    mimeType.includes('html') ||\n    mimeType.includes('css')\n  )\n    return 'code'\n  if (mimeType.includes('sql') || mimeType.includes('database')) return 'database'\n  if (mimeType.includes('photoshop') || mimeType.includes('illustrator')) return 'design'\n\n  return 'other'\n}\n\n/**\n * Get all available file type categories with their icon and color info\n */\n\n/**\n * Enhanced file icon rendering with consistent props\n */\nexport function renderFileIcon(\n  mimeType: string,\n  fileName?: string,\n  options: {\n    size?: 'sm' | 'md' | 'lg' | 'xl'\n    className?: string\n    strokeWidth?: number\n  } = {},\n): { iconName: string; colorClass: string; sizeClass: string } {\n  const { iconName, colorClass } = getFileIconProps(mimeType, fileName)\n\n  const sizeMap = {\n    sm: 'h-3 w-3',\n    md: 'h-4 w-4',\n    lg: 'h-5 w-5',\n    xl: 'h-6 w-6',\n  }\n\n  const sizeClass = options.className || sizeMap[options.size || 'md']\n\n  return {\n    iconName,\n    colorClass,\n    sizeClass,\n  }\n}\n"],"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","ignoreList":[]}