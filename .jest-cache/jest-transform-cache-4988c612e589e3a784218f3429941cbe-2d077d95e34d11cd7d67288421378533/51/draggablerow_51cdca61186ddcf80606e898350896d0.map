{"version":3,"names":["cov_1ji2d8yxgp","actualCoverage","s","DraggableRow","row","f","transform","transition","setNodeRef","isDragging","_sortable","useSortable","id","original","_jsxruntime","jsx","_table","TableRow","b","getIsSelected","ref","className","style","_utilities","CSS","Transform","toString","getVisibleCells","map","cell","TableCell","_reacttable","flexRender","column","columnDef","getContext"],"sources":["/home/runner/workspace/src/components/data-table/draggable-row.tsx"],"sourcesContent":["import { useSortable } from '@dnd-kit/sortable'\nimport { CSS } from '@dnd-kit/utilities'\nimport { Row, flexRender } from '@tanstack/react-table'\n\nimport { TableCell, TableRow } from '@/components/ui/table'\n\nexport function DraggableRow<TData>({ row }: { row: Row<TData> }) {\n  const { transform, transition, setNodeRef, isDragging } = useSortable({\n    id: (row.original as { id: number }).id,\n  })\n  return (\n    <TableRow\n      data-state={row.getIsSelected() && 'selected'}\n      data-dragging={isDragging}\n      ref={setNodeRef}\n      className=\"relative z-0 data-[dragging=true]:z-10 data-[dragging=true]:opacity-80\"\n      style={{\n        transform: CSS.Transform.toString(transform),\n        transition,\n      }}\n    >\n      {row.getVisibleCells().map(cell => (\n        <TableCell key={cell.id}>{flexRender(cell.column.columnDef.cell, cell.getContext())}</TableCell>\n      ))}\n    </TableRow>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMgB;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;+BAAA;;;;;;WAAAC,YAAA;;;;;;;;kCANY;;;kCACR;;;kCACY;;;kCAEI;AAE7B,SAASA,aAAoB;EAAEC;AAAG,CAAuB;EAAA;EAAAJ,cAAA,GAAAK,CAAA;EAC9D,MAAM;IAAEC,SAAS;IAAEC,UAAU;IAAEC,UAAU;IAAEC;EAAU,CAAE;EAAA;EAAA,CAAAT,cAAA,GAAAE,CAAA,OAAG,IAAAQ,SAAA,CAAAC,WAAW,EAAC;IACpEC,EAAA,EAAIR,GAAC,CAAIS,QAAQ,CAAoBD;EACvC;EAAA;EAAAZ,cAAA,GAAAE,CAAA;EACA,oBACE,IAAAY,WAAA,CAAAC,GAAA,EAACC,MAAA,CAAAC,QAAQ;IACP;IAAY;IAAA,CAAAjB,cAAA,GAAAkB,CAAA,UAAAd,GAAA,CAAIe,aAAa;IAAA;IAAA,CAAAnB,cAAA,GAAAkB,CAAA,UAAM;IACnC,iBAAeT,UAAA;IACfW,GAAA,EAAKZ,UAAA;IACLa,SAAA,EAAU;IACVC,KAAA,EAAO;MACLhB,SAAA,EAAWiB,UAAA,CAAAC,GAAG,CAACC,SAAS,CAACC,QAAQ,CAACpB,SAAA;MAClCC;IACF;cAECH,GAAA,CAAIuB,eAAe,GAAGC,GAAG,CAACC,IAAA,IACzB;MAAA;MAAA7B,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAE,CAAA;MAAA,OADyB,aACzB,IAAAY,WAAA,CAAAC,GAAA,EAACC,MAAA,CAAAc,SAAS;kBAAgB,IAAAC,WAAA,CAAAC,UAAU,EAACH,IAAA,CAAKI,MAAM,CAACC,SAAS,CAACL,IAAI,EAAEA,IAAA,CAAKM,UAAU;SAAhEN,IAAA,CAAKjB,EAAE;IAAA;;AAI/B","ignoreList":[]}