6c449ec1bfa5b32caf3d6b5170caf638
"use strict";

/* istanbul ignore next */
function cov_f9l4ylkle() {
  var path = "/home/runner/workspace/src/lib/middleware.ts";
  var hash = "e3f7060a57012979f1700daf5622ebdb679b4fa1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/lib/middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 13,
          column: 36
        }
      },
      "5": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 5
        }
      },
      "7": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 78
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 77
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "authMiddleware",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 23
          }
        },
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 19
          }
        }, {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 56
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 18
          }
        }, {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 48
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/lib/middleware.ts"],
      sourcesContent: ["import { NextResponse, type NextRequest } from 'next/server'\n\nexport function authMiddleware(req: NextRequest) {\n  const { pathname } = req.nextUrl\n  const isLoggedIn = req.cookies.get('auth-token')\n\n  if (!isLoggedIn && pathname.startsWith('/dashboard')) {\n    return NextResponse.redirect(new URL('/auth/login', req.url))\n  }\n\n  if (isLoggedIn && pathname === '/auth/login') {\n    return NextResponse.redirect(new URL('/dashboard', req.url))\n  }\n\n  return NextResponse.next()\n}\n"],
      names: ["authMiddleware", "req", "pathname", "nextUrl", "isLoggedIn", "cookies", "get", "startsWith", "NextResponse", "redirect", "URL", "url", "next"],
      mappings: ";;;;+BAEgBA;;;eAAAA;;;wBAF+B;AAExC,SAASA,eAAeC,GAAgB;IAC7C,MAAM,EAAEC,QAAQ,EAAE,GAAGD,IAAIE,OAAO;IAChC,MAAMC,aAAaH,IAAII,OAAO,CAACC,GAAG,CAAC;IAEnC,IAAI,CAACF,cAAcF,SAASK,UAAU,CAAC,eAAe;QACpD,OAAOC,oBAAY,CAACC,QAAQ,CAAC,IAAIC,IAAI,eAAeT,IAAIU,GAAG;IAC7D;IAEA,IAAIP,cAAcF,aAAa,eAAe;QAC5C,OAAOM,oBAAY,CAACC,QAAQ,CAAC,IAAIC,IAAI,cAAcT,IAAIU,GAAG;IAC5D;IAEA,OAAOH,oBAAY,CAACI,IAAI;AAC1B"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e3f7060a57012979f1700daf5622ebdb679b4fa1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_f9l4ylkle = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_f9l4ylkle();
cov_f9l4ylkle().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_f9l4ylkle().s[1]++;
Object.defineProperty(exports, "authMiddleware", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_f9l4ylkle().f[0]++;
    cov_f9l4ylkle().s[2]++;
    return authMiddleware;
  }
});
const _server =
/* istanbul ignore next */
(cov_f9l4ylkle().s[3]++, require("next/server"));
function authMiddleware(req) {
  /* istanbul ignore next */
  cov_f9l4ylkle().f[1]++;
  const {
    pathname
  } =
  /* istanbul ignore next */
  (cov_f9l4ylkle().s[4]++, req.nextUrl);
  const isLoggedIn =
  /* istanbul ignore next */
  (cov_f9l4ylkle().s[5]++, req.cookies.get('auth-token'));
  /* istanbul ignore next */
  cov_f9l4ylkle().s[6]++;
  if (
  /* istanbul ignore next */
  (cov_f9l4ylkle().b[1][0]++, !isLoggedIn) &&
  /* istanbul ignore next */
  (cov_f9l4ylkle().b[1][1]++, pathname.startsWith('/dashboard'))) {
    /* istanbul ignore next */
    cov_f9l4ylkle().b[0][0]++;
    cov_f9l4ylkle().s[7]++;
    return _server.NextResponse.redirect(new URL('/auth/login', req.url));
  } else
  /* istanbul ignore next */
  {
    cov_f9l4ylkle().b[0][1]++;
  }
  cov_f9l4ylkle().s[8]++;
  if (
  /* istanbul ignore next */
  (cov_f9l4ylkle().b[3][0]++, isLoggedIn) &&
  /* istanbul ignore next */
  (cov_f9l4ylkle().b[3][1]++, pathname === '/auth/login')) {
    /* istanbul ignore next */
    cov_f9l4ylkle().b[2][0]++;
    cov_f9l4ylkle().s[9]++;
    return _server.NextResponse.redirect(new URL('/dashboard', req.url));
  } else
  /* istanbul ignore next */
  {
    cov_f9l4ylkle().b[2][1]++;
  }
  cov_f9l4ylkle().s[10]++;
  return _server.NextResponse.next();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZjlsNHlsa2xlIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiYXV0aE1pZGRsZXdhcmUiLCJyZXEiLCJmIiwicGF0aG5hbWUiLCJuZXh0VXJsIiwiaXNMb2dnZWRJbiIsImNvb2tpZXMiLCJnZXQiLCJiIiwic3RhcnRzV2l0aCIsIl9zZXJ2ZXIiLCJOZXh0UmVzcG9uc2UiLCJyZWRpcmVjdCIsIlVSTCIsInVybCIsIm5leHQiXSwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL3NyYy9saWIvbWlkZGxld2FyZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVzcG9uc2UsIHR5cGUgTmV4dFJlcXVlc3QgfSBmcm9tICduZXh0L3NlcnZlcidcblxuZXhwb3J0IGZ1bmN0aW9uIGF1dGhNaWRkbGV3YXJlKHJlcTogTmV4dFJlcXVlc3QpIHtcbiAgY29uc3QgeyBwYXRobmFtZSB9ID0gcmVxLm5leHRVcmxcbiAgY29uc3QgaXNMb2dnZWRJbiA9IHJlcS5jb29raWVzLmdldCgnYXV0aC10b2tlbicpXG5cbiAgaWYgKCFpc0xvZ2dlZEluICYmIHBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9kYXNoYm9hcmQnKSkge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL2F1dGgvbG9naW4nLCByZXEudXJsKSlcbiAgfVxuXG4gIGlmIChpc0xvZ2dlZEluICYmIHBhdGhuYW1lID09PSAnL2F1dGgvbG9naW4nKSB7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvZGFzaGJvYXJkJywgcmVxLnVybCkpXG4gIH1cblxuICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFPSTtJQUFBQSxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxhQUFBO0FBQUFBLGFBQUEsR0FBQUUsQ0FBQTs7Ozs7OytCQUxZOzs7Ozs7V0FBQUMsY0FBQTs7Ozs7aUNBRitCO0FBRXhDLFNBQVNBLGVBQWVDLEdBQWdCO0VBQUE7RUFBQUosYUFBQSxHQUFBSyxDQUFBO0VBQzdDLE1BQU07SUFBRUM7RUFBUSxDQUFFO0VBQUE7RUFBQSxDQUFBTixhQUFBLEdBQUFFLENBQUEsT0FBR0UsR0FBQSxDQUFJRyxPQUFPO0VBQ2hDLE1BQU1DLFVBQUE7RUFBQTtFQUFBLENBQUFSLGFBQUEsR0FBQUUsQ0FBQSxPQUFhRSxHQUFBLENBQUlLLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO0VBQUE7RUFBQVYsYUFBQSxHQUFBRSxDQUFBO0VBRW5DO0VBQUk7RUFBQSxDQUFBRixhQUFBLEdBQUFXLENBQUEsV0FBQ0gsVUFBQTtFQUFBO0VBQUEsQ0FBQVIsYUFBQSxHQUFBVyxDQUFBLFVBQWNMLFFBQUEsQ0FBU00sVUFBVSxDQUFDLGdCQUFlO0lBQUE7SUFBQVosYUFBQSxHQUFBVyxDQUFBO0lBQUFYLGFBQUEsR0FBQUUsQ0FBQTtJQUNwRCxPQUFPVyxPQUFBLENBQUFDLFlBQVksQ0FBQ0MsUUFBUSxDQUFDLElBQUlDLEdBQUEsQ0FBSSxlQUFlWixHQUFBLENBQUlhLEdBQUc7RUFDN0Q7RUFBQTtFQUFBO0lBQUFqQixhQUFBLEdBQUFXLENBQUE7RUFBQTtFQUFBWCxhQUFBLEdBQUFFLENBQUE7RUFFQTtFQUFJO0VBQUEsQ0FBQUYsYUFBQSxHQUFBVyxDQUFBLFVBQUFILFVBQUE7RUFBQTtFQUFBLENBQUFSLGFBQUEsR0FBQVcsQ0FBQSxVQUFjTCxRQUFBLEtBQWEsZ0JBQWU7SUFBQTtJQUFBTixhQUFBLEdBQUFXLENBQUE7SUFBQVgsYUFBQSxHQUFBRSxDQUFBO0lBQzVDLE9BQU9XLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxRQUFRLENBQUMsSUFBSUMsR0FBQSxDQUFJLGNBQWNaLEdBQUEsQ0FBSWEsR0FBRztFQUM1RDtFQUFBO0VBQUE7SUFBQWpCLGFBQUEsR0FBQVcsQ0FBQTtFQUFBO0VBQUFYLGFBQUEsR0FBQUUsQ0FBQTtFQUVBLE9BQU9XLE9BQUEsQ0FBQUMsWUFBWSxDQUFDSSxJQUFJO0FBQzFCIiwiaWdub3JlTGlzdCI6W119