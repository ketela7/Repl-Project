{"version":3,"names":["cov_2a4jkoczhf","actualCoverage","s","POST","request","f","authResult","_apiutils","initDriveService","success","b","response","driveService","body","json","fileId","fileIds","fields","length","_server","NextResponse","error","status","idsToProcess","detailsFields","results","Promise","all","map","id","getFileDetails","console","fileDetails","operation","handleApiError"],"sources":["/home/runner/workspace/src/app/api/drive/files/details/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\n\nimport { initDriveService, handleApiError } from '@/lib/api-utils'\n\nexport async function POST(request: NextRequest) {\n  try {\n    const authResult = await initDriveService()\n    if (!authResult.success) {\n      return authResult.response!\n    }\n\n    const driveService = authResult.driveService!\n    const body = await request.json()\n\n    // Handle both single fileId and multiple fileIds\n    const { fileId, fileIds, fields } = body\n\n    if (!fileId && (!fileIds || fileIds.length === 0)) {\n      return NextResponse.json({ error: 'File ID or File IDs are required' }, { status: 400 })\n    }\n\n    const idsToProcess = fileId ? [fileId] : fileIds\n\n    // Get file details for all requested files - use comprehensive fields for Details Operations\n    const detailsFields = fields || '*' // Request ALL fields for comprehensive details\n    const results = await Promise.all(\n      idsToProcess.map(async (id: string) => {\n        try {\n          return await driveService.getFileDetails(id, detailsFields)\n        } catch (error) {\n          console.error(`Failed to get details for file ${id}:`, error)\n          return null\n        }\n      }),\n    )\n\n    // For single file request, return the details directly\n    if (fileId) {\n      return NextResponse.json({\n        success: true,\n        fileDetails: results[0],\n        operation: 'details',\n      })\n    }\n\n    // For multiple files, return array of results\n    return NextResponse.json({\n      success: true,\n      results,\n      operation: 'details',\n    })\n  } catch (error: any) {\n    return handleApiError(error)\n  }\n}\n"],"mappings":"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","ignoreList":[]}