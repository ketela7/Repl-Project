dda36764ea3c687c05f7d6c89a8adca0
/**
 * API throttling mechanism to prevent rate limiting
 * Implements request queuing and rate limiting for Google Drive API
 */"use strict";

/* istanbul ignore next */
function cov_7il1pzh7e() {
  var path = "/home/runner/workspace/src/lib/api-throttle.ts";
  var hash = "7fc4260d6a87978b16664fba95d7ee647dbe0e90";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/lib/api-throttle.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "6": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 36,
          column: 11
        }
      },
      "7": {
        start: {
          line: 27,
          column: 30
        },
        end: {
          line: 33,
          column: 13
        }
      },
      "8": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 39
        }
      },
      "9": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 32
        }
      },
      "10": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "11": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 19
        }
      },
      "12": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 31
        }
      },
      "13": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "14": {
        start: {
          line: 44,
          column: 30
        },
        end: {
          line: 44,
          column: 48
        }
      },
      "15": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 46,
          column: 34
        }
      },
      "16": {
        start: {
          line: 47,
          column: 41
        },
        end: {
          line: 47,
          column: 67
        }
      },
      "17": {
        start: {
          line: 48,
          column: 26
        },
        end: {
          line: 48,
          column: 82
        }
      },
      "18": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "19": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 40
        }
      },
      "20": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "21": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 50
        }
      },
      "22": {
        start: {
          line: 54,
          column: 31
        },
        end: {
          line: 54,
          column: 58
        }
      },
      "23": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 42
        }
      },
      "24": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 40
        }
      },
      "25": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 32
        }
      },
      "26": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 63
        }
      },
      "27": {
        start: {
          line: 63,
          column: 38
        },
        end: {
          line: 63,
          column: 61
        }
      },
      "28": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "29": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "30": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 52
        }
      },
      "31": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 24
        }
      },
      "32": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 32
        }
      },
      "33": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 24
        }
      },
      "34": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 32
        }
      },
      "35": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "36": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "37": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 33
        }
      },
      "38": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 37
        }
      },
      "39": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 17
          },
          end: {
            line: 15,
            column: 18
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 18,
            column: 28
          }
        },
        loc: {
          start: {
            line: 18,
            column: 38
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 25,
            column: 7
          }
        },
        loc: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 27
          },
          end: {
            line: 26,
            column: 28
          }
        },
        loc: {
          start: {
            line: 26,
            column: 46
          },
          end: {
            line: 36,
            column: 9
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 38
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 14
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 62
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 63,
            column: 27
          },
          end: {
            line: 63,
            column: 28
          }
        },
        loc: {
          start: {
            line: 63,
            column: 38
          },
          end: {
            line: 63,
            column: 61
          }
        },
        line: 63
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 67,
            column: 6
          },
          end: {
            line: 67,
            column: 7
          }
        },
        loc: {
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 67
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 76,
            column: 6
          },
          end: {
            line: 76,
            column: 7
          }
        },
        loc: {
          start: {
            line: 76,
            column: 19
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 76
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 77,
            column: 27
          },
          end: {
            line: 77,
            column: 28
          }
        },
        loc: {
          start: {
            line: 77,
            column: 35
          },
          end: {
            line: 79,
            column: 9
          }
        },
        line: 77
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 83
      },
      "12": {
        name: "throttledDriveRequest",
        decl: {
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 36
          }
        },
        loc: {
          start: {
            line: 94,
            column: 48
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 94
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 27
          }
        }, {
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 39,
            column: 54
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/lib/api-throttle.ts"],
      sourcesContent: ["/**\n * API throttling mechanism to prevent rate limiting\n * Implements request queuing and rate limiting for Google Drive API\n */\n\ninterface ThrottleQueue {\n  promise: Promise<any>\n  resolve: (_value: any) => void\n  reject: (_error: any) => void\n  requestFn: () => Promise<any>\n  timestamp: number\n}\n\nclass APIThrottle {\n  private queue: ThrottleQueue[] = []\n  private processing = false\n  private readonly maxRequestsPerSecond = 25 // Increased for better performance\n  private readonly requestInterval = 1000 / this.maxRequestsPerSecond // 40ms between requests\n  private lastRequestTime = 0\n\n  /**\n   * Throttle API request to prevent rate limiting\n   */\n  async throttleRequest<T>(requestFn: () => Promise<T>): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const queueItem: ThrottleQueue = {\n        promise: Promise.resolve(),\n        resolve,\n        reject,\n        requestFn,\n        timestamp: Date.now(),\n      }\n\n      this.queue.push(queueItem)\n      this.processQueue()\n    })\n  }\n\n  private async processQueue(): Promise<void> {\n    if (this.processing || this.queue.length === 0) {\n      return\n    }\n\n    this.processing = true\n\n    while (this.queue.length > 0) {\n      const queueItem = this.queue.shift()!\n\n      // Calculate delay needed to respect rate limit\n      const now = Date.now()\n      const timeSinceLastRequest = now - this.lastRequestTime\n      const delay = Math.max(0, this.requestInterval - timeSinceLastRequest)\n\n      if (delay > 0) {\n        await this.sleep(delay)\n      }\n\n      try {\n        this.lastRequestTime = Date.now()\n        const result = await queueItem.requestFn()\n        queueItem.resolve(result)\n      } catch (error) {\n        queueItem.reject(error)\n      }\n    }\n\n    this.processing = false\n  }\n\n  private sleep(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  /**\n   * Get current queue status for monitoring\n   */\n  getQueueStatus(): {\n    queueLength: number\n    processing: boolean\n    lastRequestTime: number\n  } {\n    return {\n      queueLength: this.queue.length,\n      processing: this.processing,\n      lastRequestTime: this.lastRequestTime,\n    }\n  }\n\n  /**\n   * Clear the queue (emergency use)\n   */\n  clearQueue(): void {\n    this.queue.forEach(item => {\n      item.reject(new Error('Queue cleared'))\n    })\n    this.queue = []\n    this.processing = false\n  }\n}\n\nexport const apiThrottle = new APIThrottle()\n\n/**\n * Convenience wrapper for Google Drive API calls\n */\nexport async function throttledDriveRequest<T>(requestFn: () => Promise<T>): Promise<T> {\n  return apiThrottle.throttleRequest(requestFn)\n}\n"],
      names: ["apiThrottle", "throttledDriveRequest", "APIThrottle", "throttleRequest", "requestFn", "Promise", "resolve", "reject", "queueItem", "promise", "timestamp", "Date", "now", "queue", "push", "processQueue", "processing", "length", "shift", "timeSinceLastRequest", "lastRequestTime", "delay", "Math", "max", "requestInterval", "sleep", "result", "error", "ms", "setTimeout", "getQueueStatus", "queueLength", "clearQueue", "forEach", "item", "Error", "maxRequestsPerSecond"],
      mappings: "AAAA;;;CAGC;;;;;;;;;;;IAiGYA,WAAW;eAAXA;;IAKSC,qBAAqB;eAArBA;;;AA5FtB,MAAMC;IAOJ;;GAEC,GACD,MAAMC,gBAAmBC,SAA2B,EAAc;QAChE,OAAO,IAAIC,QAAQ,CAACC,SAASC;YAC3B,MAAMC,YAA2B;gBAC/BC,SAASJ,QAAQC,OAAO;gBACxBA;gBACAC;gBACAH;gBACAM,WAAWC,KAAKC,GAAG;YACrB;YAEA,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN;YAChB,IAAI,CAACO,YAAY;QACnB;IACF;IAEA,MAAcA,eAA8B;QAC1C,IAAI,IAAI,CAACC,UAAU,IAAI,IAAI,CAACH,KAAK,CAACI,MAAM,KAAK,GAAG;YAC9C;QACF;QAEA,IAAI,CAACD,UAAU,GAAG;QAElB,MAAO,IAAI,CAACH,KAAK,CAACI,MAAM,GAAG,EAAG;YAC5B,MAAMT,YAAY,IAAI,CAACK,KAAK,CAACK,KAAK;YAElC,+CAA+C;YAC/C,MAAMN,MAAMD,KAAKC,GAAG;YACpB,MAAMO,uBAAuBP,MAAM,IAAI,CAACQ,eAAe;YACvD,MAAMC,QAAQC,KAAKC,GAAG,CAAC,GAAG,IAAI,CAACC,eAAe,GAAGL;YAEjD,IAAIE,QAAQ,GAAG;gBACb,MAAM,IAAI,CAACI,KAAK,CAACJ;YACnB;YAEA,IAAI;gBACF,IAAI,CAACD,eAAe,GAAGT,KAAKC,GAAG;gBAC/B,MAAMc,SAAS,MAAMlB,UAAUJ,SAAS;gBACxCI,UAAUF,OAAO,CAACoB;YACpB,EAAE,OAAOC,OAAO;gBACdnB,UAAUD,MAAM,CAACoB;YACnB;QACF;QAEA,IAAI,CAACX,UAAU,GAAG;IACpB;IAEQS,MAAMG,EAAU,EAAiB;QACvC,OAAO,IAAIvB,QAAQC,CAAAA,UAAWuB,WAAWvB,SAASsB;IACpD;IAEA;;GAEC,GACDE,iBAIE;QACA,OAAO;YACLC,aAAa,IAAI,CAAClB,KAAK,CAACI,MAAM;YAC9BD,YAAY,IAAI,CAACA,UAAU;YAC3BI,iBAAiB,IAAI,CAACA,eAAe;QACvC;IACF;IAEA;;GAEC,GACDY,aAAmB;QACjB,IAAI,CAACnB,KAAK,CAACoB,OAAO,CAACC,CAAAA;YACjBA,KAAK3B,MAAM,CAAC,IAAI4B,MAAM;QACxB;QACA,IAAI,CAACtB,KAAK,GAAG,EAAE;QACf,IAAI,CAACG,UAAU,GAAG;IACpB;;aAnFQH,QAAyB,EAAE;aAC3BG,aAAa;aACJoB,uBAAuB,GAAG,mCAAmC;;aAC7DZ,kBAAkB,OAAO,IAAI,CAACY,oBAAoB,CAAC,wBAAwB;;aACpFhB,kBAAkB;;AAgF5B;AAEO,MAAMpB,cAAc,IAAIE;AAKxB,eAAeD,sBAAyBG,SAA2B;IACxE,OAAOJ,YAAYG,eAAe,CAACC;AACrC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7fc4260d6a87978b16664fba95d7ee647dbe0e90"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7il1pzh7e = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7il1pzh7e();
cov_7il1pzh7e().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_7il1pzh7e().f[0]++;
  cov_7il1pzh7e().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_7il1pzh7e().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_7il1pzh7e().s[3]++;
_export(exports, {
  apiThrottle: function () {
    /* istanbul ignore next */
    cov_7il1pzh7e().f[1]++;
    cov_7il1pzh7e().s[4]++;
    return apiThrottle;
  },
  throttledDriveRequest: function () {
    /* istanbul ignore next */
    cov_7il1pzh7e().f[2]++;
    cov_7il1pzh7e().s[5]++;
    return throttledDriveRequest;
  }
});
class APIThrottle {
  /**
  * Throttle API request to prevent rate limiting
  */
  async throttleRequest(requestFn) {
    /* istanbul ignore next */
    cov_7il1pzh7e().f[3]++;
    cov_7il1pzh7e().s[6]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_7il1pzh7e().f[4]++;
      const queueItem =
      /* istanbul ignore next */
      (cov_7il1pzh7e().s[7]++, {
        promise: Promise.resolve(),
        resolve,
        reject,
        requestFn,
        timestamp: Date.now()
      });
      /* istanbul ignore next */
      cov_7il1pzh7e().s[8]++;
      this.queue.push(queueItem);
      /* istanbul ignore next */
      cov_7il1pzh7e().s[9]++;
      this.processQueue();
    });
  }
  async processQueue() {
    /* istanbul ignore next */
    cov_7il1pzh7e().f[5]++;
    cov_7il1pzh7e().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_7il1pzh7e().b[1][0]++, this.processing) ||
    /* istanbul ignore next */
    (cov_7il1pzh7e().b[1][1]++, this.queue.length === 0)) {
      /* istanbul ignore next */
      cov_7il1pzh7e().b[0][0]++;
      cov_7il1pzh7e().s[11]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7il1pzh7e().b[0][1]++;
    }
    cov_7il1pzh7e().s[12]++;
    this.processing = true;
    /* istanbul ignore next */
    cov_7il1pzh7e().s[13]++;
    while (this.queue.length > 0) {
      const queueItem =
      /* istanbul ignore next */
      (cov_7il1pzh7e().s[14]++, this.queue.shift());
      // Calculate delay needed to respect rate limit
      const now =
      /* istanbul ignore next */
      (cov_7il1pzh7e().s[15]++, Date.now());
      const timeSinceLastRequest =
      /* istanbul ignore next */
      (cov_7il1pzh7e().s[16]++, now - this.lastRequestTime);
      const delay =
      /* istanbul ignore next */
      (cov_7il1pzh7e().s[17]++, Math.max(0, this.requestInterval - timeSinceLastRequest));
      /* istanbul ignore next */
      cov_7il1pzh7e().s[18]++;
      if (delay > 0) {
        /* istanbul ignore next */
        cov_7il1pzh7e().b[2][0]++;
        cov_7il1pzh7e().s[19]++;
        await this.sleep(delay);
      } else
      /* istanbul ignore next */
      {
        cov_7il1pzh7e().b[2][1]++;
      }
      cov_7il1pzh7e().s[20]++;
      try {
        /* istanbul ignore next */
        cov_7il1pzh7e().s[21]++;
        this.lastRequestTime = Date.now();
        const result =
        /* istanbul ignore next */
        (cov_7il1pzh7e().s[22]++, await queueItem.requestFn());
        /* istanbul ignore next */
        cov_7il1pzh7e().s[23]++;
        queueItem.resolve(result);
      } catch (error) {
        /* istanbul ignore next */
        cov_7il1pzh7e().s[24]++;
        queueItem.reject(error);
      }
    }
    /* istanbul ignore next */
    cov_7il1pzh7e().s[25]++;
    this.processing = false;
  }
  sleep(ms) {
    /* istanbul ignore next */
    cov_7il1pzh7e().f[6]++;
    cov_7il1pzh7e().s[26]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_7il1pzh7e().f[7]++;
      cov_7il1pzh7e().s[27]++;
      return setTimeout(resolve, ms);
    });
  }
  /**
  * Get current queue status for monitoring
  */
  getQueueStatus() {
    /* istanbul ignore next */
    cov_7il1pzh7e().f[8]++;
    cov_7il1pzh7e().s[28]++;
    return {
      queueLength: this.queue.length,
      processing: this.processing,
      lastRequestTime: this.lastRequestTime
    };
  }
  /**
  * Clear the queue (emergency use)
  */
  clearQueue() {
    /* istanbul ignore next */
    cov_7il1pzh7e().f[9]++;
    cov_7il1pzh7e().s[29]++;
    this.queue.forEach(item => {
      /* istanbul ignore next */
      cov_7il1pzh7e().f[10]++;
      cov_7il1pzh7e().s[30]++;
      item.reject(new Error('Queue cleared'));
    });
    /* istanbul ignore next */
    cov_7il1pzh7e().s[31]++;
    this.queue = [];
    /* istanbul ignore next */
    cov_7il1pzh7e().s[32]++;
    this.processing = false;
  }
  constructor() {
    /* istanbul ignore next */
    cov_7il1pzh7e().f[11]++;
    cov_7il1pzh7e().s[33]++;
    this.queue = [];
    /* istanbul ignore next */
    cov_7il1pzh7e().s[34]++;
    this.processing = false;
    /* istanbul ignore next */
    cov_7il1pzh7e().s[35]++;
    this.maxRequestsPerSecond = 25 // Increased for better performance
    ;
    /* istanbul ignore next */
    cov_7il1pzh7e().s[36]++;
    this.requestInterval = 1000 / this.maxRequestsPerSecond // 40ms between requests
    ;
    /* istanbul ignore next */
    cov_7il1pzh7e().s[37]++;
    this.lastRequestTime = 0;
  }
}
const apiThrottle =
/* istanbul ignore next */
(cov_7il1pzh7e().s[38]++, new APIThrottle());
async function throttledDriveRequest(requestFn) {
  /* istanbul ignore next */
  cov_7il1pzh7e().f[12]++;
  cov_7il1pzh7e().s[39]++;
  return apiThrottle.throttleRequest(requestFn);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,