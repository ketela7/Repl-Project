652451e335c9e295915ed0d0a8e4fdc0
"use strict";

/* istanbul ignore next */
function cov_l90vkvuy7() {
  var path = "/home/runner/workspace/src/app/api/health/route.ts";
  var hash = "a4fcf6384af09f4fd92fb3258d8301585fa556e6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/app/api/health/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 27,
          column: 11
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 34,
          column: 11
        }
      },
      "10": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "11": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 11
        }
      },
      "12": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 10
          },
          end: {
            line: 15,
            column: 11
          }
        },
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 18
          }
        },
        loc: {
          start: {
            line: 20,
            column: 21
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 20
      },
      "4": {
        name: "HEAD",
        decl: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 37,
            column: 19
          }
        },
        loc: {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 37
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/app/api/health/route.ts"],
      sourcesContent: ["import { NextResponse } from 'next/server'\n\nexport async function GET() {\n  try {\n    return NextResponse.json({ status: 'ok', timestamp: new Date().toISOString() }, { status: 200 })\n  } catch (error) {\n    return NextResponse.json({ status: 'error', error: 'Server unavailable' }, { status: 500 })\n  }\n}\n\nexport async function HEAD() {\n  try {\n    return new NextResponse(null, { status: 200 })\n  } catch (error) {\n    return new NextResponse(null, { status: 500 })\n  }\n}\n"],
      names: ["GET", "HEAD", "NextResponse", "json", "status", "timestamp", "Date", "toISOString", "error"],
      mappings: ";;;;;;;;;;;IAEsBA,GAAG;eAAHA;;IAQAC,IAAI;eAAJA;;;wBAVO;AAEtB,eAAeD;IACpB,IAAI;QACF,OAAOE,oBAAY,CAACC,IAAI,CAAC;YAAEC,QAAQ;YAAMC,WAAW,IAAIC,OAAOC,WAAW;QAAG,GAAG;YAAEH,QAAQ;QAAI;IAChG,EAAE,OAAOI,OAAO;QACd,OAAON,oBAAY,CAACC,IAAI,CAAC;YAAEC,QAAQ;YAASI,OAAO;QAAqB,GAAG;YAAEJ,QAAQ;QAAI;IAC3F;AACF;AAEO,eAAeH;IACpB,IAAI;QACF,OAAO,IAAIC,oBAAY,CAAC,MAAM;YAAEE,QAAQ;QAAI;IAC9C,EAAE,OAAOI,OAAO;QACd,OAAO,IAAIN,oBAAY,CAAC,MAAM;YAAEE,QAAQ;QAAI;IAC9C;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a4fcf6384af09f4fd92fb3258d8301585fa556e6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_l90vkvuy7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_l90vkvuy7();
cov_l90vkvuy7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_l90vkvuy7().f[0]++;
  cov_l90vkvuy7().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_l90vkvuy7().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_l90vkvuy7().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_l90vkvuy7().f[1]++;
    cov_l90vkvuy7().s[4]++;
    return GET;
  },
  HEAD: function () {
    /* istanbul ignore next */
    cov_l90vkvuy7().f[2]++;
    cov_l90vkvuy7().s[5]++;
    return HEAD;
  }
});
const _server =
/* istanbul ignore next */
(cov_l90vkvuy7().s[6]++, require("next/server"));
async function GET() {
  /* istanbul ignore next */
  cov_l90vkvuy7().f[3]++;
  cov_l90vkvuy7().s[7]++;
  try {
    /* istanbul ignore next */
    cov_l90vkvuy7().s[8]++;
    return _server.NextResponse.json({
      status: 'ok',
      timestamp: new Date().toISOString()
    }, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_l90vkvuy7().s[9]++;
    return _server.NextResponse.json({
      status: 'error',
      error: 'Server unavailable'
    }, {
      status: 500
    });
  }
}
async function HEAD() {
  /* istanbul ignore next */
  cov_l90vkvuy7().f[4]++;
  cov_l90vkvuy7().s[10]++;
  try {
    /* istanbul ignore next */
    cov_l90vkvuy7().s[11]++;
    return new _server.NextResponse(null, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_l90vkvuy7().s[12]++;
    return new _server.NextResponse(null, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHRVQiLCJjb3ZfbDkwdmt2dXk3IiwiZiIsInMiLCJIRUFEIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsImpzb24iLCJzdGF0dXMiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJlcnJvciJdLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvc3JjL2FwcC9hcGkvaGVhbHRoL3JvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKCkge1xuICB0cnkge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN0YXR1czogJ29rJywgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkgfSwgeyBzdGF0dXM6IDIwMCB9KVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN0YXR1czogJ2Vycm9yJywgZXJyb3I6ICdTZXJ2ZXIgdW5hdmFpbGFibGUnIH0sIHsgc3RhdHVzOiA1MDAgfSlcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gSEVBRCgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZShudWxsLCB7IHN0YXR1czogMjAwIH0pXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIG5ldyBOZXh0UmVzcG9uc2UobnVsbCwgeyBzdGF0dXM6IDUwMCB9KVxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBRXNCQSxHQUFHLFdBQUFBLENBQUE7SUFBQTtJQUFBQyxhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO1dBQUhILEdBQUE7O0VBUUFJLElBQUksV0FBQUEsQ0FBQTtJQUFBO0lBQUFILGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7V0FBSkMsSUFBQTs7Ozs7aUNBVk87QUFFdEIsZUFBZUosSUFBQTtFQUFBO0VBQUFDLGFBQUEsR0FBQUMsQ0FBQTtFQUFBRCxhQUFBLEdBQUFFLENBQUE7RUFDcEIsSUFBSTtJQUFBO0lBQUFGLGFBQUEsR0FBQUUsQ0FBQTtJQUNGLE9BQU9FLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQUM7TUFBRUMsTUFBQSxFQUFRO01BQU1DLFNBQUEsRUFBVyxJQUFJQyxJQUFBLEdBQU9DLFdBQVc7SUFBRyxHQUFHO01BQUVILE1BQUEsRUFBUTtJQUFJO0VBQ2hHLEVBQUUsT0FBT0ksS0FBQSxFQUFPO0lBQUE7SUFBQVgsYUFBQSxHQUFBRSxDQUFBO0lBQ2QsT0FBT0UsT0FBQSxDQUFBQyxZQUFZLENBQUNDLElBQUksQ0FBQztNQUFFQyxNQUFBLEVBQVE7TUFBU0ksS0FBQSxFQUFPO0lBQXFCLEdBQUc7TUFBRUosTUFBQSxFQUFRO0lBQUk7RUFDM0Y7QUFDRjtBQUVPLGVBQWVKLEtBQUE7RUFBQTtFQUFBSCxhQUFBLEdBQUFDLENBQUE7RUFBQUQsYUFBQSxHQUFBRSxDQUFBO0VBQ3BCLElBQUk7SUFBQTtJQUFBRixhQUFBLEdBQUFFLENBQUE7SUFDRixPQUFPLElBQUlFLE9BQUEsQ0FBQUMsWUFBWSxDQUFDLE1BQU07TUFBRUUsTUFBQSxFQUFRO0lBQUk7RUFDOUMsRUFBRSxPQUFPSSxLQUFBLEVBQU87SUFBQTtJQUFBWCxhQUFBLEdBQUFFLENBQUE7SUFDZCxPQUFPLElBQUlFLE9BQUEsQ0FBQUMsWUFBWSxDQUFDLE1BQU07TUFBRUUsTUFBQSxFQUFRO0lBQUk7RUFDOUM7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==