{"version":3,"names":["auth","cov_v0n5bdvma","f","s","handlers","signIn","signOut","_nextauth","default","providers","_google","clientId","process","env","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","authorization","params","scope","access_type","prompt","callbacks","jwt","token","account","user","trigger","session","b","userId","id","accessToken","access_token","refreshToken","refresh_token","provider","rememberMe","expires_at","Date","now","response","fetch","method","headers","body","URLSearchParams","client_id","client_secret","grant_type","ok","refreshedTokens","json","exp","Math","floor","expires_in","undefined","error","sessionDuration","Boolean","redirect","url","baseUrl","startsWith","pages","strategy","maxAge","updateAge","cookies","sessionToken","name","NODE_ENV","options","httpOnly","sameSite","path","secure","state","pkceCodeVerifier","trustHost","secret","NEXTAUTH_SECRET","debug"],"sources":["/home/runner/workspace/src/auth.ts"],"sourcesContent":["import NextAuth from 'next-auth'\nimport Google from 'next-auth/providers/google'\n\ndeclare module 'next-auth' {\n  interface Session {\n    accessToken?: string\n    refreshToken?: string\n    provider?: string\n    rememberMe?: boolean\n  }\n}\n\ndeclare module 'next-auth' {\n  interface JWT {\n    accessToken?: string\n    refreshToken?: string\n    provider?: string\n    rememberMe?: boolean\n  }\n}\n\nexport const { handlers, auth, signIn, signOut } = NextAuth({\n  providers: [\n    Google({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n      authorization: {\n        params: {\n          scope: 'openid email profile https://www.googleapis.com/auth/drive',\n          access_type: 'offline',\n          prompt: 'consent',\n        },\n      },\n    }),\n  ],\n\n  callbacks: {\n    async jwt({ token, account, user, trigger, session }) {\n      // Store tokens for API access\n      if (account && user) {\n        token.userId = user.id\n      }\n      if (account) {\n        token.accessToken = account.access_token\n        token.refreshToken = account.refresh_token\n        token.provider = account.provider\n        // Set initial remember me preference - will be updated via session callback\n        token.rememberMe = false\n      }\n\n      // Handle token refresh on every request if needed\n      if (\n        token.refreshToken &&\n        (!token.accessToken || (account?.expires_at && Date.now() >= account.expires_at * 1000))\n      ) {\n        try {\n          const response = await fetch('https://oauth2.googleapis.com/token', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: new URLSearchParams({\n              client_id: process.env.GOOGLE_CLIENT_ID!,\n              client_secret: process.env.GOOGLE_CLIENT_SECRET!,\n              grant_type: 'refresh_token',\n              refresh_token: token.refreshToken as string,\n            }),\n          })\n\n          if (response.ok) {\n            const refreshedTokens = await response.json()\n            token.accessToken = refreshedTokens.access_token\n            if (refreshedTokens.refresh_token) {\n              token.refreshToken = refreshedTokens.refresh_token\n            }\n            token.exp = Math.floor(Date.now() / 1000) + (refreshedTokens.expires_in || 3600)\n          } else {\n            // // // // // console.error('Token refresh failed:', response.status)\n            token.accessToken = undefined\n          }\n        } catch (error) {\n          // // // // // console.error('Token refresh error:', error)\n          token.accessToken = undefined\n        }\n      }\n\n      // Handle remember me preference updates from client-side session update\n      if (trigger === 'update' && session?.rememberMe !== undefined) {\n        token.rememberMe = session.rememberMe\n\n        // Update token expiration based on remember me preference\n        const sessionDuration = session.rememberMe ? 30 * 24 * 60 * 60 : 24 * 60 * 60\n        token.exp = Math.floor(Date.now() / 1000) + sessionDuration\n      }\n\n      // Set initial remember me state and expiration during account creation\n      if (account && token.exp === undefined) {\n        // Default to false if not set; will be updated by client-side session update\n        token.rememberMe = false\n        // Set initial expiration to 1 day (default)\n        token.exp = Math.floor(Date.now() / 1000) + 24 * 60 * 60\n      }\n\n      return token\n    },\n    async session({ session, token }) {\n      // Build session object with tokens\n      return {\n        ...session,\n        ...((token.accessToken as string) && { accessToken: token.accessToken as string }),\n        ...((token.refreshToken as string) && { refreshToken: token.refreshToken as string }),\n        provider: (token.provider as string) || 'google',\n        rememberMe: Boolean(token.rememberMe),\n      }\n    },\n    async redirect({ url, baseUrl }) {\n      // Always redirect to dashboard after successful authentication\n      if (url === baseUrl || url === `${baseUrl}/` || url === `${baseUrl}/auth/v1/login`) {\n        return `${baseUrl}/dashboard/drive`\n      }\n      // If it's a valid internal URL, use it\n      if (url.startsWith(baseUrl)) {\n        return url\n      }\n      // Default fallback to dashboard\n      return `${baseUrl}/dashboard/drive`\n    },\n  },\n  pages: {\n    signIn: '/auth/v1/login',\n  },\n  session: {\n    strategy: 'jwt',\n    maxAge: 24 * 60 * 60, // Default: 1 day (will be overridden for remember me)\n    updateAge: 24 * 60 * 60, // Update session only once per day to reduce database calls\n  },\n  jwt: {\n    maxAge: 24 * 60 * 60, // Default: 1 day (will be overridden for remember me)\n  },\n  cookies: {\n    sessionToken: {\n      name: process.env.NODE_ENV === 'production' ? '__Secure-next-auth.session-token' : 'next-auth.session-token',\n      options: {\n        httpOnly: true,\n        sameSite: 'lax',\n        path: '/',\n        secure: process.env.NODE_ENV === 'production',\n        maxAge: 24 * 60 * 60, // Default: 1 day (will be extended for remember me)\n      },\n    },\n    state: {\n      name: process.env.NODE_ENV === 'production' ? '__Secure-authjs.state' : 'authjs.state',\n      options: {\n        httpOnly: true,\n        sameSite: 'lax',\n        path: '/',\n        secure: process.env.NODE_ENV === 'production',\n        maxAge: 60 * 60, // 15 minutes\n      },\n    },\n    pkceCodeVerifier: {\n      name: process.env.NODE_ENV === 'production' ? '__Secure-authjs.pkce.code_verifier' : 'authjs.pkce.code_verifier',\n      options: {\n        httpOnly: true,\n        sameSite: 'lax',\n        path: '/',\n        secure: process.env.NODE_ENV === 'production',\n        maxAge: 60 * 60, // 15 minutes\n      },\n    },\n  },\n  trustHost: true,\n  secret: process.env.NEXTAUTH_SECRET!,\n  debug: process.env.NODE_ENV === 'development',\n})\n"],"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","ignoreList":[]}