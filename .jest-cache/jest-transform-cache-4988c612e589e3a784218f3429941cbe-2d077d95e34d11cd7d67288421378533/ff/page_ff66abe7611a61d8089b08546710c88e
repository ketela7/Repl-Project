cc83616ab71b9d3f55cf25037b422aa7
"use strict";

/* istanbul ignore next */
function cov_1lxp01vrzm() {
  var path = "/home/runner/workspace/src/app/page.tsx";
  var hash = "6aa5604a64c6b95f9deaa27ca5a6c5954d5d9fa6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/app/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 46
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 32
        }
      },
      "5": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 43
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 54
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "HomePage",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 23
          }
        },
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        }, {
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 22,
            column: 5
          }
        }],
        line: 16
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/app/page.tsx"],
      sourcesContent: ["import { redirect } from 'next/navigation'\nimport { auth } from '@/auth'\n\nexport default async function HomePage() {\n  // Check if user is already authenticated\n  const session = await auth()\n\n  if (session) {\n    // User is authenticated, redirect to dashboard\n    redirect('/dashboard/drive')\n  } else {\n    // User is not authenticated, redirect to login\n    redirect('/auth/v1/login')\n  }\n}\n"],
      names: ["HomePage", "session", "auth", "redirect"],
      mappings: ";;;;+BAGA;;;eAA8BA;;;4BAHL;sBACJ;AAEN,eAAeA;IAC5B,yCAAyC;IACzC,MAAMC,UAAU,MAAMC,IAAAA,UAAI;IAE1B,IAAID,SAAS;QACX,+CAA+C;QAC/CE,IAAAA,oBAAQ,EAAC;IACX,OAAO;QACL,+CAA+C;QAC/CA,IAAAA,oBAAQ,EAAC;IACX;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6aa5604a64c6b95f9deaa27ca5a6c5954d5d9fa6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lxp01vrzm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1lxp01vrzm();
cov_1lxp01vrzm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1lxp01vrzm().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lxp01vrzm().f[0]++;
    cov_1lxp01vrzm().s[2]++;
    return HomePage;
  }
});
const _navigation =
/* istanbul ignore next */
(cov_1lxp01vrzm().s[3]++, require("next/navigation"));
const _auth =
/* istanbul ignore next */
(cov_1lxp01vrzm().s[4]++, require("../auth"));
async function HomePage() {
  /* istanbul ignore next */
  cov_1lxp01vrzm().f[1]++;
  // Check if user is already authenticated
  const session =
  /* istanbul ignore next */
  (cov_1lxp01vrzm().s[5]++, await (0, _auth.auth)());
  /* istanbul ignore next */
  cov_1lxp01vrzm().s[6]++;
  if (session) {
    /* istanbul ignore next */
    cov_1lxp01vrzm().b[0][0]++;
    cov_1lxp01vrzm().s[7]++;
    // User is authenticated, redirect to dashboard
    (0, _navigation.redirect)('/dashboard/drive');
  } else {
    /* istanbul ignore next */
    cov_1lxp01vrzm().b[0][1]++;
    cov_1lxp01vrzm().s[8]++;
    // User is not authenticated, redirect to login
    (0, _navigation.redirect)('/auth/v1/login');
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWx4cDAxdnJ6bSIsImFjdHVhbENvdmVyYWdlIiwicyIsIkhvbWVQYWdlIiwiZiIsInNlc3Npb24iLCJfYXV0aCIsImF1dGgiLCJiIiwiX25hdmlnYXRpb24iLCJyZWRpcmVjdCJdLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvc3JjL2FwcC9wYWdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWRpcmVjdCB9IGZyb20gJ25leHQvbmF2aWdhdGlvbidcbmltcG9ydCB7IGF1dGggfSBmcm9tICdAL2F1dGgnXG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIEhvbWVQYWdlKCkge1xuICAvLyBDaGVjayBpZiB1c2VyIGlzIGFscmVhZHkgYXV0aGVudGljYXRlZFxuICBjb25zdCBzZXNzaW9uID0gYXdhaXQgYXV0aCgpXG5cbiAgaWYgKHNlc3Npb24pIHtcbiAgICAvLyBVc2VyIGlzIGF1dGhlbnRpY2F0ZWQsIHJlZGlyZWN0IHRvIGRhc2hib2FyZFxuICAgIHJlZGlyZWN0KCcvZGFzaGJvYXJkL2RyaXZlJylcbiAgfSBlbHNlIHtcbiAgICAvLyBVc2VyIGlzIG5vdCBhdXRoZW50aWNhdGVkLCByZWRpcmVjdCB0byBsb2dpblxuICAgIHJlZGlyZWN0KCcvYXV0aC92MS9sb2dpbicpXG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFPTTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7OytCQUpOOzs7Ozs7V0FBOEJDLFFBQUE7Ozs7O2tDQUhMOzs7a0NBQ0o7QUFFTixlQUFlQSxTQUFBO0VBQUE7RUFBQUgsY0FBQSxHQUFBSSxDQUFBO0VBQzVCO0VBQ0EsTUFBTUMsT0FBQTtFQUFBO0VBQUEsQ0FBQUwsY0FBQSxHQUFBRSxDQUFBLE9BQVUsTUFBTSxJQUFBSSxLQUFBLENBQUFDLElBQUk7RUFBQTtFQUFBUCxjQUFBLEdBQUFFLENBQUE7RUFFMUIsSUFBSUcsT0FBQSxFQUFTO0lBQUE7SUFBQUwsY0FBQSxHQUFBUSxDQUFBO0lBQUFSLGNBQUEsR0FBQUUsQ0FBQTtJQUNYO0lBQ0EsSUFBQU8sV0FBQSxDQUFBQyxRQUFRLEVBQUM7RUFDWCxPQUFPO0lBQUE7SUFBQVYsY0FBQSxHQUFBUSxDQUFBO0lBQUFSLGNBQUEsR0FBQUUsQ0FBQTtJQUNMO0lBQ0EsSUFBQU8sV0FBQSxDQUFBQyxRQUFRLEVBQUM7RUFDWDtBQUNGIiwiaWdub3JlTGlzdCI6W119