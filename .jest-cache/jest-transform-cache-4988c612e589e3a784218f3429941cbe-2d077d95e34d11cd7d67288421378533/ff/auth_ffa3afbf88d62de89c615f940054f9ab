4ecfdc3f4e3f69b1339b2982132ba69e
"use strict";

/* istanbul ignore next */
function cov_v0n5bdvma() {
  var path = "/home/runner/workspace/src/auth.ts";
  var hash = "b9f932019de62026ba7d87bd28d8483caba537d3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/src/auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 20
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 22
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 23
        }
      },
      "8": {
        start: {
          line: 25,
          column: 32
        },
        end: {
          line: 25,
          column: 78
        }
      },
      "9": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 26,
          column: 93
        }
      },
      "10": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 6
        }
      },
      "11": {
        start: {
          line: 32,
          column: 44
        },
        end: {
          line: 179,
          column: 2
        }
      },
      "12": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "13": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 39
        }
      },
      "14": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "15": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "16": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 59
        }
      },
      "17": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 50
        }
      },
      "18": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 41
        }
      },
      "19": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "20": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 88,
          column: 17
        }
      },
      "21": {
        start: {
          line: 62,
          column: 37
        },
        end: {
          line: 73,
          column: 22
        }
      },
      "22": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 84,
          column: 21
        }
      },
      "23": {
        start: {
          line: 75,
          column: 48
        },
        end: {
          line: 75,
          column: 69
        }
      },
      "24": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 76,
          column: 73
        }
      },
      "25": {
        start: {
          line: 77,
          column: 24
        },
        end: {
          line: 79,
          column: 25
        }
      },
      "26": {
        start: {
          line: 78,
          column: 28
        },
        end: {
          line: 78,
          column: 79
        }
      },
      "27": {
        start: {
          line: 80,
          column: 24
        },
        end: {
          line: 80,
          column: 105
        }
      },
      "28": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 83,
          column: 54
        }
      },
      "29": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 50
        }
      },
      "30": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "31": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 54
        }
      },
      "32": {
        start: {
          line: 94,
          column: 40
        },
        end: {
          line: 94,
          column: 93
        }
      },
      "33": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 76
        }
      },
      "34": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 103,
          column: 13
        }
      },
      "35": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 41
        }
      },
      "36": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 73
        }
      },
      "37": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 25
        }
      },
      "38": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 118,
          column: 14
        }
      },
      "39": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "40": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 52
        }
      },
      "41": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "42": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 27
        }
      },
      "43": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 10
          },
          end: {
            line: 12,
            column: 11
          }
        },
        loc: {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 14
          },
          end: {
            line: 15,
            column: 15
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        },
        loc: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 21,
            column: 14
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        loc: {
          start: {
            line: 47,
            column: 63
          },
          end: {
            line: 105,
            column: 9
          }
        },
        line: 47
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        loc: {
          start: {
            line: 106,
            column: 43
          },
          end: {
            line: 119,
            column: 9
          }
        },
        line: 106
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        loc: {
          start: {
            line: 120,
            column: 42
          },
          end: {
            line: 131,
            column: 9
          }
        },
        line: 120
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 38
          }
        }, {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 14
          }
        }, {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 32
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 23
          }
        }, {
          start: {
            line: 49,
            column: 27
          },
          end: {
            line: 49,
            column: 31
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 34
          }
        }, {
          start: {
            line: 60,
            column: 39
          },
          end: {
            line: 60,
            column: 57
          }
        }, {
          start: {
            line: 60,
            column: 61
          },
          end: {
            line: 60,
            column: 80
          }
        }, {
          start: {
            line: 60,
            column: 84
          },
          end: {
            line: 60,
            column: 123
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 74,
            column: 20
          },
          end: {
            line: 84,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 20
          },
          end: {
            line: 84,
            column: 21
          }
        }, {
          start: {
            line: 81,
            column: 27
          },
          end: {
            line: 84,
            column: 21
          }
        }],
        line: 74
      },
      "8": {
        loc: {
          start: {
            line: 77,
            column: 24
          },
          end: {
            line: 79,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 24
          },
          end: {
            line: 79,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "9": {
        loc: {
          start: {
            line: 80,
            column: 69
          },
          end: {
            line: 80,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 69
          },
          end: {
            line: 80,
            column: 95
          }
        }, {
          start: {
            line: 80,
            column: 99
          },
          end: {
            line: 80,
            column: 103
          }
        }],
        line: 80
      },
      "10": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "11": {
        loc: {
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 91,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 91,
            column: 36
          }
        }, {
          start: {
            line: 91,
            column: 40
          },
          end: {
            line: 91,
            column: 73
          }
        }],
        line: 91
      },
      "12": {
        loc: {
          start: {
            line: 94,
            column: 40
          },
          end: {
            line: 94,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 61
          },
          end: {
            line: 94,
            column: 78
          }
        }, {
          start: {
            line: 94,
            column: 81
          },
          end: {
            line: 94,
            column: 93
          }
        }],
        line: 94
      },
      "13": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 103,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 103,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "14": {
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 23
          }
        }, {
          start: {
            line: 98,
            column: 27
          },
          end: {
            line: 98,
            column: 50
          }
        }],
        line: 98
      },
      "15": {
        loc: {
          start: {
            line: 110,
            column: 19
          },
          end: {
            line: 112,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 19
          },
          end: {
            line: 110,
            column: 36
          }
        }, {
          start: {
            line: 110,
            column: 40
          },
          end: {
            line: 112,
            column: 17
          }
        }],
        line: 110
      },
      "16": {
        loc: {
          start: {
            line: 113,
            column: 19
          },
          end: {
            line: 115,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 19
          },
          end: {
            line: 113,
            column: 37
          }
        }, {
          start: {
            line: 113,
            column: 41
          },
          end: {
            line: 115,
            column: 17
          }
        }],
        line: 113
      },
      "17": {
        loc: {
          start: {
            line: 116,
            column: 26
          },
          end: {
            line: 116,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 26
          },
          end: {
            line: 116,
            column: 40
          }
        }, {
          start: {
            line: 116,
            column: 44
          },
          end: {
            line: 116,
            column: 52
          }
        }],
        line: 116
      },
      "18": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "19": {
        loc: {
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 122,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 122,
            column: 31
          }
        }, {
          start: {
            line: 122,
            column: 35
          },
          end: {
            line: 122,
            column: 56
          }
        }, {
          start: {
            line: 122,
            column: 60
          },
          end: {
            line: 122,
            column: 94
          }
        }],
        line: 122
      },
      "20": {
        loc: {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "21": {
        loc: {
          start: {
            line: 146,
            column: 18
          },
          end: {
            line: 146,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 146,
            column: 58
          },
          end: {
            line: 146,
            column: 92
          }
        }, {
          start: {
            line: 146,
            column: 95
          },
          end: {
            line: 146,
            column: 120
          }
        }],
        line: 146
      },
      "22": {
        loc: {
          start: {
            line: 156,
            column: 18
          },
          end: {
            line: 156,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 58
          },
          end: {
            line: 156,
            column: 81
          }
        }, {
          start: {
            line: 156,
            column: 84
          },
          end: {
            line: 156,
            column: 98
          }
        }],
        line: 156
      },
      "23": {
        loc: {
          start: {
            line: 166,
            column: 18
          },
          end: {
            line: 166,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 166,
            column: 58
          },
          end: {
            line: 166,
            column: 94
          }
        }, {
          start: {
            line: 166,
            column: 97
          },
          end: {
            line: 166,
            column: 124
          }
        }],
        line: 166
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/runner/workspace/src/auth.ts"],
      sourcesContent: ["import NextAuth from 'next-auth'\nimport Google from 'next-auth/providers/google'\n\ndeclare module 'next-auth' {\n  interface Session {\n    accessToken?: string\n    refreshToken?: string\n    provider?: string\n    rememberMe?: boolean\n  }\n}\n\ndeclare module 'next-auth' {\n  interface JWT {\n    accessToken?: string\n    refreshToken?: string\n    provider?: string\n    rememberMe?: boolean\n  }\n}\n\nexport const { handlers, auth, signIn, signOut } = NextAuth({\n  providers: [\n    Google({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n      authorization: {\n        params: {\n          scope: 'openid email profile https://www.googleapis.com/auth/drive',\n          access_type: 'offline',\n          prompt: 'consent',\n        },\n      },\n    }),\n  ],\n\n  callbacks: {\n    async jwt({ token, account, user, trigger, session }) {\n      // Store tokens for API access\n      if (account && user) {\n        token.userId = user.id\n      }\n      if (account) {\n        token.accessToken = account.access_token\n        token.refreshToken = account.refresh_token\n        token.provider = account.provider\n        // Set initial remember me preference - will be updated via session callback\n        token.rememberMe = false\n      }\n\n      // Handle token refresh on every request if needed\n      if (\n        token.refreshToken &&\n        (!token.accessToken || (account?.expires_at && Date.now() >= account.expires_at * 1000))\n      ) {\n        try {\n          const response = await fetch('https://oauth2.googleapis.com/token', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: new URLSearchParams({\n              client_id: process.env.GOOGLE_CLIENT_ID!,\n              client_secret: process.env.GOOGLE_CLIENT_SECRET!,\n              grant_type: 'refresh_token',\n              refresh_token: token.refreshToken as string,\n            }),\n          })\n\n          if (response.ok) {\n            const refreshedTokens = await response.json()\n            token.accessToken = refreshedTokens.access_token\n            if (refreshedTokens.refresh_token) {\n              token.refreshToken = refreshedTokens.refresh_token\n            }\n            token.exp = Math.floor(Date.now() / 1000) + (refreshedTokens.expires_in || 3600)\n          } else {\n            // // // // // console.error('Token refresh failed:', response.status)\n            token.accessToken = undefined\n          }\n        } catch (error) {\n          // // // // // console.error('Token refresh error:', error)\n          token.accessToken = undefined\n        }\n      }\n\n      // Handle remember me preference updates from client-side session update\n      if (trigger === 'update' && session?.rememberMe !== undefined) {\n        token.rememberMe = session.rememberMe\n\n        // Update token expiration based on remember me preference\n        const sessionDuration = session.rememberMe ? 30 * 24 * 60 * 60 : 24 * 60 * 60\n        token.exp = Math.floor(Date.now() / 1000) + sessionDuration\n      }\n\n      // Set initial remember me state and expiration during account creation\n      if (account && token.exp === undefined) {\n        // Default to false if not set; will be updated by client-side session update\n        token.rememberMe = false\n        // Set initial expiration to 1 day (default)\n        token.exp = Math.floor(Date.now() / 1000) + 24 * 60 * 60\n      }\n\n      return token\n    },\n    async session({ session, token }) {\n      // Build session object with tokens\n      return {\n        ...session,\n        ...((token.accessToken as string) && { accessToken: token.accessToken as string }),\n        ...((token.refreshToken as string) && { refreshToken: token.refreshToken as string }),\n        provider: (token.provider as string) || 'google',\n        rememberMe: Boolean(token.rememberMe),\n      }\n    },\n    async redirect({ url, baseUrl }) {\n      // Always redirect to dashboard after successful authentication\n      if (url === baseUrl || url === `${baseUrl}/` || url === `${baseUrl}/auth/v1/login`) {\n        return `${baseUrl}/dashboard/drive`\n      }\n      // If it's a valid internal URL, use it\n      if (url.startsWith(baseUrl)) {\n        return url\n      }\n      // Default fallback to dashboard\n      return `${baseUrl}/dashboard/drive`\n    },\n  },\n  pages: {\n    signIn: '/auth/v1/login',\n  },\n  session: {\n    strategy: 'jwt',\n    maxAge: 24 * 60 * 60, // Default: 1 day (will be overridden for remember me)\n    updateAge: 24 * 60 * 60, // Update session only once per day to reduce database calls\n  },\n  jwt: {\n    maxAge: 24 * 60 * 60, // Default: 1 day (will be overridden for remember me)\n  },\n  cookies: {\n    sessionToken: {\n      name: process.env.NODE_ENV === 'production' ? '__Secure-next-auth.session-token' : 'next-auth.session-token',\n      options: {\n        httpOnly: true,\n        sameSite: 'lax',\n        path: '/',\n        secure: process.env.NODE_ENV === 'production',\n        maxAge: 24 * 60 * 60, // Default: 1 day (will be extended for remember me)\n      },\n    },\n    state: {\n      name: process.env.NODE_ENV === 'production' ? '__Secure-authjs.state' : 'authjs.state',\n      options: {\n        httpOnly: true,\n        sameSite: 'lax',\n        path: '/',\n        secure: process.env.NODE_ENV === 'production',\n        maxAge: 60 * 60, // 15 minutes\n      },\n    },\n    pkceCodeVerifier: {\n      name: process.env.NODE_ENV === 'production' ? '__Secure-authjs.pkce.code_verifier' : 'authjs.pkce.code_verifier',\n      options: {\n        httpOnly: true,\n        sameSite: 'lax',\n        path: '/',\n        secure: process.env.NODE_ENV === 'production',\n        maxAge: 60 * 60, // 15 minutes\n      },\n    },\n  },\n  trustHost: true,\n  secret: process.env.NEXTAUTH_SECRET!,\n  debug: process.env.NODE_ENV === 'development',\n})\n"],
      names: ["auth", "handlers", "signIn", "signOut", "NextAuth", "providers", "Google", "clientId", "process", "env", "GOOGLE_CLIENT_ID", "clientSecret", "GOOGLE_CLIENT_SECRET", "authorization", "params", "scope", "access_type", "prompt", "callbacks", "jwt", "token", "account", "user", "trigger", "session", "userId", "id", "accessToken", "access_token", "refreshToken", "refresh_token", "provider", "rememberMe", "expires_at", "Date", "now", "response", "fetch", "method", "headers", "body", "URLSearchParams", "client_id", "client_secret", "grant_type", "ok", "refreshedTokens", "json", "exp", "Math", "floor", "expires_in", "undefined", "error", "sessionDuration", "Boolean", "redirect", "url", "baseUrl", "startsWith", "pages", "strategy", "maxAge", "updateAge", "cookies", "sessionToken", "name", "NODE_ENV", "options", "httpOnly", "sameSite", "path", "secure", "state", "pkceCodeVerifier", "trustHost", "secret", "NEXTAUTH_SECRET", "debug"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b9f932019de62026ba7d87bd28d8483caba537d3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_v0n5bdvma = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_v0n5bdvma();
cov_v0n5bdvma().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_v0n5bdvma().f[0]++;
  cov_v0n5bdvma().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_v0n5bdvma().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_v0n5bdvma().s[3]++;
_export(exports, {
  auth: function () {
    /* istanbul ignore next */
    cov_v0n5bdvma().f[1]++;
    cov_v0n5bdvma().s[4]++;
    return auth;
  },
  handlers: function () {
    /* istanbul ignore next */
    cov_v0n5bdvma().f[2]++;
    cov_v0n5bdvma().s[5]++;
    return handlers;
  },
  signIn: function () {
    /* istanbul ignore next */
    cov_v0n5bdvma().f[3]++;
    cov_v0n5bdvma().s[6]++;
    return signIn;
  },
  signOut: function () {
    /* istanbul ignore next */
    cov_v0n5bdvma().f[4]++;
    cov_v0n5bdvma().s[7]++;
    return signOut;
  }
});
const _nextauth =
/* istanbul ignore next */
(/*#__PURE__*/cov_v0n5bdvma().s[8]++, _interop_require_default(require("next-auth")));
const _google =
/* istanbul ignore next */
(/*#__PURE__*/cov_v0n5bdvma().s[9]++, _interop_require_default(require("next-auth/providers/google")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_v0n5bdvma().f[5]++;
  cov_v0n5bdvma().s[10]++;
  return /* istanbul ignore next */(cov_v0n5bdvma().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_v0n5bdvma().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_v0n5bdvma().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_v0n5bdvma().b[0][1]++, {
    default: obj
  });
}
const {
  handlers,
  auth,
  signIn,
  signOut
} =
/* istanbul ignore next */
(cov_v0n5bdvma().s[11]++, (0, _nextauth.default)({
  providers: [(0, _google.default)({
    clientId: process.env.GOOGLE_CLIENT_ID,
    clientSecret: process.env.GOOGLE_CLIENT_SECRET,
    authorization: {
      params: {
        scope: 'openid email profile https://www.googleapis.com/auth/drive',
        access_type: 'offline',
        prompt: 'consent'
      }
    }
  })],
  callbacks: {
    async jwt({
      token,
      account,
      user,
      trigger,
      session
    }) {
      /* istanbul ignore next */
      cov_v0n5bdvma().f[6]++;
      cov_v0n5bdvma().s[12]++;
      // Store tokens for API access
      if (
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[3][0]++, account) &&
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[3][1]++, user)) {
        /* istanbul ignore next */
        cov_v0n5bdvma().b[2][0]++;
        cov_v0n5bdvma().s[13]++;
        token.userId = user.id;
      } else
      /* istanbul ignore next */
      {
        cov_v0n5bdvma().b[2][1]++;
      }
      cov_v0n5bdvma().s[14]++;
      if (account) {
        /* istanbul ignore next */
        cov_v0n5bdvma().b[4][0]++;
        cov_v0n5bdvma().s[15]++;
        token.accessToken = account.access_token;
        /* istanbul ignore next */
        cov_v0n5bdvma().s[16]++;
        token.refreshToken = account.refresh_token;
        /* istanbul ignore next */
        cov_v0n5bdvma().s[17]++;
        token.provider = account.provider;
        // Set initial remember me preference - will be updated via session callback
        /* istanbul ignore next */
        cov_v0n5bdvma().s[18]++;
        token.rememberMe = false;
      } else
      /* istanbul ignore next */
      {
        cov_v0n5bdvma().b[4][1]++;
      }
      // Handle token refresh on every request if needed
      cov_v0n5bdvma().s[19]++;
      if (
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[6][0]++, token.refreshToken) && (
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[6][1]++, !token.accessToken) ||
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[6][2]++, account?.expires_at) &&
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[6][3]++, Date.now() >= account.expires_at * 1000))) {
        /* istanbul ignore next */
        cov_v0n5bdvma().b[5][0]++;
        cov_v0n5bdvma().s[20]++;
        try {
          const response =
          /* istanbul ignore next */
          (cov_v0n5bdvma().s[21]++, await fetch('https://oauth2.googleapis.com/token', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: new URLSearchParams({
              client_id: process.env.GOOGLE_CLIENT_ID,
              client_secret: process.env.GOOGLE_CLIENT_SECRET,
              grant_type: 'refresh_token',
              refresh_token: token.refreshToken
            })
          }));
          /* istanbul ignore next */
          cov_v0n5bdvma().s[22]++;
          if (response.ok) {
            /* istanbul ignore next */
            cov_v0n5bdvma().b[7][0]++;
            const refreshedTokens =
            /* istanbul ignore next */
            (cov_v0n5bdvma().s[23]++, await response.json());
            /* istanbul ignore next */
            cov_v0n5bdvma().s[24]++;
            token.accessToken = refreshedTokens.access_token;
            /* istanbul ignore next */
            cov_v0n5bdvma().s[25]++;
            if (refreshedTokens.refresh_token) {
              /* istanbul ignore next */
              cov_v0n5bdvma().b[8][0]++;
              cov_v0n5bdvma().s[26]++;
              token.refreshToken = refreshedTokens.refresh_token;
            } else
            /* istanbul ignore next */
            {
              cov_v0n5bdvma().b[8][1]++;
            }
            cov_v0n5bdvma().s[27]++;
            token.exp = Math.floor(Date.now() / 1000) + (
            /* istanbul ignore next */
            (cov_v0n5bdvma().b[9][0]++, refreshedTokens.expires_in) ||
            /* istanbul ignore next */
            (cov_v0n5bdvma().b[9][1]++, 3600));
          } else {
            /* istanbul ignore next */
            cov_v0n5bdvma().b[7][1]++;
            cov_v0n5bdvma().s[28]++;
            // // // // // console.error('Token refresh failed:', response.status)
            token.accessToken = undefined;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_v0n5bdvma().s[29]++;
          // // // // // console.error('Token refresh error:', error)
          token.accessToken = undefined;
        }
      } else
      /* istanbul ignore next */
      {
        cov_v0n5bdvma().b[5][1]++;
      }
      // Handle remember me preference updates from client-side session update
      cov_v0n5bdvma().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[11][0]++, trigger === 'update') &&
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[11][1]++, session?.rememberMe !== undefined)) {
        /* istanbul ignore next */
        cov_v0n5bdvma().b[10][0]++;
        cov_v0n5bdvma().s[31]++;
        token.rememberMe = session.rememberMe;
        // Update token expiration based on remember me preference
        const sessionDuration =
        /* istanbul ignore next */
        (cov_v0n5bdvma().s[32]++, session.rememberMe ?
        /* istanbul ignore next */
        (cov_v0n5bdvma().b[12][0]++, 30 * 24 * 60 * 60) :
        /* istanbul ignore next */
        (cov_v0n5bdvma().b[12][1]++, 24 * 60 * 60));
        /* istanbul ignore next */
        cov_v0n5bdvma().s[33]++;
        token.exp = Math.floor(Date.now() / 1000) + sessionDuration;
      } else
      /* istanbul ignore next */
      {
        cov_v0n5bdvma().b[10][1]++;
      }
      // Set initial remember me state and expiration during account creation
      cov_v0n5bdvma().s[34]++;
      if (
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[14][0]++, account) &&
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[14][1]++, token.exp === undefined)) {
        /* istanbul ignore next */
        cov_v0n5bdvma().b[13][0]++;
        cov_v0n5bdvma().s[35]++;
        // Default to false if not set; will be updated by client-side session update
        token.rememberMe = false;
        // Set initial expiration to 1 day (default)
        /* istanbul ignore next */
        cov_v0n5bdvma().s[36]++;
        token.exp = Math.floor(Date.now() / 1000) + 24 * 60 * 60;
      } else
      /* istanbul ignore next */
      {
        cov_v0n5bdvma().b[13][1]++;
      }
      cov_v0n5bdvma().s[37]++;
      return token;
    },
    async session({
      session,
      token
    }) {
      /* istanbul ignore next */
      cov_v0n5bdvma().f[7]++;
      cov_v0n5bdvma().s[38]++;
      // Build session object with tokens
      return {
        ...session,
        ...(
        /* istanbul ignore next */
        (cov_v0n5bdvma().b[15][0]++, token.accessToken) &&
        /* istanbul ignore next */
        (cov_v0n5bdvma().b[15][1]++, {
          accessToken: token.accessToken
        })),
        ...(
        /* istanbul ignore next */
        (cov_v0n5bdvma().b[16][0]++, token.refreshToken) &&
        /* istanbul ignore next */
        (cov_v0n5bdvma().b[16][1]++, {
          refreshToken: token.refreshToken
        })),
        provider:
        /* istanbul ignore next */
        (cov_v0n5bdvma().b[17][0]++, token.provider) ||
        /* istanbul ignore next */
        (cov_v0n5bdvma().b[17][1]++, 'google'),
        rememberMe: Boolean(token.rememberMe)
      };
    },
    async redirect({
      url,
      baseUrl
    }) {
      /* istanbul ignore next */
      cov_v0n5bdvma().f[8]++;
      cov_v0n5bdvma().s[39]++;
      // Always redirect to dashboard after successful authentication
      if (
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[19][0]++, url === baseUrl) ||
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[19][1]++, url === `${baseUrl}/`) ||
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[19][2]++, url === `${baseUrl}/auth/v1/login`)) {
        /* istanbul ignore next */
        cov_v0n5bdvma().b[18][0]++;
        cov_v0n5bdvma().s[40]++;
        return `${baseUrl}/dashboard/drive`;
      } else
      /* istanbul ignore next */
      {
        cov_v0n5bdvma().b[18][1]++;
      }
      // If it's a valid internal URL, use it
      cov_v0n5bdvma().s[41]++;
      if (url.startsWith(baseUrl)) {
        /* istanbul ignore next */
        cov_v0n5bdvma().b[20][0]++;
        cov_v0n5bdvma().s[42]++;
        return url;
      } else
      /* istanbul ignore next */
      {
        cov_v0n5bdvma().b[20][1]++;
      }
      // Default fallback to dashboard
      cov_v0n5bdvma().s[43]++;
      return `${baseUrl}/dashboard/drive`;
    }
  },
  pages: {
    signIn: '/auth/v1/login'
  },
  session: {
    strategy: 'jwt',
    maxAge: 24 * 60 * 60,
    updateAge: 24 * 60 * 60
  },
  jwt: {
    maxAge: 24 * 60 * 60
  },
  cookies: {
    sessionToken: {
      name: process.env.NODE_ENV === 'production' ?
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[21][0]++, '__Secure-next-auth.session-token') :
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[21][1]++, 'next-auth.session-token'),
      options: {
        httpOnly: true,
        sameSite: 'lax',
        path: '/',
        secure: process.env.NODE_ENV === 'production',
        maxAge: 24 * 60 * 60
      }
    },
    state: {
      name: process.env.NODE_ENV === 'production' ?
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[22][0]++, '__Secure-authjs.state') :
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[22][1]++, 'authjs.state'),
      options: {
        httpOnly: true,
        sameSite: 'lax',
        path: '/',
        secure: process.env.NODE_ENV === 'production',
        maxAge: 60 * 60
      }
    },
    pkceCodeVerifier: {
      name: process.env.NODE_ENV === 'production' ?
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[23][0]++, '__Secure-authjs.pkce.code_verifier') :
      /* istanbul ignore next */
      (cov_v0n5bdvma().b[23][1]++, 'authjs.pkce.code_verifier'),
      options: {
        httpOnly: true,
        sameSite: 'lax',
        path: '/',
        secure: process.env.NODE_ENV === 'production',
        maxAge: 60 * 60
      }
    }
  },
  trustHost: true,
  secret: process.env.NEXTAUTH_SECRET,
  debug: process.env.NODE_ENV === 'development'
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,