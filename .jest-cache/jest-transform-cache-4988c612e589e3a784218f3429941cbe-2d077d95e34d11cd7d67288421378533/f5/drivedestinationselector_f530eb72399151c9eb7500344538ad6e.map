{"version":3,"names":["DriveDestinationSelector","parseDriveUrl","url","cov_24jjk3ldr7","f","s","cleanUrl","trim","match","b","folderId","isValid","patterns","pattern","onSelect","selectedFolderId","className","activeTab","setActiveTab","_react","useState","urlInput","setUrlInput","parsedResult","setParsedResult","isValidating","setIsValidating","validationResult","setValidationResult","folders","setFolders","isLoadingFolders","setIsLoadingFolders","searchQuery","setSearchQuery","currentPath","setCurrentPath","id","name","useEffect","result","loadFolders","parentId","response","fetch","data","json","success","validateFolderId","method","headers","body","JSON","stringify","folder","folderName","error","handleFolderSelect","handleUrlSelect","navigateToFolder","navigateBack","index","newPath","slice","length","filteredFolders","filter","toLowerCase","includes","_jsxruntime","jsx","_utils","cn","_card","Card","CardContent","jsxs","_tabs","Tabs","value","onValueChange","TabsList","TabsTrigger","_lucidereact","Folder","Link","TabsContent","Home","map","ChevronRight","_button","Button","variant","size","onClick","title","Search","_input","Input","placeholder","onChange","e","target","_scrollarea","ScrollArea","Loader2","Fragment","stopPropagation","Check","Plus","FolderOpen","isShared","_badge","Badge","Users","path","ExternalLink","_label","Label","htmlFor","example","Shield","disabled","AlertCircle"],"sources":["/home/runner/workspace/src/components/drive-destination-selector.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport {\n  Folder,\n  Link,\n  Search,\n  ExternalLink,\n  Loader2,\n  Check,\n  AlertCircle,\n  Home,\n  ChevronRight,\n  FolderOpen,\n  Users,\n  Shield,\n  Plus,\n} from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Badge } from '@/components/ui/badge'\nimport { ScrollArea } from '@/components/ui/scroll-area'\nimport { Card, CardContent } from '@/components/ui/card'\nimport { cn } from '@/lib/utils'\n\ninterface DriveFolder {\n  id: string\n  name: string\n  path?: string\n  isShared?: boolean\n}\n\ninterface DriveDestinationSelectorProps {\n  onSelect: (folderId: string, folderName?: string) => void\n  selectedFolderId?: string\n  className?: string\n}\n\n/**\n * Parse Google Drive URL to extract folder ID\n * Supports various Google Drive URL formats:\n * - https://drive.google.com/drive/folders/FOLDER_ID\n * - https://drive.google.com/drive/u/0/folders/FOLDER_ID\n * - https://drive.google.com/open?id=FOLDER_ID\n * - https://drive.google.com/drive/folders/FOLDER_ID?usp=sharing\n */\nfunction parseDriveUrl(url: string): { folderId: string | null; isValid: boolean } {\n  try {\n    const cleanUrl = url.trim()\n\n    // Direct folder ID (no URL)\n    if (cleanUrl.match(/^[a-zA-Z0-9_-]{20,}$/)) {\n      return { folderId: cleanUrl, isValid: true }\n    }\n\n    // Google Drive URL patterns\n    const patterns = [\n      /drive\\.google\\.com\\/drive\\/(?:u\\/\\d+\\/)?folders\\/([a-zA-Z0-9_-]+)/,\n      /drive\\.google\\.com\\/open\\?id=([a-zA-Z0-9_-]+)/,\n      /drive\\.google\\.com\\/drive\\/folders\\/([a-zA-Z0-9_-]+)/,\n    ]\n\n    for (const pattern of patterns) {\n      const match = cleanUrl.match(pattern)\n      if (match && match[1]) {\n        return { folderId: match[1], isValid: true }\n      }\n    }\n\n    return { folderId: null, isValid: false }\n  } catch {\n    return { folderId: null, isValid: false }\n  }\n}\n\nexport function DriveDestinationSelector({\n  onSelect,\n  selectedFolderId = 'root',\n  className,\n}: DriveDestinationSelectorProps) {\n  const [activeTab, setActiveTab] = useState<'browse' | 'url'>('browse')\n  const [urlInput, setUrlInput] = useState('')\n  const [parsedResult, setParsedResult] = useState<{ folderId: string | null; isValid: boolean }>({\n    folderId: null,\n    isValid: false,\n  })\n  const [isValidating, setIsValidating] = useState(false)\n  const [validationResult, setValidationResult] = useState<{\n    isValid: boolean\n    folderName?: string\n    error?: string\n  } | null>(null)\n\n  // Folder browsing state\n  const [folders, setFolders] = useState<DriveFolder[]>([])\n  const [isLoadingFolders, setIsLoadingFolders] = useState(false)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [currentPath, setCurrentPath] = useState<DriveFolder[]>([{ id: 'root', name: 'My Drive' }])\n\n  // Parse URL input in real-time\n  useEffect(() => {\n    if (urlInput.trim()) {\n      const result = parseDriveUrl(urlInput)\n      setParsedResult(result)\n      setValidationResult(null)\n    } else {\n      setParsedResult({ folderId: null, isValid: false })\n      setValidationResult(null)\n    }\n  }, [urlInput])\n\n  // Load folders for browsing\n  const loadFolders = async (parentId: string = 'root') => {\n    setIsLoadingFolders(true)\n    try {\n      const response = await fetch(`/api/drive/folders?parentId=${parentId}`)\n      const data = await response.json()\n\n      if (data.success) {\n        setFolders(data.folders || [])\n      }\n    } catch {\n      // console.error('Failed to load folders:', error)\n    } finally {\n      setIsLoadingFolders(false)\n    }\n  }\n\n  // Validate parsed folder ID\n  const validateFolderId = async (folderId: string) => {\n    setIsValidating(true)\n    try {\n      const response = await fetch('/api/drive/folders/validate', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ folderId }),\n      })\n\n      const data = await response.json()\n\n      if (data.success && data.folder) {\n        setValidationResult({\n          isValid: true,\n          folderName: data.folder.name,\n        })\n      } else {\n        setValidationResult({\n          isValid: false,\n          error: data.error || 'Folder validation failed',\n        })\n      }\n    } catch {\n      setValidationResult({\n        isValid: false,\n        error: 'Failed to validate folder ID',\n      })\n    } finally {\n      setIsValidating(false)\n    }\n  }\n\n  // Handle folder selection\n  const handleFolderSelect = (folder: DriveFolder) => {\n    onSelect(folder.id, folder.name)\n  }\n\n  // Handle URL selection\n  const handleUrlSelect = () => {\n    if (parsedResult.folderId && validationResult?.isValid) {\n      onSelect(parsedResult.folderId, validationResult.folderName)\n    }\n  }\n\n  // Navigate to folder\n  const navigateToFolder = (folder: DriveFolder) => {\n    setCurrentPath([...currentPath, folder])\n    loadFolders(folder.id)\n  }\n\n  // Navigate back\n  const navigateBack = (index: number) => {\n    const newPath = currentPath.slice(0, index + 1)\n    setCurrentPath(newPath)\n    loadFolders(newPath[newPath.length - 1]?.id)\n  }\n\n  // Filter folders based on search\n  const filteredFolders = searchQuery\n    ? folders.filter(folder => folder.name.toLowerCase().includes(searchQuery.toLowerCase()))\n    : folders\n\n  // Load initial folders\n  useEffect(() => {\n    loadFolders()\n  }, [])\n\n  return (\n    <div className={cn('flex h-full min-h-0 w-full flex-col overflow-hidden', className)}>\n      {/* Main Content - Fixed height container with overflow protection */}\n      <Card className=\"from-background to-muted/20 mx-auto h-full max-h-[450px] min-h-[350px] w-full border-0 bg-gradient-to-br shadow-sm\">\n        <CardContent className=\"flex h-full flex-col overflow-hidden p-3\">\n          <Tabs\n            value={activeTab}\n            onValueChange={value => setActiveTab(value as 'browse' | 'url')}\n            className=\"flex h-full min-h-0 flex-col overflow-hidden\"\n          >\n            {/* Enhanced Tab List - Compact */}\n            <TabsList className=\"bg-muted/50 mb-3 grid h-9 w-full flex-shrink-0 grid-cols-2 p-1\">\n              <TabsTrigger\n                value=\"browse\"\n                className=\"flex h-7 items-center gap-1.5 text-xs font-medium data-[state=active]:bg-white data-[state=active]:shadow-sm\"\n              >\n                <Folder className=\"h-3 w-3\" />\n                Browse\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"url\"\n                className=\"flex h-7 items-center gap-1.5 text-xs font-medium data-[state=active]:bg-white data-[state=active]:shadow-sm\"\n              >\n                <Link className=\"h-3 w-3\" />\n                URL/ID\n              </TabsTrigger>\n            </TabsList>\n\n            {/* Browse Tab Content - Stable Height with overflow protection */}\n            <TabsContent value=\"browse\" className=\"mt-0 flex min-h-0 flex-1 flex-col space-y-2 overflow-hidden\">\n              {/* Breadcrumb Navigation - Compact with improved overflow handling */}\n              <Card className=\"border-muted/50 bg-muted/20 flex-shrink-0\">\n                <CardContent className=\"p-2\">\n                  <div className=\"flex items-center gap-1 overflow-hidden text-xs\">\n                    <Home className=\"h-3 w-3 flex-shrink-0 text-blue-500\" />\n                    <div className=\"scrollbar-hide flex min-w-0 items-center gap-0.5 overflow-x-auto\">\n                      {currentPath.map((folder, index) => (\n                        <div key={folder.id} className=\"flex flex-shrink-0 items-center gap-0.5\">\n                          {index > 0 && <ChevronRight className=\"text-muted-foreground h-2 w-2 flex-shrink-0\" />}\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => navigateBack(index)}\n                            className={cn(\n                              'h-5 max-w-24 flex-shrink-0 px-1.5 text-xs transition-colors',\n                              index === currentPath.length - 1\n                                ? 'bg-background text-foreground font-medium shadow-sm'\n                                : 'text-muted-foreground hover:text-foreground hover:bg-muted/50',\n                            )}\n                          >\n                            <span className=\"truncate\" title={folder.name}>\n                              {folder.name}\n                            </span>\n                          </Button>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Search Section - Compact */}\n              <div className=\"flex-shrink-0 space-y-1\">\n                <div className=\"relative\">\n                  <Search className=\"text-muted-foreground absolute top-1/2 left-2 h-3 w-3 -translate-y-1/2 transform\" />\n                  <Input\n                    placeholder=\"Search folders by name...\"\n                    value={searchQuery}\n                    onChange={e => setSearchQuery(e.target.value)}\n                    className=\"bg-background border-muted-foreground/20 h-8 pl-8 text-xs focus:border-blue-500 focus:ring-blue-200\"\n                  />\n                </div>\n                {searchQuery && (\n                  <div className=\"text-muted-foreground px-1 text-xs\">\n                    {filteredFolders.length} folder{filteredFolders.length !== 1 ? 's' : ''} found\n                  </div>\n                )}\n              </div>\n\n              {/* Folder List - Fixed height with proper scrolling */}\n              <Card className=\"border-muted/50 min-h-0 flex-1 overflow-hidden\">\n                <CardContent className=\"h-full overflow-hidden p-0\">\n                  <ScrollArea className=\"h-full\">\n                    <div className=\"min-h-[250px] space-y-1 p-3\">\n                      {isLoadingFolders ? (\n                        <div className=\"flex min-h-[250px] flex-col items-center justify-center space-y-3\">\n                          <Loader2 className=\"h-6 w-6 animate-spin text-blue-500\" />\n                          <div className=\"space-y-1 text-center\">\n                            <p className=\"text-xs font-medium\">Loading folders...</p>\n                            <p className=\"text-muted-foreground text-xs\">Please wait while we fetch your folders</p>\n                          </div>\n                        </div>\n                      ) : filteredFolders.length === 0 ? (\n                        <div className=\"flex min-h-[250px] flex-col items-center justify-center space-y-3\">\n                          <div className=\"bg-muted/50 rounded-full p-3\">\n                            <Folder className=\"text-muted-foreground h-5 w-5\" />\n                          </div>\n                          <div className=\"space-y-1 text-center\">\n                            <p className=\"text-muted-foreground text-xs font-medium\">\n                              {searchQuery ? 'No folders found' : 'No folders available'}\n                            </p>\n                            <p className=\"text-muted-foreground text-xs\">\n                              {searchQuery ? 'Try adjusting your search terms' : 'This location is empty'}\n                            </p>\n                          </div>\n                        </div>\n                      ) : (\n                        <>\n                          {filteredFolders.slice(0, 15).map(folder => (\n                            <div\n                              key={folder.id}\n                              className={cn(\n                                'group relative flex items-center gap-2 overflow-hidden rounded-lg border p-2 transition-all duration-200 hover:shadow-sm',\n                                selectedFolderId === folder.id\n                                  ? 'border-blue-200 bg-blue-50 shadow-sm ring-1 ring-blue-200/50 dark:border-blue-800 dark:bg-blue-950/30'\n                                  : 'border-muted hover:border-muted-foreground/30 hover:bg-muted/30',\n                              )}\n                            >\n                              {/* Action Buttons - Always visible with sufficient reserved space */}\n                              <div className=\"ml-2 flex w-[75px] flex-shrink-0 items-center justify-end gap-1\">\n                                <Button\n                                  size=\"sm\"\n                                  onClick={e => {\n                                    e.stopPropagation()\n                                    handleFolderSelect(folder)\n                                  }}\n                                  className={cn(\n                                    'h-6 w-6 p-0 text-xs transition-all',\n                                    selectedFolderId === folder.id\n                                      ? 'bg-blue-600 text-white hover:bg-blue-700'\n                                      : 'bg-primary hover:bg-primary/90 text-primary-foreground',\n                                  )}\n                                >\n                                  {selectedFolderId === folder.id ? (\n                                    <Check className=\"h-3 w-3\" />\n                                  ) : (\n                                    <Plus className=\"h-3 w-3\" />\n                                  )}\n                                </Button>\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"ghost\"\n                                  onClick={e => {\n                                    e.stopPropagation()\n                                    navigateToFolder(folder)\n                                  }}\n                                  className=\"h-6 w-6 p-0 opacity-60 hover:opacity-100\"\n                                  title=\"Open folder\"\n                                >\n                                  <FolderOpen className=\"h-3 w-3\" />\n                                </Button>\n                              </div>\n\n                              {/* Folder Info - Strict width constraint to ensure buttons are always visible */}\n                              <div className=\"max-w-[calc(100%-95px)] min-w-0 flex-1 overflow-hidden\">\n                                <div className=\"flex items-center gap-1 overflow-hidden\">\n                                  <h4 className=\"min-w-0 flex-1 truncate text-xs font-medium\" title={folder.name}>\n                                    {folder.name}\n                                  </h4>\n                                  {folder.isShared && (\n                                    <Badge\n                                      variant=\"outline\"\n                                      className=\"flex flex-shrink-0 items-center gap-1 border-green-200 bg-green-50 px-1 py-0 text-xs text-green-700\"\n                                    >\n                                      <Users className=\"h-2 w-2\" />S\n                                    </Badge>\n                                  )}\n                                </div>\n                                {folder.path && (\n                                  <p\n                                    className=\"text-muted-foreground mt-0.5 truncate text-xs opacity-70\"\n                                    title={folder.path}\n                                  >\n                                    {folder.path}\n                                  </p>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n\n                          {filteredFolders.length > 15 && (\n                            <div className=\"border-muted border-t py-3 text-center\">\n                              <p className=\"text-muted-foreground text-xs\">\n                                Showing first 15 of {filteredFolders.length} folders\n                              </p>\n                              <p className=\"text-muted-foreground mt-1 text-xs\">Use search to find specific folders</p>\n                            </div>\n                          )}\n                        </>\n                      )}\n                    </div>\n                  </ScrollArea>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* URL Tab Content - Fixed height with scrolling */}\n            <TabsContent value=\"url\" className=\"mt-0 flex min-h-0 flex-1 flex-col overflow-hidden\">\n              <div className=\"space-y-4 overflow-y-auto pr-1\">\n                {/* Input Section - Compact */}\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center gap-2\">\n                    <ExternalLink className=\"h-3 w-3 text-blue-500\" />\n                    <Label htmlFor=\"drive-url\" className=\"text-xs font-medium\">\n                      Google Drive URL or Folder ID\n                    </Label>\n                  </div>\n\n                  <Input\n                    id=\"drive-url\"\n                    placeholder=\"Paste Google Drive URL or folder ID here...\"\n                    value={urlInput}\n                    onChange={e => setUrlInput(e.target.value)}\n                    className={cn(\n                      'h-9 text-xs transition-all duration-200',\n                      parsedResult.isValid && 'border-green-500 focus:border-green-600',\n                      urlInput && !parsedResult.isValid && 'border-red-500 focus:border-red-600',\n                      !urlInput && 'border-muted-foreground/20',\n                    )}\n                  />\n\n                  {/* Format Examples - Compact */}\n                  <Card className=\"border-muted/50 bg-muted/20\">\n                    <CardContent className=\"p-3\">\n                      <p className=\"text-muted-foreground mb-2 text-xs font-medium\">Supported formats:</p>\n                      <div className=\"space-y-1\">\n                        {[\n                          'Full URLs: drive.google.com/drive/folders/FOLDER_ID',\n                          'Sharing links: drive.google.com/folders/FOLDER_ID?usp=sharing',\n                          'Direct folder IDs: 1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms',\n                        ].map((example, index) => (\n                          <div key={index} className=\"text-muted-foreground flex items-start gap-2 text-xs\">\n                            <div className=\"bg-muted-foreground mt-1.5 h-0.5 w-0.5 flex-shrink-0 rounded-full\" />\n                            <span className=\"leading-relaxed break-all\">{example}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n\n                {/* URL Parsing Results - Compact */}\n                {urlInput && (\n                  <div className=\"space-y-3\">\n                    {parsedResult.isValid ? (\n                      <Card className=\"border-green-200 bg-green-50/50 dark:border-green-800 dark:bg-green-950/20\">\n                        <CardContent className=\"p-3\">\n                          <div className=\"flex items-start gap-2\">\n                            <div className=\"flex-shrink-0 rounded-full bg-green-100 p-0.5 dark:bg-green-900/50\">\n                              <Check className=\"h-3 w-3 text-green-600 dark:text-green-400\" />\n                            </div>\n                            <div className=\"flex-1 space-y-2\">\n                              <div>\n                                <h4 className=\"text-xs font-medium text-green-800 dark:text-green-200\">\n                                  Valid Format Detected\n                                </h4>\n                                <p className=\"mt-0.5 text-xs text-green-700 dark:text-green-300\">\n                                  The URL has been successfully parsed\n                                </p>\n                              </div>\n\n                              <Card className=\"border-green-200 bg-white/60 dark:border-green-700 dark:bg-green-900/20\">\n                                <CardContent className=\"p-2\">\n                                  <div className=\"mb-1 flex items-center gap-1\">\n                                    <Shield className=\"h-2.5 w-2.5 text-green-600\" />\n                                    <span className=\"text-xs font-medium text-green-800 dark:text-green-200\">\n                                      Extracted Folder ID\n                                    </span>\n                                  </div>\n                                  <code className=\"block font-mono text-xs break-all text-green-700 dark:text-green-300\">\n                                    {parsedResult.folderId}\n                                  </code>\n                                </CardContent>\n                              </Card>\n\n                              {!validationResult && (\n                                <Button\n                                  size=\"sm\"\n                                  onClick={() => validateFolderId(parsedResult.folderId!)}\n                                  disabled={isValidating}\n                                  className=\"h-8 w-full bg-green-600 text-white hover:bg-green-700\"\n                                >\n                                  {isValidating ? (\n                                    <>\n                                      <Loader2 className=\"mr-1 h-3 w-3 animate-spin\" />\n                                      Validating access...\n                                    </>\n                                  ) : (\n                                    <>\n                                      <ExternalLink className=\"mr-1 h-3 w-3\" />\n                                      Validate Folder Access\n                                    </>\n                                  )}\n                                </Button>\n                              )}\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ) : (\n                      <Card className=\"border-red-200 bg-red-50/50 dark:border-red-800 dark:bg-red-950/20\">\n                        <CardContent className=\"p-3\">\n                          <div className=\"flex items-start gap-2\">\n                            <div className=\"flex-shrink-0 rounded-full bg-red-100 p-0.5 dark:bg-red-900/50\">\n                              <AlertCircle className=\"h-3 w-3 text-red-600 dark:text-red-400\" />\n                            </div>\n                            <div>\n                              <h4 className=\"text-xs font-medium text-red-800 dark:text-red-200\">Invalid URL Format</h4>\n                              <p className=\"mt-0.5 text-xs text-red-700 dark:text-red-300\">\n                                Please check the URL format and try again. Make sure it&apos;s a valid Google Drive\n                                folder URL or ID.\n                              </p>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    )}\n\n                    {/* Validation Results - Compact */}\n                    {validationResult && (\n                      <Card\n                        className={cn(\n                          'border transition-all duration-200',\n                          validationResult.isValid\n                            ? 'border-blue-200 bg-blue-50/50 dark:border-blue-800 dark:bg-blue-950/20'\n                            : 'border-red-200 bg-red-50/50 dark:border-red-800 dark:bg-red-950/20',\n                        )}\n                      >\n                        <CardContent className=\"p-3\">\n                          <div className=\"flex items-start gap-2\">\n                            <div\n                              className={cn(\n                                'flex-shrink-0 rounded-full p-0.5',\n                                validationResult.isValid\n                                  ? 'bg-blue-100 dark:bg-blue-900/50'\n                                  : 'bg-red-100 dark:bg-red-900/50',\n                              )}\n                            >\n                              {validationResult.isValid ? (\n                                <Check className=\"h-3 w-3 text-blue-600 dark:text-blue-400\" />\n                              ) : (\n                                <AlertCircle className=\"h-3 w-3 text-red-600 dark:text-red-400\" />\n                              )}\n                            </div>\n\n                            <div className=\"flex-1 space-y-2\">\n                              <div>\n                                <h4\n                                  className={cn(\n                                    'text-xs font-medium',\n                                    validationResult.isValid\n                                      ? 'text-blue-800 dark:text-blue-200'\n                                      : 'text-red-800 dark:text-red-200',\n                                  )}\n                                >\n                                  {validationResult.isValid ? 'Folder Access Confirmed' : 'Access Validation Failed'}\n                                </h4>\n                                <p\n                                  className={cn(\n                                    'mt-0.5 text-xs',\n                                    validationResult.isValid\n                                      ? 'text-blue-700 dark:text-blue-300'\n                                      : 'text-red-700 dark:text-red-300',\n                                  )}\n                                >\n                                  {validationResult.isValid\n                                    ? `Successfully connected to: \"${validationResult.folderName}\"`\n                                    : validationResult.error}\n                                </p>\n                              </div>\n\n                              {validationResult.isValid && (\n                                <Card className=\"border-blue-200 bg-white/60 dark:border-blue-700 dark:bg-blue-900/20\">\n                                  <CardContent className=\"p-2\">\n                                    <div className=\"mb-2 flex items-center gap-1 overflow-hidden\">\n                                      <Folder className=\"h-3 w-3 flex-shrink-0 text-blue-600\" />\n                                      <span\n                                        className=\"min-w-0 truncate text-xs font-medium text-blue-800 dark:text-blue-200\"\n                                        title={validationResult.folderName}\n                                      >\n                                        {validationResult.folderName}\n                                      </span>\n                                    </div>\n                                    <Button\n                                      size=\"sm\"\n                                      onClick={handleUrlSelect}\n                                      className=\"h-8 w-full bg-blue-600 text-white hover:bg-blue-700\"\n                                    >\n                                      <Check className=\"mr-1 h-3 w-3\" />\n                                      Select This Folder\n                                    </Button>\n                                  </CardContent>\n                                </Card>\n                              )}\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    )}\n                  </div>\n                )}\n              </div>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"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","ignoreList":[]}